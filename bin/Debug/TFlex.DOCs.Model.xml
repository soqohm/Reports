<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TFlex.DOCs.Model</name>
    </assembly>
    <members>
        <member name="T:TFlex.DOCs.Model.Access.AccessCommand">
            <summary>
            Операция
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessCommand.Id">
            <summary>
            Возвращает Id операции
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessCommand.Name">
            <summary>
            Возвращает наименование операции
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessCommand.Type">
            <summary>
            Возвращает тип доступа операции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessCommand.Equals(System.Object)">
            <summary>
            Определяет, равны ли значения этого экземпляра и указанного объекта
            </summary>
            <param name="obj">Операция для сравнения с данным экземпляром</param>
            <returns>Значение true, если команды равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessCommand.GetHashCode">
            <summary>
            Возвращает хэш-код для этой операции
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessCommand.op_Equality(TFlex.DOCs.Model.Access.AccessCommand,TFlex.DOCs.Model.Access.AccessCommand)">
            <summary>
            Определяет, равны ли две указанные операции
            </summary>
            <param name="command1">Первая операция для сравенения</param>
            <param name="command2">Вторая операция для сравнения</param>
            <returns>Значение true, если операции равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessCommand.op_Inequality(TFlex.DOCs.Model.Access.AccessCommand,TFlex.DOCs.Model.Access.AccessCommand)">
            <summary>
            Определяет, различаются ли две указанные операции
            </summary>
            <param name="command1">Первая операция для сравнения</param>
            <param name="command2">Вторая операция для сравнения</param>
            <returns>Значение true, если операции не равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessCommand.ToString">
            <summary>
            Возвращает строковое представление для данной операции
            </summary>
            <returns>Строковое представление текущей операции</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Access.AccessCommandState">
            <summary>
            Представляет возможные состояния операций доступа
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessCommandState.NotSet">
            <summary>
            Не установлено
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessCommandState.Allowed">
            <summary>
            Разрешено
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessCommandState.Forbidden">
            <summary>
            Запрещено
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Access.ReferenceAccessFilters">
            <summary>
            Фильтры доступа на справочник
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.ReferenceAccessFilters.#ctor(TFlex.DOCs.Model.ReferenceInfo)">
            <summary>
            Создает новый экземпляр класса для указанного справочника
            </summary>
            <param name="reference">Описание справочника</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ReferenceAccessFilters.Reference">
            <summary>
            Возвращает описание справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ReferenceAccessFilters.IsModified">
            <summary>
            Возвращает значение, указывающее, были ли модифицированы фильтры справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.ReferenceAccessFilters.GetFilter(TFlex.DOCs.Model.References.Users.UserReferenceObject)">
            <summary>
            Возвращает фильтр для указанного объекта справочника "Группы и пользователи"
            </summary>
            <param name="userObject">Объект справочника "Группы и пользователи"</param>
            <returns>Фильтр для указанного объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.ReferenceAccessFilters.SetFilter(TFlex.DOCs.Model.References.Users.UserReferenceObject,TFlex.DOCs.Model.Search.Filter)">
            <summary>
            Задает указанный фильтр для заданного объекта справочника "Группы и пользователи"
            </summary>
            <param name="userObject">Объект справочника "Группы и пользователи"</param>
            <param name="filter">Фильтр</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.ReferenceAccessFilters.RemoveFilter(TFlex.DOCs.Model.References.Users.UserReferenceObject)">
            <summary>
            Удаляет фильтр для указанного объекта справочника "Группы и пользователи"
            </summary>
            <param name="userObject">Объект справочника "Группы и пользователи"</param>
            <returns>Значение true, если фильтр удален; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.ReferenceAccessFilters.Save">
            <summary>
            Сохраняет изменения фильтров доступа справочника
            </summary>
            <returns>Значение true, если изменения успешно сохранены; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.ReferenceAccessFilters.Clear">
            <summary>
            Очищает фильтры доступа справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.ReferenceAccessFilters.GetEnumerator">
            <summary>
            Возвращает перечислитель пар "Пользователь - фильтр" для справочника
            </summary>
            <returns>Перечислитель пар "Пользователь - фильтр" для справочника</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Access.AccessGroup">
            <summary>
            Группа прав доступа
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessGroup.#ctor">
            <summary>
            Инициализирует новый экземпляр класса AccessGroup
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessGroup.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Инициализирует новый экземпляр класса AccessGroup
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessGroup.#ctor(TFlex.DOCs.Model.Access.AccessGroup)">
            <summary>
            Инициализирует новый экземпляр класса AccessGroup на основании другого экземпляра
            </summary>
            <param name="source">Экземпляр, на основании которого инициализируется новый экземпляр</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessGroup.Id">
            <summary>
            Возвращает Id доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessGroup.Guid">
            <summary>
            Возвращает Guid доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessGroup.Name">
            <summary>
            Возвращает/задает наименование доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessGroup.Type">
            <summary>
            Возвращает/задает тип доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessGroup.IsTemporary">
            <summary>
            Возвращает/задает значение, указывающее, является ли доступ особым
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessGroup.IsModified">
            <summary>
            Возвращает значение, указывающее, был ли доступ изменен
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessGroup.SetIsModifiedOn">
            <summary>
            Установить признак "Изменена" для группы прав доступа
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessGroup.SetCommandState(TFlex.DOCs.Model.Access.AccessCommand,TFlex.DOCs.Model.Access.AccessCommandState)">
            <summary>
            Установливает состояние операции доступа
            </summary>
            <param name="command">Операция доступа</param>
            <param name="state">Состояние операции доступа</param>
            <returns>Значение true, если состояние операции было изменено; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessGroup.IsAllowed(TFlex.DOCs.Model.Access.AccessCommand)">
            <summary>
            Проверяет, является ли операция разрешенной
            </summary>
            <param name="command">Операция</param>
            <returns>Значение true, если состояние операции доступа - "Разрешено"; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessGroup.IsForbidden(TFlex.DOCs.Model.Access.AccessCommand)">
            <summary>
            Проверяет, что операция не является разрешенной
            </summary>
            <param name="command">Операция</param>
            <returns>Значение false, если состояние операции доступа - "Разрешено"; в противном случае - true</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessGroup.GetCommandState(TFlex.DOCs.Model.Access.AccessCommand)">
            <summary>
            Возвращает состояние операции доступа
            </summary>
            <param name="command">Операция</param>
            <returns>Состояние операции</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessGroup.CanEdit">
            <summary>
            Возвращает значение, указывающее, разрешено ли редактирование доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessGroup.CanDelete">
            <summary>
            Возвращает значение, указывающее, разрешено ли удаление доступа
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessGroup.ToString">
            <summary>
            Возвращает строковое представление текущего доступа
            </summary>
            <returns>Строковое представление текущего доступа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessGroup.BeginChanges">
            <summary>
            Переводит доступ в состояние редактирования
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessGroup.EndChanges">
            <summary>
            Завершает редактирование доступа
            </summary>
            <returns>Значение true, если редактирование завершено успешно; иначе - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessGroup.CancelChanges">
            <summary>
            Отменяет сделанные изменения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessGroup.Delete">
            <summary>
            Удаляет доступ
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessGroup.Changing">
            <summary>
            Возвращает значение, указывающее, находится ли доступ в состоянии редактирования
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessGroup.GetEnumerator">
            <summary>
            Возвращает перечислитель объектов AccessGroupCommand для текущего доступа
            </summary>
            <returns>Перечислитель объектов AccessGroupCommand</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessGroup.GetGroups">
            <summary>
            Возвращает список всех доступов в системе
            </summary>
            <returns>Список всех доступов в системе</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessGroup.GetGroups(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Возвращает список всех доступов в системе
            </summary>
            <returns>Список всех доступов в системе</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Access.AccessGroupCommand">
            <summary>
            Операция доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessGroupCommand.Command">
            <summary>
            Возвращает операцию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessGroupCommand.State">
            <summary>
            Возвращает состояние операции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessGroupCommand.ToString">
            <summary>
            Возвращает строковое представление текущей операции доступа
            </summary>
            <returns>Строковое представление текущей операции доступа</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Access.AccessInfo">
            <summary>
            Представляет информацию о назначении доступа пользователю или группе пользователей
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessInfo.#ctor(TFlex.DOCs.Model.References.Users.UserReferenceObject,TFlex.DOCs.Model.Access.AccessGroup,TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Common.AccessInheritedFrom,System.Int32,System.Int32,TFlex.DOCs.Common.AccessDirection,TFlex.DOCs.Common.AccessCommandType,TFlex.DOCs.Common.AccessTypeID,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="owner">Правообладатель</param>
            <param name="access">Доступы</param>
            <param name="link">Описание связи</param>
            <param name="inheritedFrom">От кого унаследован доступ</param>
            <param name="xAccessObjectID">Владелец прав доступа (справочник, объект-владелец, стадия, автор), зависит от значения поля InheritedFrom</param>
            <param name="xReferenceID">Справочник, которому принадлежит объект доступа</param>
            <param name="accessDirection">Направление действия группы прав доступа</param>
            <param name="commandType">Тип команды</param>
            <param name="accessTypeID">Данное свойство заполняется редактором прав доступа и указывает, для какой категории редактируется доступ</param>
            <param name="primaryKey">Первичный ключ или 0</param>
            <param name="autoGeneratePK">Генерировать автоматическое значение первичного ключа при первом обращении, если задано значение 0</param>
            <param name="editable">Доступно ли редактирование назначения доступа</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessInfo.#ctor(System.Object)">
            <summary>
            Создать экземпляр класса, заполнить его из указанного объекта-источника
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessInfo.Editable">
            <summary>
            Доступно ли редактирование данного доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessInfo.Owner">
            <summary>
            Возвращает объект справочника "Группы и пользователи"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessInfo.Access">
            <summary>
            Возвращает доступ
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessInfo.Link">
            <summary>
            Возвращает связь
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessInfo.StageID">
            <summary>
            Идентификатор стадии или 0
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessInfo.IsAdded">
            <summary>
            Возвращает значение, указывающее, является ли объект добавленным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessInfo.IsModified">
            <summary>
            Возвращает значение, указывающее, является ли объект изменённым
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessInfo.InheritedFrom">
            <summary>
            От кого унаследованы права доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessInfo.AccessDirection">
            <summary>
            Направление действия группы прав доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessInfo.xAccessObjectID">
            <summary>
            Владелец прав доступа (справочник, объект-владелец, стадия, автор), зависит от значения поля InheritedFrom
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessInfo.xReferenceID">
            <summary>
            Справочник, которому принадлежит объект с правами доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessInfo.CommandType">
            <summary>
            Данное свойство заполняется редактором прав доступа и указывает, для какого типа команд редактируется доступ
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessInfo.AccessTypeID">
            <summary>
            Данное свойство заполняется редактором прав доступа и указывает, для какой категории редактируется доступ
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessInfo.AutoGeneratePK">
            <summary>
            Генерировать автоматическое значение первичного ключа
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessInfo._genID">
            <summary>
            Генератор первичного ключа для модели
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessInfo._primaryKey">
            <summary>
            Первичный ключ из модели (меньше нуля) или из базы (больше нуля)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessInfo.PrimaryKey">
            <summary>
            Первичный ключ из модели (меньше нуля) или из базы (больше нуля)
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessInfo.Clear">
            <summary>
            Очистить поля класса
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessInfo.Assign(System.Object)">
            <summary>
            Скопировать в текущий объект поля из другого объекта.
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessInfo.Clone">
            <summary>
            Создать точную копию экземпляра класса
            </summary>
            <returns>Точная копия экземпляра класса</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessInfo.ResetAccessGroupKey">
            <summary>
            "Сбросить" группу прав доступа на новую копию (для особых групп, которые были унаследованы)
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessInfo.CanBeEditable(TFlex.DOCs.Common.AccessTypeID,System.Boolean,System.Boolean)">
            <summary>
            Можно ли данный доступ сделать редактируемым (Own)
            </summary>
            <param name="editorTypeID">Тип прав доступа в менеджере</param>
            <param name="isInherited">Был ли унаследован изменяемый доступ</param>
            <param name="isStageEditor">Редактируются ли доступы стадии</param>
            <returns>true - в данном менеджере редактирование разрешено</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessInfo.MustResetPrimaryKey(TFlex.DOCs.Common.AccessTypeID,System.Boolean,System.Boolean)">
            <summary>
            Требуется ли сбросить информацию о первичном ключе у записи доступов
            </summary>
            <param name="editorTypeID">Тип прав доступа в менеджере</param>
            <param name="inherited">Если текущий доступ унаследован, то true</param>
            <returns>true - ключ требуется сбросить</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessInfo.GetHashCode">
            <summary>
            Получить 32-битный хэш-код экземпляра класса
            </summary>
            <returns>32-битный хэш-код экземпляра класса</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessInfo.Equals(System.Object)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>true - объекты тождественны или равны</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Access.AccessManager">
            <summary>
            Менеджер прав доступа.Служит для управления доступами на объект, стадию, справочник или систему
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessManager._isInherit">
            <summary>
            Доступ унаследовани
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessManager._wasInherit">
            <summary>
            Был ли доступ унаследован
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessManager._isModified">
            <summary>
            Доступ изменён
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessManager._ownAccess">
            <summary>
            Список явно назначенных доступов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessManager._ownAccessCopy">
            <summary>
            Копия списка явно назначенных доступов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessManager._deletedAccess">
            <summary>
            Список доступов для удаления
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessManager._inheritAccess">
            <summary>
            Список унаследованных доступов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessManager._inheritAccessOriginal">
            <summary>
            Первоначальный список унаследованных доступов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessManager._parentAccessObjectId">
            <summary>
            ИДентификатор объекта, от которого унаследован доступ
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessManager._parentAccessObject">
            <summary>
            Объект, от которого унаследован доступ
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessManager._inheritAccessManager">
            <summary>
            Менеджер прав доступа, от которого произошло наследование
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessManager._connection">
            <summary>
            Соединение с сервером приложений
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessManager._keysConverter">
            <summary>
            Старый первичный ключ - новый первичный ключ
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessManager.AccessTypeID">
            <summary>
            Тип прав доступа в менеджере
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessManager.CommandType">
            <summary>
            Тип команд доступа
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessManager.Options">
            <summary>
            Режим чтения прав доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessManager.AllowDuplicates">
            <summary>
            Разрешено ли создавать дубликаты записей (допускается только для доступов с поддержкой направления действия)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessManager.Reference">
            <summary>
            Возвращает информацию о справочнике
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessManager.Object">
            <summary>
            Возвращает объект справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessManager.Stage">
            <summary>
            Возвращает стадию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessManager.ParentAccessObject">
            <summary>
            Возвращает родительский объект, от которого наследуется доступ текущего объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessManager.ReferenceId">
            <summary>
            Возвращает Id справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessManager.ObjectId">
            <summary>
            Возвращает Id объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessManager.StageId">
            <summary>
            Возвращает Id стадии
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessManager.IsModified">
            <summary>
            Возвращает значение, указывающее, был ли изменен доступ
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessManager.IsInherit">
            <summary>
            Возвращает значение, указывающее, является ли доступ косвенным (унаследованным)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessManager.HasParentAccessObject">
            <summary>
            Возвращает значение, указывающее, существует ли родительский объект, от которого может наследоваться доступ
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessManager.InheritAccess">
            <summary>
            Возвращает AccessManager, от которого может наследоваться доступ
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.GetSystemAccess">
            <summary>
            Создает экземпляр типа для управления доступом к системе
            </summary>
            <returns>Ссылка на экземпляр AccessManager</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.GetSystemAccess(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает экземпляр типа для управления доступом к системе
            </summary>
            <returns>Ссылка на экземпляр AccessManager</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.GetReferenceAccess(TFlex.DOCs.Model.ReferenceInfo)">
            <summary>
            Создает экземпляр типа для управления доступом к справочнику
            </summary>
            <param name="reference">Описание справочника</param>
            <returns>Ссылка на экземпляр AccessManager</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.GetReferenceObjectAccess(TFlex.DOCs.Model.ReferenceInfo)">
            <summary>
            Создает экземпляр типа для управления доступом к объектам справочника
            </summary>
            <param name="reference">Описание справочника</param>
            <returns>Ссылка на экземпляр AccessManager</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.GetReferenceObjectAccess(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Common.AccessRightsLoadOptions)">
            <summary>
            Создает экземпляр типа для управления доступом к определенному объекту справочника
            </summary>
            <param name="referenceObject">Объект справочника</param>
            <returns>Ссылка на экземпляр AccessManager</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.GetStageAccess(TFlex.DOCs.Model.Stages.Stage)">
            <summary>
            Создает экземпляр типа для управления доступом к стадии
            </summary>
            <param name="stage">Стадия</param>
            <returns>Ссылка на экземпляр AccessManager</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.#ctor(TFlex.DOCs.Model.ServerConnection,TFlex.DOCs.Model.ReferenceInfo,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Stages.Stage,TFlex.DOCs.Common.AccessCommandType,TFlex.DOCs.Common.AccessTypeID,System.Boolean,TFlex.DOCs.Common.AccessRightsLoadOptions)">
            <summary>
            Создать экземпляр менеджера прав доступа
            </summary>
            <param name="connection">Соединение с базой данных</param>
            <param name="reference">Справочник</param>
            <param name="obj">Объект</param>
            <param name="stage">Стадия</param>
            <param name="commandType">Тип команд доступа</param>
            <param name="accessType">Тип прав доступа</param>
            <param name="getParentObjectId">Надо ли отыскать родителький объект с доступами</param>
            <param name="options">Режим чтения прав доступа</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.MakeInheritedFrom(TFlex.DOCs.Model.Access.AccessInfo,TFlex.DOCs.Common.AccessTypeID,TFlex.DOCs.Common.AccessInheritedFrom,System.Boolean)">
            <summary>
            Метод создаёт точную копию описания доступов, но при этом задаёт новый источник наследования прав доступа
            </summary>
            <param name="access">Описание доступов</param>
            <param name="editorTypeID">Тип прав доступа в менеджере</param>
            <param name="from">Новый источник наследования прав доступа</param>
            <param name="inherited">Если текущий доступ унаследован, то true</param>
            <returns>Копия экземпляра класса с указанным источником наследования прав доступа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.ParseOwnAccesses(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Обработать собственные доступы
            </summary>
            <param name="isInherit">Режим наследования у списка</param>
            <param name="isAdded">Были ли добавлены новые записи</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.PrepareToSave">
            <summary>
            Подготовить собственные доступы к сохранению в базу данных
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.ReplacePrimaryKeys">
            <summary>
            Выполнить автозамену первичных ключей
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.ReplacePrimaryKey(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Задать замену первичного ключа
            </summary>
            <param name="oldKey">Старый ключ</param>
            <param name="newKey">Новый ключ</param>
            <param name="replaceInList">true - сразу заменить ключ в коллекции описаний доступов</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.SetInherit(System.Boolean,System.Boolean)">
            <summary>
            Задает наследование доступа от родительского объекта
            </summary>
            <param name="inherit">Значение true, чтобы наследовать доступ родительского объекта; в противном случае - значение false</param>
            <param name="copyInheritAccess">Значение true, чтобы скопировать настройки доступа родительского объекта; в противном случае - значение false</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.ExistsAccessInfo(System.Collections.Generic.List{TFlex.DOCs.Model.Access.AccessInfo},System.Nullable{System.Int32},TFlex.DOCs.Model.References.Users.UserReferenceObject,TFlex.DOCs.Model.Access.AccessGroup,TFlex.DOCs.Model.Structure.ParameterGroup,System.Nullable{TFlex.DOCs.Common.AccessCommandType},System.Nullable{TFlex.DOCs.Common.AccessTypeID},System.Nullable{TFlex.DOCs.Common.AccessDirection},System.Nullable{System.Int32})">
            <summary>
            Проверить наличие подходящей группы прав доступа
            </summary>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.FindAccessInfo(System.Collections.Generic.List{TFlex.DOCs.Model.Access.AccessInfo},System.Nullable{System.Int32},TFlex.DOCs.Model.References.Users.UserReferenceObject,TFlex.DOCs.Model.Access.AccessGroup,TFlex.DOCs.Model.Structure.ParameterGroup,System.Nullable{TFlex.DOCs.Common.AccessCommandType},System.Nullable{TFlex.DOCs.Common.AccessTypeID},System.Nullable{TFlex.DOCs.Common.AccessDirection},System.Nullable{System.Int32})">
            <summary>
            Найти подходящую группу прав доступа
            </summary>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.FindAllAccessInfo(System.Collections.Generic.List{TFlex.DOCs.Model.Access.AccessInfo},TFlex.DOCs.Model.References.Users.UserReferenceObject,TFlex.DOCs.Model.Access.AccessGroup,TFlex.DOCs.Model.Structure.ParameterGroup,System.Nullable{TFlex.DOCs.Common.AccessCommandType},System.Nullable{TFlex.DOCs.Common.AccessTypeID},System.Nullable{TFlex.DOCs.Common.AccessDirection},System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.SetAccess(TFlex.DOCs.Model.References.Users.UserReferenceObject,TFlex.DOCs.Model.Access.AccessGroup)">
            <summary>
            Назначает доступ пользователю или группе пользователей
            </summary>
            <param name="owner">Пользователь или группа пользователей</param>
            <param name="group">Назначаемый доступ</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.SetAccess(System.Int32,TFlex.DOCs.Model.References.Users.UserReferenceObject,TFlex.DOCs.Model.Access.AccessGroup,TFlex.DOCs.Model.Access.AccessGroup,TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Common.AccessCommandType,TFlex.DOCs.Common.AccessTypeID,TFlex.DOCs.Common.AccessDirection,System.Nullable{TFlex.DOCs.Common.AccessDirection})">
            <summary>
            Назначает доступ пользователю или группе пользователей
            </summary>
            <param name="primaryKey">Первичный ключ или 0</param>
            <param name="owner">Пользователь или группа пользователей</param>
            <param name="group">Назначаемая группа прав доступа</param>
            <param name="oldGroup">Если задано значение, то поиск идёт по старой группе (пользователь выполнил её замену на новую группу доступов)</param>
            <param name="link">Связь</param>
            <param name="commandType">Тип команды</param>
            <param name="accessTypeID">Тип редактируемых прав доступа</param>
            <param name="accessDirection">Направление действия группы прав доступа</param>
            <param name="oldAccessDirection">Если задано значение, то поиск идёт по старому направлению действия (пользователь заменил его на новое)</param>
            <param name="stageID">Идентификатор стадии, если доступ настраивается для стадии</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.RemoveAccess(TFlex.DOCs.Model.References.Users.UserReferenceObject,TFlex.DOCs.Model.Access.AccessType,TFlex.DOCs.Common.AccessDirection)">
            <summary>
            Удаляет доступ, назначенный пользователю или группе пользователей
            </summary>
            <param name="owner">Пользователь или группа пользователей</param>
            <param name="type">Тип доступа</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.RemoveAccess(System.Nullable{System.Int32},TFlex.DOCs.Model.References.Users.UserReferenceObject,TFlex.DOCs.Model.Access.AccessGroup,TFlex.DOCs.Model.Access.AccessType,TFlex.DOCs.Model.Structure.ParameterGroup,System.Nullable{TFlex.DOCs.Common.AccessDirection})">
            <summary>
            Удаляет доступ, назначенный пользователю или группе пользователей
            </summary>
            <param name="primaryKey">Первичный ключ</param>
            <param name="owner">Пользователь или группа пользователей</param>
            <param name="type">Тип доступа</param>
            <param name="link">Связь</param>
            <param name="group">Удаляемая группа прав доступа или null, если удалить все найденные группы</param>
            <param name="accessDirection">Искомое направление действия для удаляемых прав доступа или null, если его не требуется учитывать</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.ValidateAccessType(TFlex.DOCs.Model.Structure.ParameterGroup,System.String,TFlex.DOCs.Model.Access.AccessType)">
            <summary>
            Проверить тип прав доступа
            </summary>
            <param name="link">Связь</param>
            <param name="paramName">Параметр</param>
            <param name="type">Тип прав доступа</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.Save">
            <summary>
            Сохраняет сделанные изменения
            </summary>
            <returns>Значение true, если изменения прошли успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.GetEnumerator">
            <summary>
            Возвращает перечислитель объектов AccessInfo
            </summary>
            <returns>Перечислитель объектов AccessInfo</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessManager.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Получить перечислитель объектов AccessInfo
            </summary>
            <returns>Перечислитель объектов AccessInfo</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Access.AccessRights">
            <summary>
            Служит для получения информации о правах доступа на объект, справочник или систему
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessRights.GetSystemAccess">
            <summary>
            Создает экземпляр типа для системы
            </summary>
            <returns>Ссылка на экземпляр AccessRights</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessRights.GetSystemAccess(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает экземпляр типа для системы
            </summary>
            <returns>Ссылка на экземпляр AccessRights</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessRights.GetReferenceAccess(TFlex.DOCs.Model.ReferenceInfo)">
            <summary>
            Создает экземпляр типа для справочника
            </summary>
            <param name="reference">Информация о справочнике</param>
            <returns>Ссылка на экземпляр AccessRights</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessRights.GetReferenceObjectAccess(TFlex.DOCs.Model.ReferenceInfo)">
            <summary>
            Создает экземпляр типа для объектов справочника
            </summary>
            <param name="reference">Информация о справочнике</param>
            <returns>Ссылка на экземпляр AccessRights</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessRights.GetReferenceObjectAccess(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает экземпляр типа для определенного объекта справочника
            </summary>
            <param name="referenceObject">Объект справочника</param>
            <returns>Ссылка на экземпляр AccessRights</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessRights.ReferenceId">
            <summary>
            Возвращает Id справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessRights.ObjectId">
            <summary>
            Возвращает Id объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessRights.Type">
            <summary>
            Возвращает тип доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessRights.IsInherit">
            <summary>
            Возвращает значение, указывающее, является ли доступ унаследованным
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessRights.IsAllowed(TFlex.DOCs.Model.Access.AccessCommand,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Проверяет, является ли операция разрешенной
            </summary>
            <param name="command">Операция</param>
            <param name="link">Связь (в случае, если проверяется доступ для связи)</param>
            <returns>Значение true, если операция разрешена; иначе - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessRights.GetCommandState(TFlex.DOCs.Model.Access.AccessCommand,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Возвращает состояние операции доступа
            </summary>
            <param name="command">Операция</param>
            <param name="link">Связь (в случае, если проверяется доступ для связи)</param>
            <returns>Состояние операции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessRights.IsCommandAllowed(TFlex.DOCs.Model.Access.AccessCommand)">
            <summary>
            Проверяет, является ли операция разрешенной
            </summary>
            <param name="command">Операция</param>
            <returns>Значение true, если операция разрешена; иначе - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessRights.IsCommandAllowed(TFlex.DOCs.Model.ServerConnection,TFlex.DOCs.Model.Access.AccessCommand)">
            <summary>
            Проверяет, является ли операция разрешенной
            </summary>
            <param name="command">Операция</param>
            <returns>Значение true, если операция разрешена; иначе - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessRights.IsCommandAllowed(TFlex.DOCs.Model.Access.AccessCommand,TFlex.DOCs.Model.ReferenceInfo)">
            <summary>
            Проверяет, является ли операция разрешенной
            </summary>
            <param name="command">Операция</param>
            <param name="reference">Информация о справочнике</param>
            <returns>Значение true, если операция разрешена; иначе - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessRights.IsCommandAllowed(TFlex.DOCs.Model.Access.AccessCommand,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Проверяет, является ли операция разрешенной
            </summary>
            <param name="command">Операция</param>
            <param name="referenceObject">Объект справочника</param>
            <returns>Значение true, если операция разрешена; иначе - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessRights.IsCommandAllowed(TFlex.DOCs.Model.Access.AccessCommand,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Проверяет, является ли операция разрешенной
            </summary>
            <param name="command">Операция</param>
            <param name="referenceObject">Объект справочника</param>
            <param name="link">Связь</param>
            <returns>Значение true, если операция разрешена; иначе - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Access.AccessType">
            <summary>
            Тип доступа
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessType._commands">
            <summary>
            Список команд
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessType._referenceAccessType">
            <summary>
            Тип доступа "Доступ для справочников"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessType._objectAccessType">
            <summary>
            Тип доступа "Доступ для объектов справочников"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessType._linkAccessType">
            <summary>
            Тип доступа "Доступ для связей"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessType._systemAccessType">
            <summary>
            Тип доступа "Доступ для всей системы"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Access.AccessType._stageAccessType">
            <summary>
            Тип доступа "Доступ для стадий"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessType.#ctor">
            <summary>
            Создать пустой экземпляр класса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessType.AccessTypeID">
            <summary>
            Тип прав доступа (содержимое колонки AccessTypeID таблицы xAccessRights)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessType.Type">
            <summary>
            Тип команд прав доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessType.Id">
            <summary>
            Возвращает идентификатор типа прав доступа (содержимое колонки AccessTypeID таблицы xAccessRights)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessType.IsSystem">
            <summary>
            Возвращает значение, указывающее, является ли тип доступа доступом для всей системы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessType.IsReference">
            <summary>
            Возвращает значение, указывающее, является ли тип доступа доступом для справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessType.IsObject">
            <summary>
            Возвращает значение, указывающее, является ли тип доступа доступом для объектов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessType.IsLink">
            <summary>
            Возвращает значение, указывающее, является ли тип доступа доступом для связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessType.IsStage">
            <summary>
            Возвращает значение, указывающее, является ли тип доступа доступом для стадии
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessType.Name">
            <summary>
            Возвращает наименование типа доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessType.Commands">
            <summary>
            Возвращает коллекцию операций данного типа доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessType.Item(System.Int32)">
            <summary>
            Получает операцию по ее Id
            </summary>
            <param name="commandId">Id операции</param>
            <returns>Операция</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessType.Item(TFlex.DOCs.Common.AccessCommandId)">
            <summary>
            
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessType.GetTypes">
            <summary>
            Возвращает список всех типов доступа в системе
            </summary>
            <returns>Список типов доступа</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessType.Reference">
            <summary>
            Возвращает тип доступа "Доступ для справочников"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessType.Object">
            <summary>
            Возвращает тип доступа "Доступ для объектов справочников"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessType.Stage">
            <summary>
            Возвращает тип доступа "Доступ для стадий"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessType.Link">
            <summary>
            Возвращает тип доступа "Доступ для связей"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.AccessType.System">
            <summary>
            Возвращает тип доступа "Доступ для всей системы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessType.GetGroups(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Возвращает список доступов данного типа
            </summary>
            <returns>Список доступов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessType.ToString">
            <summary>
            Возвращает строковое представление для текущего типа доступа
            </summary>
            <returns>Строковое представление для текущего типа доступа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.AccessType.GetGroups">
            <summary>
            Возвращает список доступов данного типа
            </summary>
            <returns>Список доступов</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Access.AccessDeniedException">
            <summary>
            Исключение, которое возникает при отсутствии доступа на выполнение какой-либо операции
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Access.LinkAccessType">
            <summary>
            Тип доступа "Доступ для связи"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.LinkAccessType.Name">
            <summary>
            Возвращает наименование типа доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.LinkAccessType.IsLink">
            <summary>
            Возвращает значение, указывающее, является ли тип доступа доступом для связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.LinkAccessType.Read">
            <summary>
            Возвращает операцию "Просмотр"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.LinkAccessType.Add">
            <summary>
            Возвращает операцию "Подключение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.LinkAccessType.Remove">
            <summary>
            Возвращает операцию "Отключение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.LinkAccessType.Groups">
            <summary>
            Возвращает ссылку на экземпляр класса AccessGroups
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Access.LinkAccessType.AccessGroups">
            <summary>
            Представляет набор системных доступов типа "Доступ для связи"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.LinkAccessType.AccessGroups.Full">
            <summary>
            Возвращает доступ "Полный"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.LinkAccessType.AccessGroups.Add">
            <summary>
            Возвращает доступ "Подключение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.LinkAccessType.AccessGroups.View">
            <summary>
            Возвращает доступ "Просмотр"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Access.ReferenceAccessType">
            <summary>
            Тип доступа "Доступ для справочника"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ReferenceAccessType.Name">
            <summary>
            Возвращает наименование типа доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ReferenceAccessType.IsReference">
            <summary>
            Возвращает значение, указывающее, является ли тип доступа доступом для справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ReferenceAccessType.ChangeStructure">
            <summary>
            Возвращает операцию "Изменение структуры"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ReferenceAccessType.ChangeAccess">
            <summary>
            Возвращает операцию "Изменение доступа"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ReferenceAccessType.Delete">
            <summary>
            Возвращает операцию "Удаление"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ReferenceAccessType.Export">
            <summary>
            Возвращает операцию "Экспорт справочников"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ReferenceAccessType.TablePaste">
            <summary>
            Возвращает операцию "Табличная вставка данных"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ReferenceAccessType.Display">
            <summary>
            Возвращает операцию "Отображение справочника"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ReferenceAccessType.ReferenceHideInCatalog">
            <summary>
            Возвращает операцию "Не отображать в каталоге"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ReferenceAccessType.Groups">
            <summary>
            Возвращает ссылку на экземпляр класса AccessGroups
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Access.ReferenceAccessType.AccessGroups">
            <summary>
            Представляет набор системных доступов типа "Доступ для справочника"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ReferenceAccessType.AccessGroups.Author">
            <summary>
            Возвращает доступ "Авторский"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ReferenceAccessType.AccessGroups.Administrate">
            <summary>
            Возвращает доступ "Административный"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ReferenceAccessType.AccessGroups.Edit">
            <summary>
            Возвращает доступ "Редакторский"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ReferenceAccessType.AccessGroups.View">
            <summary>
            Возвращает доступ "Просмотр"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Access.ObjectAccessType">
            <summary>
            Тип доступа "Доступ для объектов справочника"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.Name">
            <summary>
            Возвращает наименование типа доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.IsObject">
            <summary>
            Возвращает значение, указывающее, является ли тип доступа доступом для объектов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.Read">
            <summary>
            Возвращает операцию "Просмотр"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.Delete">
            <summary>
            Возвращает операцию "Удаление"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.Change">
            <summary>
            Возвращает операцию "Изменение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.CreateChildren">
            <summary>
            Возвращает операцию "Создание объектов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.Print">
            <summary>
            Возвращает операцию "Печать"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.ChangeAccess">
            <summary>
            Возвращает операцию "Изменение доступа"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.Copy">
            <summary>
            Возвращает операцию "Копирование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.ClearHistory">
            <summary>
            Возвращает операцию "Очистка корзины"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.ReadHistory">
            <summary>
            Возвращает операцию "Просмотр истории изменений" 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.ChangeStage">
            <summary>
            Возвращает операцию "Изменение стадии"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.ChangeSignature">
            <summary>
            Возвращает операцию "Установка подписи"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.EditSaveSignature">
            <summary>
            Возвращает операцию "Изменение с сохранением подписей"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.ChangeClass">
            <summary>
            Возвращает операцию "Изменение с сохранением подписей"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.Groups">
            <summary>
            Возвращает ссылку на экземпляр класса AccessGroups
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Access.ObjectAccessType.AccessGroups">
            <summary>
            Представляет набор системных доступов типа "Доступ для объектов справочника"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.AccessGroups.Author">
            <summary>
            Возвращает доступ "Авторский"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.AccessGroups.Administrate">
            <summary>
            Возвращает доступ "Административный" 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.AccessGroups.Edit">
            <summary>
            Возвращает доступ "Редакторский"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.ObjectAccessType.AccessGroups.View">
            <summary>
            Возвращает доступ "Просмотр"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.ObjectAccessType.Equals(System.Object)">
            <summary>
            Сравним с другим объектом только по типу прав доступа
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>true - тип прав доступа совпадает</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Access.ObjectAccessType.GetHashCode">
            <summary>
            Получить 32-битный хэш-код
            </summary>
            <returns>32-битный хэш-код</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Access.StageAccessType">
            <summary>
            Тип доступа "Доступ для стадий объектов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.StageAccessType.Name">
            <summary>
            Возвращает наименование типа доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.StageAccessType.AccessTypeID">
            <summary>
            Тип доступа "Доступ для объектов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.StageAccessType.IsStage">
            <summary>
            Возвращает значение, указывающее, является ли тип доступа доступом для стадий
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Access.SystemAccessType">
            <summary>
            Тип доступа "Доступ для всей системы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.SystemAccessType.Name">
            <summary>
            Возвращает наименование типа доступа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.SystemAccessType.IsSystem">
            <summary>
            Возвращает значение, указывающее, является ли тип доступа доступом для всей системы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.SystemAccessType.CreateReference">
            <summary>
            Возвращает операцию "Создание справочников"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.SystemAccessType.EditCommonWorkingPages">
            <summary>
            Возвращает операцию "Создание/изменение общих рабочих страниц"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.SystemAccessType.EditPersonalWorkingPages">
            <summary>
            Возвращает операцию "Создание/изменение личных рабочих страниц"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.SystemAccessType.EditCommonSearchConditions">
            <summary>
            Возвращает операцию "Создание/изменение общих условий поиска"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.SystemAccessType.EditPersonalSearchConditions">
            <summary>
            Возвращает операцию "Создание/изменение личных условий поиска"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.SystemAccessType.EditCommonFilters">
            <summary>
            Возвращает операцию "Создание/изменение общих фильтров"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.SystemAccessType.EditPersonalFilters">
            <summary>
            Возвращает операцию "Создание/изменение личных фильтров"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.SystemAccessType.EditCommonViews">
            <summary>
            Возвращает операцию "Создание/изменение общих видов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.SystemAccessType.EditPersonalViews">
            <summary>
            Возвращает операцию "Создание/изменение личных видов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.SystemAccessType.EditCommonCatalogs">
            <summary>
            Возвращает операцию "Создание/изменение общих каталогов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.SystemAccessType.EditPersonalCatalogs">
            <summary>
            Возвращает операцию "Создание/изменение личных каталогов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.SystemAccessType.EditConfigurations">
            <summary>
            Возвращает операцию "Создание/изменение конфигураций"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.SystemAccessType.EditEmailAccounts">
            <summary>
            Возвращает операцию "Создание/изменение учётных записей почты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.SystemAccessType.Groups">
            <summary>
            Возвращает ссылку на экземпляр класса AccessGroups
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Access.SystemAccessType.AccessGroups">
            <summary>
            Представляет набор системных доступов типа "Доступ для всей системы" 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.SystemAccessType.AccessGroups.Administrate">
            <summary>
            Возвращает доступ "Административный"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Access.SystemAccessType.AccessGroups.User">
            <summary>
            Возвращает доступ "Пользовательский"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Classes.ClassGroupSettings">
            <summary>
            Настройки подключения группы параметров к типу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassGroupSettings.IsInherit">
            <summary>
            Вовращает значение, указывающее, наследуются ли настройки от базового типа
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Classes.ClassObjectAttribute">
            <summary>
            Атрибут типа объектов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttribute.Attributes">
            <summary>
            Возвращает коллекцию атрибутов, к которой относится текущий атрибут
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttribute.Name">
            <summary>
            Возвращает уникальное имя атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttribute.IsSystem">
            <summary>
            Возвращает значение, указывающее, является ли атрибут системным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttribute.CanSerialize">
            <summary>
            Возвращает значение, указывающее, может ли атрибут быть сериализован
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttribute.CanChangeCaption">
            <summary>
            Возвращает значение, указывающее, можно ли изменить наименование атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttribute.Caption">
            <summary>
            Возвращает или задает наименование атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttribute.Value">
            <summary>
            Возвращает или задает значение атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttribute.IsReadOnly">
            <summary>
            возвращает значение, указывающее, является ли атрибут доступным только для чтения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObjectAttribute.SetModified">
            <summary>
            Устанавливает флаг, указывающий, что коллекция атрибутов изменена
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttribute.CanRemove">
            <summary>
            Возвращает значение, указвающее, возможно ли удаление атрибута
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObjectAttribute.Clone">
            <summary>
            Создает копию текущего атрибута
            </summary>
            <returns>Новый атрибут</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObjectAttribute.ToString">
            <summary>
            Возвращает строковое представление атрибута
            </summary>
            <returns>Строковое представление атрибута</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Classes.ClassObjectAttribute`1">
            <summary>
            Обобщенная версия атрибута типа объектов справочника
            </summary>
            <typeparam name="T">Тип значения атрибута</typeparam>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObjectAttribute`1.#ctor">
            <summary>
            Создает новый экземпляр атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttribute`1.CanChangeCaption">
            <summary>
            Возвращает значение, указывающее, можно ли изменить наименование атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttribute`1.IsSystem">
            <summary>
            Возвращает значение, указывающее, является ли атрибут системным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttribute`1.Caption">
            <summary>
            Возвращает или задает наименование атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttribute`1.Value">
            <summary>
            Возвращает или задает значение атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttribute`1.CanRemove">
            <summary>
            Возвращает значение, указывающее, возможно ли удаление атрибута
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObjectAttribute`1.Clone">
            <summary>
            Создает копию текущего атрибута
            </summary>
            <returns>Новый атрибут</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Classes.ClassObjectAttributes">
            <summary>
            Коллекция атрибутов типа объектов справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObjectAttributes.AddAttribute(System.String,TFlex.DOCs.Model.Classes.ClassObjectAttribute)">
            <summary>
            Добавляет в коллекцию указанный атрибут
            </summary>
            <param name="name">Уникальное имя атрибута</param>
            <param name="attr">Добавляемый атрибут</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObjectAttributes.RemoveAttribute(System.String)">
            <summary>
            Удаляет из коллекции атрибут с указанным именем
            </summary>
            <param name="name">Уникальное имя атрибута</param>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObjectAttributes.IsValid(System.String)">
            <summary>
            Возвращает значение, указывающее, допустимо ли заданное имя для атрибута
            </summary>
            <param name="name">Имя атрибута</param>
            <returns>Значение true, если имя допустимо для атрибута; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObjectAttributes.Validate(System.String)">
            <summary>
            Проверяет, допустимо ли указанное имя для атрибута. В случае, если имя недопустимо для атрибута - генерирует исключение
            </summary>
            <param name="name">Имя атрибута</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttributes.Class">
            <summary>
            Возвращает тип, к которому относится коллекция атрибутов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttributes.BaseClass">
            <summary>
            Возвращает базовый тип для типа, к которому относится коллекция атрибутов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObjectAttributes.GetValue``1(System.String)">
            <summary>
            Возвращает значение атрибута с указанным именем
            </summary>
            <typeparam name="T">Тип значения атрибута</typeparam>
            <param name="name">Имя атрибута</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObjectAttributes.SetValue(System.String,System.Object)">
            <summary>
            Устанавливает указанное значение для атрибута с заданным именем
            </summary>
            <param name="name">Имя атрибута</param>
            <param name="value">Задаваемое значение</param>
            <returns>Значение true, если значение атрибута успешно установлено; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttributes.Item(System.String)">
            <summary>
            Возвращает атрибут по его имени
            </summary>
            <param name="name">Имя атрибута</param>
            <returns>Атрибут</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObjectAttributes.Contains(System.String)">
            <summary>
            Возвращает значение, указывающее, содержится ли в коллекции атрибут с заданным именем
            </summary>
            <param name="name">Имя атрибута</param>
            <returns>Значение true, если коллекция содержит атрибут с заданным именем; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObjectAttributes.TryGetAttribute(System.String,TFlex.DOCs.Model.Classes.ClassObjectAttribute@)">
            <summary>
            Получает атрибут по его имени
            </summary>
            <param name="name">Имя атрибута</param>
            <param name="attr">Атрибут</param>
            <returns>Значение true, если атрибут получен; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttributes.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли коллекция доступной только для чтения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttributes.IsModified">
            <summary>
            Возвращает значение, указывающее, является ли коллекция модифицированной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObjectAttributes.Count">
            <summary>
            Возвращает количество атрибутов в коллекции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObjectAttributes.ToString">
            <summary>
            Возвращает строковое представление коллекции 
            </summary>
            <returns>Строковое представление коллекции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObjectAttributes.GetEnumerator">
            <summary>
            Возвращает перечислитель атрибутов для коллекции
            </summary>
            <returns>Перечислитель атрибутов</returns>
        </member>
        <member name="F:TFlex.DOCs.Model.Classes.ClassObjectAttributes.SupportedTypes">
            <summary>
            Поддерживаемые типы значений для ClassObjectAttribute&lt;T&gt;
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Classes.ClassObjectCollection">
            <summary>
            Коллекция типов объектов справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObjectCollection.#ctor(TFlex.DOCs.Model.ServerConnection,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Classes.ClassObject})">
            <summary>
            Создает новый экземпляр коллекции типов на основании указанной коллекции
            </summary>
            <param name="collection">Коллекция типов объектов</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObjectCollection.#ctor(TFlex.DOCs.Model.ServerConnection,System.Collections.Generic.IDictionary{System.Int32,TFlex.DOCs.Model.Classes.ClassObject})">
            <summary>
            Создает новый экземпляр коллекции типов на основании указанной коллекции
            </summary>
            <param name="collection">Коллекция типов объектов</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObjectCollection.Find(System.String)">
            <summary>
            Находит тип по его наименованию
            </summary>
            <param name="className">Наименование типа</param>
            <returns>Тип</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Classes.ClassTree">
            <summary>
            Дерево типов справочника или списка объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassTree.AllClasses">
            <summary>
            Возвращает коллекцию всех типов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassTree.Find(System.Int32)">
            <summary>
            Производит поиск типа по его Id
            </summary>
            <param name="classId">Id типа</param>
            <returns>Найденный тип</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassTree.Find(System.Guid)">
            <summary>
            Производит поиск типа по его Guid 
            </summary>
            <param name="classGuid">Guid типа</param>
            <returns>Найденный тип</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassTree.Find(System.String)">
            <summary>
            Производит поиск типа по его наименованию
            </summary>
            <param name="className">Наименование типа</param>
            <returns>Найденный тип</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassTree.Owner">
            <summary>
            Возвращает владельца дерева типов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassTree.BaseClasses">
            <summary>
            Возвращает коллекцию базовых типов (типов, у которых нет базовых типов)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassTree.ContainsFolderClasses">
            <summary>
            Возвращает значение, указывающее, содержит ли дерево типы, объекты которых могут содержать дочерние объекты
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassTree.GetRootClasses">
            <summary>
            Возвращает коллекцию типов, объекты которых можно создавать в корне справочника
            </summary>
            <returns>Коллекция типов, объекты которых можно создавать в корне справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassTree.GetRootBaseClasses">
            <summary>
            Возвращает коллекцию базовых типов, объекты которых можно создавать в корне справочника
            </summary>
            <returns>Коллекция базовых типов, объекты которых можно создавать в корне справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassTree.GetNotAbstractClasses">
            <summary>
            Возвращает коллекцию типов, которые не являются абстрактными
            </summary>
            <returns>Коллекция типов, не являющихся абстрактными</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassTree.GetFolderClasses">
            <summary>
            Возвращает коллекцию типов, объекты которых могут содержать дочерние объекты
            </summary>
            <returns>Коллекция типов, объекты которых могут содержать дочерние объекты</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassTree.GetParameterGroupClasses(TFlex.DOCs.Model.Structure.ParameterGroup,System.Boolean)">
            <summary>
            Возвращает коллекцию типов, к которым подключена заданная группа параметров
            </summary>
            <param name="parameterGroup">Группа параметров</param>
            <param name="includeInherit">Значение, указывающее, следует ли учитывать типы, наследующие подключение группы параметров</param>
            <returns>Коллекция типов, к которым подключена заданная группа параметров</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassTree.GetIndexClasses(TFlex.DOCs.Model.Structure.UniqueIndex)">
            <summary>
            Возвращает набор типов, использующих указанное условие уникальности
            </summary>
            <param name="index">Условие уникальности</param>
            <returns>Коллекция типов, использующих указанное условие уникальности</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Classes.SpecialClassTree`1">
            <summary>
            Обобщенный базовый класс для определения дерева типов специального справочника
            </summary>
            <typeparam name="TClass">Тип объектов справочника</typeparam>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.SpecialClassTree`1.Find(System.Int32)">
            <summary>
            Производит поиск типа по его Id
            </summary>
            <param name="classId">Id типа</param>
            <returns>Найденный тип</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.SpecialClassTree`1.Find(System.Guid)">
            <summary>
            Производит поиск типа по его Guid
            </summary>
            <param name="classGuid">Guid типа</param>
            <returns>Найденный тип</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.SpecialClassTree`1.Find(System.String)">
            <summary>
            Производит поиск типа по его имени
            </summary>
            <param name="className">Имя типа</param>
            <returns>Найденный тип</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.SpecialClassTree`1.CreateClassObject(System.Guid)">
            <summary>
            Создает тип по его Guid
            </summary>
            <param name="classGuid">Guid типа</param>
            <returns>Тип</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.SpecialClassTree`1.CreateAttributes(`0)">
            <summary>
            Создает коллекцию атрибутов для указанного типа
            </summary>
            <param name="classObject">Тип</param>
            <returns>Коллекция атрибутов для указанного типа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.SpecialClassTree`1.CreateAttributes(TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder)">
            <summary>
            Создает коллекцию атрибутов для указанного конструктора типа
            </summary>
            <param name="builder">Конструктор типа</param>
            <returns>Коллекция атрибутов для указанного конструктора типа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.SpecialClassTree`1.GetEnumerator">
            <summary>
            Возвращает перечислитель типов текущего дерева типов
            </summary>
            <returns>Перечислитель типов текущего дерева типов</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Classes.ClassObject">
            <summary>
            Тип объектов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.Classes">
            <summary>
            Возвращает дерево типов, к которому относится текущий тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.Id">
            <summary>
            Возвращает Id типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.Guid">
            <summary>
            Возвращает Guid типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.Base">
            <summary>
            Возвращает базовый тип для текущего типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.ChildClasses">
            <summary>
            Возвращает коллекцию дочерних типов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.CanContainChildren">
            <summary>
            Возвращает значение, указывающее, может ли объект текущего типа содержать дочерние объекты
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.Icon">
            <summary>
            Возвращает иконку типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.Name">
            <summary>
            Возвращает наименование типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.Comment">
            <summary>
            Возвращает комментарий типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.SupportsSaveAndCreate">
            <summary>
            Возвращает значение, указывающее, следует ли отображать ли отображать команду "Сохранить и создать" при создании объектов данного типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.IsAbstract">
            <summary>
            Возвращает значение, указывающее, является ли тип абстрактным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.IsSealed">
            <summary>
            Возвращает значение, указывающее, является ли тип ненаследуемым
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.UseBaseClassIcon">
            <summary>
            Возвращает значение, указывающее, наследуется ли иконка от базового типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.CanCreateInRoot">
            <summary>
            Возвращает значение, указывающее, может ли тип быть корневым
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.PropertiesDisplayType">
            <summary>
            Возвращает способ отображения свойств объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.CreateFromPrototype">
            <summary>
            Возвращает значение, указывающее, возможно ли создание объектов данного типа только из прототипов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.Hidden">
            <summary>
            Возвращает значение, указывающее, что данный тип отключен
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.CanCreateObjects">
            <summary>
            Возвращает значение, указывающее, возможно ли создание объектов данного типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.CanEdit">
            <summary>
            Возвращает значение, указывающее, возможно ли редактирование данного типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.CanDelete">
            <summary>
            Возвращает значение, указывающее, возможно ли удаление данного типа
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObject.CanCreateChildObject(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Возвращает значение, указывающее, возможно ли создание дочерних объектов указанного типа для объектов текущего типа
            </summary>
            <param name="classObject">Тип дочерних объектов</param>
            <returns>Значение true, если создание дочерних объектов указанного типа возможно; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.ChildObjectClasses">
            <summary>
            Возвращает коллекцию типов, объекты которых могут являться дочерними объектами для объектов текущего типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.InheritMasterObjectClasses">
            <summary>
            Возвращает значение, указывающее, наследуются ли типы, объекты которых могут являться владельцами объектов текущего типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.MasterObjectClasses">
            <summary>
            Возвращает коллекцию типов, объекты которых могут являться владельцами объектов текущего типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.ParameterGroups">
            <summary>
            Возвращает коллекцию групп параметров, подключенных к данному типу
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObject.GetUnattachedParameterGroups">
            <summary>
            Возвращает коллекцию групп параметров, которые могут быть подключены к данному типу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.Attributes">
            <summary>
            Возвращает атрибуты типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.IsUniqueIndexInherit">
            <summary>
            Возвращает значение, указывающее, является ли условие уникальности типа унаследованным от справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.UniqueIndex">
            <summary>
            Возвращает условие уникальности типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.Dialog">
            <summary>
            Возвращает диалог свойств данного типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.WebDialog">
            <summary>
            Возвращает диалог свойств данного типа для web
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.HierarchyLinkDialog">
            <summary>
            Возвращает диалог свойств подключения данного типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.HierarchyLinkWebDialog">
            <summary>
            Возвращает диалог свойств подключения данного типа для Web
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.SupportMultiAttachment">
            <summary>
            Указывает поддерживают ли объекты данного типа множественное вхождение в одного родителя
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObject.GetGroupSettings``1(System.Guid,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Возвращает дополнительные настройки подключения указанной группы параметров к типу 
            </summary>
            <typeparam name="T">Класс, описывающий настройки подключения группы параметров к типу</typeparam>
            <param name="settingsId">Id класса, описывающего настройки подключения</param>
            <param name="group">Группа параметров, подключенная к текущему типу</param>
            <returns>Объект типа T, содержащий дополнительные настройки подключения указанной группы параметров к типу</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObject.SetGroupSettings``1(System.Guid,TFlex.DOCs.Model.Structure.ParameterGroup,``0)">
            <summary>
            Задает дополнительные настройки подключения указанной группы параметров к типу
            </summary>
            <typeparam name="T">Класс, описывающий настройки подключения группы параметров к типу</typeparam>
            <param name="settingsId">Id класса, описывающего настройки подключения</param>
            <param name="group">Группа параметров, подключенная к текущему типу</param>
            <param name="settings">Объект типа T, содержащий дополнительные настройки подключения указанной группы параметров к типу</param>
            <returns>Значение true, если настройки подключения успешно заданы; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObject.ClearGroupSettings(System.Guid,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Очищает настройки подключения указанной группы параметров к типу
            </summary>
            <param name="settingsId">Id класса, описывающего настройки подключения</param>
            <param name="group">Группа параметров, подключенная к текущему типу</param>
            <returns>Значение true, если настройки подключения успешно сброшены; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.IsSchemeInherit">
            <summary>
            Возвращает значение, указывающее, наследуется ли схема переходов стадии с базового типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.IsDefaultStageInherit">
            <summary>
            Возвращает значение, указывающее, наследуется ли стадия объектов по умолчанию с базового типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.Scheme">
            <summary>
            Возвращает схему переходов стадий 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.DefaultStage">
            <summary>
            Возвращает стадию объектов по умолчанию
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObject.GetParentObjectClasses">
            <summary>
            Возвращает коллекцию типов, объекты которых могут являться родительскими для объектов текущего типа
            </summary>
            <returns>Коллекция типов, объекты которых могут являться родительскими для объектов текущего типа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObject.IsInherit(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Возвращает значение, указывающее, является ли заданная группа параметров унаследованной от базового типа
            </summary>
            <param name="group">Группа параметров</param>
            <returns>Значение true, если группа параметров унаследована от базового типа; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObject.GetBaseClassOfGroup(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Возвращает базовый тип, к которому изначально подключена группа параметров
            </summary>
            <param name="group">Группа параметров</param>
            <returns>Базовый тип, к которому подключена группа параметров</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObject.IsInherit(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Возвращает значение, указывающее, унаследован ли текущий тип от заданного (или совпадает с ним)
            </summary>
            <param name="classObject">Тип для проверки</param>
            <returns>Значение true, если текущий тип унаследован от указанного типа или совпадает с ним; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObject.IsInherit(System.Guid)">
            <summary>
            Возвращает значение, указывающее, унаследован ли текущий тип от типа, заданного с помощью Guid (или совпадает с ним)
            </summary>
            <param name="classGuid">Guid типа для проверки</param>
            <returns>Значение true, если текущий тип унаследован от указанного типа или совпадает с ним; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObject.IsInherit(System.String)">
            <summary>
            Возвращает значение, указывающее, унаследован ли текущий тип от типа, заданного с помощью наименования (или совпадает с ним)
            </summary>
            <param name="className">Наименование типа для проверки</param>
            <returns>Значение true, если текущий тип унаследован от указанного типа или совпадает с ним; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObject.IsBaseClassFor(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип базовым для заданного типа (или совпадает с ним)
            </summary>
            <param name="classObject">Тип для проверки</param>
            <returns>Значение true, если текущий тип является базовым для указанного типа или совпадает с ним; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.HasLinkedNomenclatureType">
            <summary>
            Возвращает значение, указывающее, существует ли для текущего типа связанный номенклатурный тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.LinkedNomenclatureType">
            <summary>
            Возвращает связанный номенклатурный тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.InheritCanChange">
            <summary>
            Возвращает значение, указывающее, наследуется ли признак "Допускается изменение типа объектов порождённых типов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.CanChange">
            <summary>
            Возвращает значение, указывающее, допускается ли изменение типа объектов порождённых типов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObject.CanChangeTo(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Возвращает значение, указывающее, допускается ли смена типа с текущего на указанный
            </summary>
            <param name="other">Тип для проверки</param>
            <returns>Значение true, если допускается смена типа с текущего на указанный; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObject.ToString">
            <summary>
            Возвращает строковое представление типа
            </summary>
            <returns>Строковое представление типа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObject.GetAllChildClasses">
            <summary>
            Возвращает список всех дочерних типов
            </summary>
            <returns>Список дочерних типов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObject.GetEventHandlers(TFlex.DOCs.Model.References.Events.ParameterGroupEvent)">
            <summary>
            Возвращает список обработчиков указанного события группы параметров для данного типа (если не задано событие - список всех обработчиков)
            </summary>
            <param name="event">Событие группы параметров</param>
            <returns>Список обработчиков события</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObject.CompareTo(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Сравнивает текущий тип с указанным
            </summary>
            <param name="other">Тип для сравнения</param>
            <returns>Значение равное нулю, если типы равны; значение большее нуля, если текущий тип больше указанного; значение меньшее нуля, если текущий тип меньше указанного</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObject.CompareTo(System.Object)">
            <summary>
            Сравнивает текущий объект с указанным
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение равное нулю, если объекты равны; значение большее нуля, если текущий объект больше указанного; значение меньшее нуля, если текущий объект меньше указанного</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.XmlId">
            <summary>
            Возвращает Id типа в формате XML
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Classes.ClassObject.TryParseXmlId(System.String,System.Int32@,System.Boolean@)">
            <summary>
            Производит попытку разбора XML-строки 
            </summary>
            <param name="xmlId">XML-строка</param>
            <param name="id">Id типа</param>
            <param name="deleted">Статус "deleted" типа</param>
            <returns>Значение true, если строка успешно разобрана; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Classes.ClassObject.ClassTree">
            <summary>
            Возвращает дерево типов
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Classes.PropertiesDisplayType">
            <summary>
            Способы отображения свойств объекта
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Classes.PropertiesDisplayType.ModalDialog">
            <summary>
            Диалог свойств
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Classes.PropertiesDisplayType.Window">
            <summary>
            Свойства в новом окне
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Classes.PropertiesDisplayType.NewWindow">
            <summary>
            Свойства в отдельном
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Classes.PropertiesDisplayType.NewSimpleWindow">
            <summary>
            Простое отдельное окно
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.BaseConfiguration.Guid">
            <summary>
            Возвращает Guid конфигурации
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.BaseConfiguration.Name">
            <summary>
            Возвращает или задает наименование конфигурации
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.BaseConfiguration.Comment">
            <summary>
            Возвращает или задает комментарий конфигурации
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.BaseConfiguration.Title">
            <summary>
            Возвращает или задает заголовок диалога входа конфигурации
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.BaseConfiguration.GetImage">
            <summary>
            Возвращает изображение для диалога входа конфигурации
            </summary>
            <returns>Изображение для диалога входа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.BaseConfiguration.GetImageBytes">
            <summary>
            Возвращает массив байтов изображения для диалога входа конфигурации
            </summary>
            <returns>Массив байтов изображения для диалога входа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.BaseConfiguration.SetImage(System.Drawing.Image)">
            <summary>
            Задает изображение для диалога входа конфигурации
            </summary>
            <param name="image">Изображение для диалога входа</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.BaseConfiguration.Icon">
            <summary>
            Возвращает или задает иконку конфигурации
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.BaseConfiguration.AccessUsersUseType">
            <summary>
            Возвращает или задает тип использования списка пользователей
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.BaseConfiguration.GetAccessUsers">
            <summary>
            Возвращает список пользователей конфигурации 
            </summary>
            <returns>Список пользователей конфигурации</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.BaseConfiguration.SetAccessUsers(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.Users.UserReferenceObject})">
            <summary>
            Устанавливает указанную коллекцию пользователей в качестве списка пользователей конфигурации
            </summary>
            <param name="references">Коллекция пользователей</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.BaseConfiguration.IsAccessibleFor(TFlex.DOCs.Model.References.Users.UserReferenceObject)">
            <summary>
            Возвращает значение, указывающее, является ли конфигурация доступной для указанного пользователя
            </summary>
            <param name="user">Объект справочника группы и пользователи</param>
            <returns>Значение true, если конфигурация доступна для указанного пользователя; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.BaseConfiguration.ReferencesUseType">
            <summary>
            Возвращает или задает тип использования списка справочников
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.BaseConfiguration.GetReferences">
            <summary>
            Возвращает список справочников конфигурации
            </summary>
            <returns>Список справочников</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.BaseConfiguration.SetReferences(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.ReferenceInfo})">
            <summary>
            Устанавливает указанную коллекцию справочников в качестве списка справочников конфигурации
            </summary>
            <param name="references">Коллекция справочников</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.BaseConfiguration.SupportsReference(TFlex.DOCs.Model.ReferenceInfo)">
            <summary>
            Возвращает значение, указывающее, поддерживается ли указанный справочник конфигурацией
            </summary>
            <param name="reference">Описание справочника</param>
            <returns>Значение true, если справочник поддерживается конфигурацией; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.BaseConfiguration.CanEdit">
            <summary>
            Возвращает значение, указывающее, возможно ли редактирование конфигурации
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.BaseConfiguration.CanEditProperties">
            <summary>
            Возвращает значение, указывающее, возможно ли редактирование свойств конфигурации
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.BaseConfiguration.CanDelete">
            <summary>
            Возвращает значение, указывающее, возможно ли удаление конфигурации
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.BaseConfiguration.Save">
            <summary>
            Сохраняет изменения конфигурации
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.BaseConfiguration.Delete">
            <summary>
            Удаляет конфигурацию
            </summary>
            <returns>Значение true, если конфигурация успешно удалена; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.BaseConfiguration.ToString">
            <summary>
            Возвращает строковое представление конфигурации
            </summary>
            <returns>Строковое представление конфигурации</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.ConfigurationUseType">
            <summary>
            Тип использования списка конфигураций
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.ConfigurationUseType.DeniedForConfigurationList">
            <summary>
            Запрещено для списка конфигураций
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.ConfigurationUseType.AllowedOnlyForConfigurationList">
            <summary>
            Разрешено только для списка конфигураций
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage">
            <summary>
            Страница диалога
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.ConfigurationCollection">
            <summary>
            Коллекция конфигураций, в которых будет или не будет использоваться страница диалога
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.ConfigurationCollection.Page">
            <summary>
            Возвращает страницу диалога
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.Id">
            <summary>
            Возвращает Id страницы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.Guid">
            <summary>
            Возвращает Guid страницы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.ParameterGroup">
            <summary>
            Возвращает группу параметров, к которой относится страница
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.Class">
            <summary>
            Возвращает тип объектов справочника, к которому относится страница
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.Name">
            <summary>
            Возвращает или задает наименование страницы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.Comment">
            <summary>
            Возвращает или задает комментарий к странице
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.Type">
            <summary>
            Возвращает или задает тип страницы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.Icon">
            <summary>
            Возвращает или задает иконку страницы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.Data">
            <summary>
            Возвращает или задает данные страницы в виде массива байтов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.Assembly">
            <summary>
            Возвращает или задает наименование файла (dll), содержащего внешнюю страницу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.ClassName">
            <summary>
            Возвращает или задает наименование типа в библиотеке (dll), описывающего внешнюю страницу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.UsedInPanel">
            <summary>
            Возвращает или задает значение, указывающее, отображается ли страница в панели свойств 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.UsedInDialog">
            <summary>
            Возвращает или задает значение, указывающее, отображается ли страница в диалоге свойств
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.Hidden">
            <summary>
            Возвращает или задает значение, указывающее, является ли страница отключенной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.AccessType">
            <summary>
            Возвращает или задает тип доступа к странице диалога
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.ConfigurationUseType">
            <summary>
            Возвращает или задает тип использования списка конфигураций
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.Users">
            <summary>
            Возвращает коллекцию пользователей
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.Configurations">
            <summary>
            Возвращает коллекцию конфигураций
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.CanUseInCurrentConfiguration">
            <summary>
            Возвращает значение, указывающее, возможно ли использование страницы в текущей конфигурации
            </summary>
            <returns>Значение true, если в текущей конфигурации возможно использование данной страницы; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.CanUseInConfiguration(TFlex.DOCs.Model.Configuration.BaseConfiguration)">
            <summary>
            Возвращает значение, указывающее, возможно ли использование страницы в указанной конфигурации
            </summary>
            <param name="configuration">Конфигурация</param>
            <returns>Значение true, если в указанной конфигурации возможно использование данной страницы; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.GetFilter">
            <summary>
            Возвращает фильтр, описывающий условия отображения страницы
            </summary>
            <returns>Фильтр, описывающий условия отображения страницы</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.SetFilter(TFlex.DOCs.Model.Search.Filter)">
            <summary>
            Устанавливает фильтр, описывающий условия отображения страницы
            </summary>
            <param name="filter">Фильтр, описывающий условия отображения страницы</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.IsModified">
            <summary>
            Возвращает значение, указывающее, была ли страница модифицирована
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.BeginChanges">
            <summary>
            Переводит страницу в состояние редактирования
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.CancelChanges">
            <summary>
            Отменяет изменения страницы
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.EndChanges">
            <summary>
            Завершает редактирование страницы
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.Delete">
            <summary>
            Удаляет страницу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.Changing">
            <summary>
            Возвращает значение, указывающее, находится ли страница в состоянии редактирования
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.ToString">
            <summary>
            Возвращает строковое представление страницы
            </summary>
            <returns>Строковое представление страницы</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.UserCollection">
            <summary>
            Коллекция пользователей и групп, имеющих или не имеющих доступ к странице диалога
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogPage.UserCollection.Page">
            <summary>
            Возвращает страницу диалога
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup">
            <summary>
            Группа страниц диалога свойств
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup.Id">
            <summary>
            Возвращает Id группы страниц
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup.Guid">
            <summary>
            Возвращает Guid группы страниц
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup.Dialog">
            <summary>
            Возвращает диалог, к которому относится группа страниц
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup.Name">
            <summary>
            Возвращает или задает наименование группы страниц
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup.Comment">
            <summary>
            Возвращает или задает комментарий к группе страниц
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup.Icon">
            <summary>
            Возвращает или задает иконку группы страниц
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup.Pages">
            <summary>
            Возвращает коллекцию страниц текущей группы
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup.SwapPages(TFlex.DOCs.Model.Configuration.Dialogs.DialogPage,TFlex.DOCs.Model.Configuration.Dialogs.DialogPage)">
            <summary>
            Меняет местами указанные страницы в коллекции страниц текущей группы
            </summary>
            <param name="page1">Первая страница</param>
            <param name="page2">Вторая страница</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup.AddPage(TFlex.DOCs.Model.Configuration.Dialogs.DialogPage)">
            <summary>
            Добавляет указанную страницу в текущую группу
            </summary>
            <param name="page">Страница для добавления</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup.RemovePage(TFlex.DOCs.Model.Configuration.Dialogs.DialogPage)">
            <summary>
            Удаляет указанную страницу из текущей группы
            </summary>
            <param name="page">Страница для удаления</param>
            <returns>Значение true, если страница успешно удалена из группы; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup.BeginChanges">
            <summary>
            Переводит группу страниц в состояние редактирования
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup.CancelChanges">
            <summary>
            Отменяет изменения группы страниц
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup.EndChanges">
            <summary>
            Завершает редактирование группы страниц
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup.Delete">
            <summary>
            Удаляет группу страниц
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup.Changing">
            <summary>
            Возвращает значение, указывающее, находится ли группа страниц в состоянии редактирования
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup.GetObjectPages(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает список страниц группы, доступных для указанного объекта справочника
            </summary>
            <param name="referenceObject">Объект справочника</param>
            <returns>Список страниц, доступных для указанного объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup.ToString">
            <summary>
            Возвращает строковое представление группы страниц
            </summary>
            <returns>Строковое представление группы страниц</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.Dialogs.DialogPageType">
            <summary>
            Тип страницы диалога
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.Dialogs.DialogPageType.User">
            <summary>
            Пользовательская страница
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.Dialogs.DialogPageType.System">
            <summary>
            Системная страница
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.Dialogs.DialogPageType.External">
            <summary>
            Внешняя страница
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.Dialogs.DialogPageAccessType">
            <summary>
            Тип доступа к странице диалога
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.Dialogs.DialogPageAccessType.DeniedForPageUsers">
            <summary>
            Запрещен для списка пользователей
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.Dialogs.DialogPageAccessType.AllowedOnlyForPageUsers">
            <summary>
            Разрешен только для списка пользователей
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.Layout.ItemDescription.ItemHALignment">
            <summary>
            Выравнивание элемента относительно его родителя по горизонтали
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.Layout.ItemDescription.ItemVALignment">
            <summary>
            Выравнивание элемента относительно его родителя по вертикали
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.Dialogs.DialogManager">
            <summary>
            Менеджер диалогов группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogManager.ParameterGroup">
            <summary>
            Возвращает группу параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.DialogManager.Pages">
            <summary>
            Возвращает коллекцию всех страниц менеджера
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogManager.CreateGroupDialog">
            <summary>
            Возвращает или создает диалог свойств группы параметров
            </summary>
            <returns>Диалог свойств группы параметров</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogManager.CreateClassDialog(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Возвращает или создает диалог свойств типа объектов
            </summary>
            <param name="classObject">Тип объектов справочника</param>
            <returns>Диалог свойств типа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogManager.CreateGroupPage">
            <summary>
            Создает новую страницу диалога свойств группы параметров
            </summary>
            <returns>Страница диалога свойств</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogManager.CreateClassPage(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает новую страницу диалога свойств типа объектов справочника
            </summary>
            <param name="classObject">Тип объектов справочника</param>
            <returns>Страница диалога свойств</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogManager.GetObjectDialog(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает диалог свойств указанного объекта
            </summary>
            <param name="referenceObject">Объект справочника</param>
            <returns>Диалог свойств объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogManager.GetLinkDialog(TFlex.DOCs.Model.References.ComplexHierarchyLink)">
            <summary>
            Возвращает диалог свойств указанного подключения в справочнике со сложной иерархией
            </summary>
            <param name="link">Подключение в справочнике со сложной иерархией</param>
            <returns>Диалог свойств подключения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogManager.GetLinkDialog(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает диалог свойств подключения для указанного дочернего объекта подключения
            </summary>
            <param name="linkChildObject">Дочерний объект подключения в справочнике со сложной иерархией</param>
            <returns>Диалог свойств подключения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.DialogManager.IsUsed(TFlex.DOCs.Model.Configuration.Dialogs.DialogPage)">
            <summary>
            Возвращает значение, указывающее, используется ли заданная страница диалога
            </summary>
            <param name="page">Страница диалога свойств</param>
            <returns>Значение true, если заданная страница используется; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.Dialogs.Dialog">
            <summary>
            Диалог свойств
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.Dialog.Id">
            <summary>
            Возвращает Id диалога
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.Dialog.Guid">
            <summary>
            Возвращает Guid диалога 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.Dialog.ParameterGroup">
            <summary>
            Возвращает группу параметров, к которой относится диалог
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.Dialog.Class">
            <summary>
            Возвращает тип объектов справочника, к которому относится диалог
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.Dialog.IsDockable">
            <summary>
            Возвращает или задает значение, указывающее, используются ли в диалоге плавающие панели
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.Dialog.EditObjectListInPropertyPanel">
            <summary>
            Возвращает или задает значение, указывающее, можно ли редактировать списки объектов в панели свойств
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.Dialog.GetLinkDialogs">
            <summary>
            Возвращает связи к 1, страницы диалогов которых добавляются в диалог объекта
            </summary>
            <returns>Список связей к 1, страницы диалогов которых добавляются в диалог объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.Dialog.AddLinkDialog(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Добавляет связь к 1, страницы диалогов которой добавляются в диалог объекта
            </summary>
            <param name="link">Связь к 1</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.Dialog.ContainsLinkDialog(System.Guid)">
            <summary>
            Возвращает true, если содержит связь к 1, страницы диалогов которой добавляются в диалог объекта
            </summary>
            <param name="linkGuid">Guid связи</param>
            <returns>true, если содержит связь к 1, страницы диалогов которой добавляются в диалог объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.Dialog.RemoveLinkDialog(System.Guid)">
            <summary>
            Отключает связь к 1, страницы диалогов которой добавляются в диалог объекта
            </summary>
            <param name="linkGuid">Guid связи</param>
            <returns>true, если связь была успешно отключена</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.Dialog.Groups">
            <summary>
            Возвращает коллекцию групп страниц диалога
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.Dialog.SwapGroups(TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup,TFlex.DOCs.Model.Configuration.Dialogs.DialogGroup)">
            <summary>
            Меняет местами указанные группы страниц в коллекции групп страниц диалога
            </summary>
            <param name="group1">Первая группа страниц</param>
            <param name="group2">Вторая группа страниц</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.Dialog.CreateGroup">
            <summary>
            Создает новую группу страниц в диалоге
            </summary>
            <returns>Группа страниц</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.Dialog.BeginChanges">
            <summary>
            Переводит диалог в состояние редактирования
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.Dialog.CancelChanges">
            <summary>
            Отменяет изменения диалога
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.Dialog.EndChanges">
            <summary>
            Завершает редактирование диалога
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.Dialog.Delete">
            <summary>
            Удаляет диалог
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Dialogs.Dialog.Changing">
            <summary>
            Возвращает значение, указывающее, находится ли диалог в состоянии редактирования
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Dialogs.Dialog.ToString">
            <summary>
            Возвращает строковое представление диалога
            </summary>
            <returns>Строковое представление диалога</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.ISettingsContainer">
            <summary>
            Интерфейс для контейнера настроек
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsContainer.Application">
            <summary>
            Возвращает приложение
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsContainer.Context">
            <summary>
            Возвращает контекст использования настроек
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsContainer.Exists">
            <summary>
            Возвращает значение true, если настройки были загружены и не были подобраны из похожих по контексту настроек или видов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsContainer.Interface">
            <summary>
            Возвращает интерфейс
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsContainer.IsNew">
            <summary>
            Возвращает значение, указывающее, являются ли настройки новыми (ещё не сохранены в БД)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsContainer.IsCommon">
            <summary>
            Возвращает значение, указывающее, являются ли настройки общими для всех окон
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsContainer.IsLoaded">
            <summary>
            Возвращает значение, указывающее, были ли настройки загружены
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsContainer.ObjectId">
            <summary>
            Возвращает Id связанного объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsContainer.ParameterGroupId">
            <summary>
            Возвращает Id связанной группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsContainer.SharingType">
            <summary>
            Возвращает тип хранения настроек
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsContainer.SupportsViews">
            <summary>
            Возвращает значение, указывающее, поддерживаются ли виды
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsContainer.Data">
            <summary>
            Возвращает или задаёт данные настроек
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ISettingsContainer.Lock">
            <summary>
            Блокирует настройки
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ISettingsContainer.Unlock">
            <summary>
            Разблокирует настройки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsContainer.IsLocked">
            <summary>
            Возвращает значение, указывающее, заблокированы ли настройки
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ISettingsContainer.Clear">
            <summary>
            Очищает настройки
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ISettingsContainer.Reset">
            <summary>
            Сбрасывает прочитанные настройки для повторного чтения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ISettingsContainer.Save">
            <summary>
            Сохраняет настройки
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ISettingsContainer.Load">
            <summary>
            Загружает настройки
            </summary>
            <returns>Значение true, если настройки существуют и не были подобраны из похожих по контексту настроек или видов; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ISettingsContainer.Remove">
            <summary>
            Удаляет настройки
            </summary>
            <returns>Значение true, если настройки были успешно удалены; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ISettingsContainer.Reload(System.Boolean)">
            <summary>
            Перезагружает настройки
            </summary>
            <returns>Значение true, если настройки существуют и не были подобраны из похожих по контексту настроек или видов; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ISettingsContainer.ReloadViews">
            <summary>
            Сбрасывает виды настроек
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ISettingsContainer.ApplyViewOnLoading(TFlex.DOCs.Model.Configuration.ISettingsView)">
            <summary>
            только применение вида к настройкам
            </summary>
            <param name="view">Вид</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ISettingsContainer.ApplyView(TFlex.DOCs.Model.Configuration.ISettingsView)">
            <summary>
            Применяет указанный вид к настройкам
            </summary>
            <param name="view">Вид</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ISettingsContainer.CreateView(System.String,TFlex.DOCs.Model.Configuration.SettingsViewType,System.Boolean,System.Boolean)">
            <summary>
            Создаёт вид
            </summary>
            <param name="name">Название вида</param>
            <param name="type">Тип вида</param>
            <param name="inSettingsContext">Значение true, если вид использует контекст настроек, в противном случае - значение false</param>
            <param name="copySettings">Значение true, если надо скопировать текущие данные настроек в вид; в противном случае - значение false</param>
            <returns>Созданный вид</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ISettingsContainer.CreateView(System.String,TFlex.DOCs.Model.Configuration.SettingsViewType,System.Boolean,System.Boolean,TFlex.DOCs.Model.Configuration.ConfigurationUseType,System.Collections.Generic.List{System.Guid})">
            <summary>
            Создаёт вид
            </summary>
            <param name="name">Название вида</param>
            <param name="type">Тип вида</param>
            <param name="inSettingsContext">Значение true, если вид использует контекст настроек, в противном случае - значение false</param>
            <param name="copySettings">Значение true, если надо скопировать текущие данные настроек в вид; в противном случае - значение false</param>
            <param name="configurationUseType">Тип использования списка конфигураций</param>
            <param name="configurtaions">Список конфигураций</param>
            <returns>Созданный вид</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsContainer.CurrentView">
            <summary>
            Возвращает текущий вид настроек
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsContainer.DefaultView">
            <summary>
            Возвращает вид, используемый по умолчанию всеми пользователями
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ISettingsContainer.DeleteView(TFlex.DOCs.Model.Configuration.ISettingsView)">
            <summary>
            Удаляет вид
            </summary>
            <param name="view">Вид</param>
            <returns>Значение true, если вид был успешно удалён; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ISettingsContainer.UpdateView(TFlex.DOCs.Model.Configuration.ISettingsView,System.String,TFlex.DOCs.Model.Configuration.SettingsViewType,System.Boolean,System.Boolean)">
            <summary>
            Обновляет вид
            </summary>
            <param name="view">Вид</param>
            <param name="name">Название вида</param>
            <param name="type">Тип вида</param>
            <param name="inSettingsContext">Значение true, если вид использует контекст настроек; в противном случае - значение false</param>
            <param name="copySettings">Значение true, если надо скопировать текущие данные настроек в вид; в противном случае - значение false</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ISettingsContainer.UpdateView(TFlex.DOCs.Model.Configuration.ISettingsView,System.String,TFlex.DOCs.Model.Configuration.SettingsViewType,System.Boolean,System.Boolean,TFlex.DOCs.Model.Configuration.ConfigurationUseType,System.Collections.Generic.List{System.Guid})">
            <summary>
            Обновляет вид
            </summary>
            <param name="view">Вид</param>
            <param name="name">Название вида</param>
            <param name="type">Тип вида</param>
            <param name="inSettingsContext">Значение true, если вид использует контекст настроек; в противном случае - значение false</param>
            <param name="copySettings">Значение true, если надо скопировать текущие данные настроек в вид; в противном случае - значение false</param>
            <param name="configurationUseType">Тип использования списка конфигураций</param>
            <param name="configurtaions">Список конфигураций</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsContainer.Views">
            <summary>
            Возвращает список видов
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.ISettingsView">
            <summary>
            Интерфейс, описывающий вид
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsView.Id">
            <summary>
            Возвращает Guid вида
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsView.IsDefault">
            <summary>
            Возвращает значение, указывающее, используется ли данный вид по умолчанию всеми пользователями
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsView.IsInSettingsContext">
            <summary>
            Возвращает значение, указывающее, совпадает ли контекст вида с контекстом настроек
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsView.IsShared">
            <summary>
            Возвращает значение, указывающее, является ли вид доступным для всех пользователей
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsView.ConfigurationUseType">
            <summary>
            Возвращает тип использования списка конфигураций
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsView.Configurations">
            <summary>
            Возвращает список конфигураций
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ISettingsView.CanUseInCurrentConfiguration">
            <summary>
            Возвращает значение, указывающее, возможно ли использование вида в текущей конфигурации
            </summary>
            <returns>Значение true, если использование вида в текущей конфигурации разрешено; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsView.Name">
            <summary>
            Возвращает название вида
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsView.Type">
            <summary>
            Возвращает тип вида
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ISettingsView.Owner">
            <summary>
            Возвращает контейнер настроек, которым принадлежит вид
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ISettingsView.GetData">
            <summary>
            Возвращает данные вида
            </summary>
            <returns>Данные вида</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.ItemListUseType">
            <summary>
            Тип использования списка
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.ItemListUseType.Exclude">
            <summary>
            За исключением элементов списка
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.ItemListUseType.ListOnly">
            <summary>
            Только для списка
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.MdiType">
            <summary>
            Типы окон системы. Изменять идентификаторы ЗАПРЕЩЕНО!
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.ObjectSerializationMode">
            <summary>
            Режим сериализации объектов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.ObjectSerializationMode.Id">
            <summary>
            Сериализация по Id
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.ObjectSerializationMode.Guid">
            <summary>
            Сериализация по Guid
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.ObjectSerializationMode.Name">
            <summary>
            Сериализация по наименованию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Variables.IReferenceVariable.ReferenceGuid">
            <summary>
            Guid справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Variables.ReferenceClassVariable.FindClassObject(System.Guid,System.Guid,TFlex.DOCs.Model.ServerConnection)">
            <summary> Ищет тип объекта справочника/списка объектов </summary>
            <param name="referenceGuid">Справочник для поиска</param>
            <param name="classGuid">Guid типа объекта</param>
            <param name="connection">Подключение к серверу</param>
            <returns>Возвращает тип, если он найден. В противном случае вернёт Null</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Variables.ReferenceVariable.#ctor">
            <summary>
            Создает новый экземпляр переменной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Variables.ReferenceVariableManager.ReferenceVariableType.ParameterType">
            <summary> Тип параметра, для которого используется переменная </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Variables.ReferenceVariableManager.ReferenceVariableType.VariableType">
            <summary> Тип переменной  </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Variables.ReferenceVariableManager.ReferenceVariableType.IsArray">
            <summary> Содержит ли массив значений </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.Variables.Variable">
            <summary>
            Переменная
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.Variables.Variable.SupportedTypes">
            <summary>
            Возвращает массив возможных типов переменных
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Variables.Variable.Variables">
            <summary>
            Возвращает коллекцию переменных, в которую входит текущая переменная
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Variables.Variable.Name">
            <summary>
            Возвращает или задает наименование переменной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Variables.Variable.Type">
            <summary>
            Возвращает тип переменной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Variables.Variable.IsNull">
            <summary>
            Возвращает значение, указывающее, является ли значение переменной равным Null
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Variables.Variable.Value">
            <summary>
            Возвращает или задает значение переменной
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Variables.Variable.ToString">
            <summary>
            Возвращает строковое представление переменной
            </summary>
            <returns>Строковое представление переменной</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.Variables.VariableCollection">
            <summary>
            Коллекция переменных
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Variables.VariableCollection.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает новую коллекцию переменных
            </summary>
            <param name="connection">Подключение к серверу</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Variables.VariableCollection.#ctor(TFlex.DOCs.Model.Configuration.Variables.VariableCollection)">
            <summary>
            Создает новую коллекцию переменных на основании указанной
            </summary>
            <param name="source">Коллекция переменных для копирования</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Variables.VariableCollection.Find(System.String)">
            <summary>
            Возвращает переменную с указанным наименованием
            </summary>
            <param name="variableName">Наименование переменной</param>
            <returns>Переменная</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Variables.VariableCollection.CanAdd(System.String)">
            <summary>
            Возвращает значение, указывающее, возможно ли добавление переменной с заданным наименованием
            </summary>
            <param name="variableName">Наименование переменной</param>
            <returns>Значение true, если возможно добавление переменной с заданным наименованием; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Variables.VariableCollection.CanAdd(TFlex.DOCs.Model.Configuration.Variables.Variable)">
            <summary>
            Возвращает значение, указывающее, возможно ли добавление в коллекцию указанной переменной
            </summary>
            <param name="variable">Переменная для добавления</param>
            <returns>Значение true, если возможно добавление переменной в коллекцию; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Variables.VariableCollection.ToString">
            <summary>
            Возвращает строковое представление коллекции переменных
            </summary>
            <returns>Строковое представление коллекции переменных</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Variables.VariableCollection.FormDescription">
            <summary>
            Диалог переменных
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Variables.VariableCollection.AutorunValuesDialog">
            <summary>
            Возвращает или задает значение, указывающее, всегда ли требуется автоматически запускать диалог переменных
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.Variables.Variable`1">
            <summary>
            Переменная типа <typeparamref name="T"/>
            </summary>
            <typeparam name="T">Тип переменной</typeparam>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Variables.Variable`1.#ctor">
            <summary>
            Создает новый экземпляр переменной
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Variables.Variable`1.#ctor(TFlex.DOCs.Model.Configuration.Variables.Variable{`0})">
            <summary>
            Создает новый экземпляр переменной на основании указанного экземпляра
            </summary>
            <param name="source">Переменная для копирования</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Variables.Variable`1.Type">
            <summary>
            Возвращает тип переменной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.Variables.Variable`1.IsNull">
            <summary>
            Возвращает значение, указывающее, является ли значение переменной равным Null
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.Variables.Variable`1.Clone">
            <summary>
            Создает копию текущей переменной
            </summary>
            <returns>Созданная копия переменной</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageType">
            <summary>
            Тип рабочей страницы
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageType.Windows">
            <summary>
            Рабочая страница для Windows-клиента
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageType.Web">
            <summary>
            Рабочая страница для Web-клиента
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage">
            <summary>
            Рабочая страница
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.ConfigurationCollection">
            <summary>
            Коллекция конфигураций, в которых будет или не будет использоваться рабочая страница
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.ConfigurationCollection.Page">
            <summary>
            Возвращает рабочую страницу
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает новую рабочую страницу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.Id">
            <summary>
            Возвращает Id рабочей страницы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.Guid">
            <summary>
            Возвращает Guid рабочей страницы 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.IsAdded">
            <summary>
            Возвращает значение, указывающее, является ли рабочая страница добавленной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.IsModified">
            <summary>
            Возвращает или задает значение, указывающее, является ли рабочая страница модифицированной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.Name">
            <summary>
            Возвращает или задает наименование рабочей страницы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.Comment">
            <summary>
            Возвращает или задает комментарий к рабочей странице
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.Type">
            <summary>
            Возвращает тип рабочей страницы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.AlwaysVisible">
            <summary>
            Возвращает или задает значение, указывающее, является ли рабочая страница постоянной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.AccessType">
            <summary>
            Возвращает или задает тип доступа к странице диалога
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.ConfigurationUseType">
            <summary>
            Возвращает или задает тип использования списка конфигураций
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.Configurations">
            <summary>
            Возвращает коллекцию конфигураций
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.CanUseInCurrentConfiguration">
            <summary>
            Возвращает значение, указывающее, возможно ли использование рабочей страницы в текущей конфигурации
            </summary>
            <returns>Значение true, если рабочая страница может использоваться в текущей конфигурации; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.CanUseInConfiguration(TFlex.DOCs.Model.Configuration.BaseConfiguration)">
            <summary>
            Возвращает значение, указывающее, возможно ли использование рабочей страницы в указанной конфигурации
            </summary>
            <param name="configuration">Конфигурация</param>
            <returns>Значение true, если рабочая страница может использоваться в указанной конфигурации; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.Data">
            <summary>
            Возвращает или задает данные рабочей страницы в виде массива байтов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.Icon">
            <summary>
            Возвращает или задает иконку рабочей страницы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.IsPrivate">
            <summary>
            Возвращает или задает значение, указывающее, является ли рабочая страница личной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.StartPageUsers">
            <summary>
            Возвращает коллекцию пользователей, для которых данная страница является страницей приветствия
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.Save">
            <summary>
            Сохраняет изменения рабочей страницы
            </summary>
            <returns>Значение true, если изменения успешно сохранены; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.Delete">
            <summary>
            Удаляет рабочую страницу
            </summary>
            <returns>Значение true, если страница была успешно удалена; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.MoveUp">
            <summary>
            Перемещает страницу вверх в списке рабочих страниц
            </summary>
            <returns>Значение true, если страница успешно перемещена; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.MoveDown">
            <summary>
            Перемещает страницу вниз в списке рабочих страниц
            </summary>
            <returns>Значение true, если страница успешно перемещена; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.Move(System.Int32)">
            <summary>
            Перемещает страницу в списке рабочих страниц на указанное количество позиций 
            </summary>
            <param name="range">Количество позиций, на которое требуется переместить страницу</param>
            <returns>Значение true, если страница успешно перемещена; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.ToString">
            <summary>
            Возвращает строковое представление рабочей страницы
            </summary>
            <returns>Строковое представление страницы</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.UserCollection">
            <summary>
            Коллекция пользователей и групп рабочей страницы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.UserCollection.Page">
            <summary>
            Возвращает рабочую страницу диалога
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.StartPageUserCollection">
            <summary>
            Коллекция пользователей и групп, для которых рабочая страница является страницей приветствия
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage.StartPageUserCollection.AllUsers">
            <summary>
            Возвращает или задает значение, указывающее, содержит ли коллекция всех пользователей
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageAccessType">
            <summary>
            Тип доступа к странице диалога
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageAccessType.DeniedForPageUsers">
            <summary>
            Запрещен для списка пользователей
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageAccessType.AllowedOnlyForPageUsers">
            <summary>
            Разрешен только для списка пользователей
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageManager">
            <summary>
            Менеджер рабочих страниц
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageManager.GetPages">
            <summary>
            Возвращает список рабочих страниц
            </summary>
            <returns>Список рабочих страниц</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageManager.GetPages(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Возвращает список рабочих страниц
            </summary>
            <returns>Список рабочих страниц</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageManager.GetWindowsPages(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Возвращает список рабочих страниц для Windows-клиента
            </summary>
            <returns>Список рабочих страниц</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageManager.GetWebPages(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Возвращает список рабочих страниц для Web-клиента
            </summary>
            <returns>Список рабочих страниц</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageManager.GetDefaultStartPage">
            <summary>
            Возвращает стартовую страницу по умолчанию
            </summary>
            <returns>Рабочая страница</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageManager.GetDefaultStartPage(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Возвращает стартовую страницу по умолчанию
            </summary>
            <returns>Рабочая страница</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageManager.Find(System.Int32)">
            <summary>
            Возвращает рабочую страницу с указанным Id
            </summary>
            <param name="pageId">Id рабочей страницы</param>
            <returns>Рабочая страница</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageManager.Find(TFlex.DOCs.Model.ServerConnection,System.Int32)">
            <summary>
            Возвращает рабочую страницу с указанным Id
            </summary>
            <param name="pageId">Id рабочей страницы</param>
            <returns>Рабочая страница</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageManager.Find(System.Guid)">
            <summary>
            Возвращает рабочую страницу с указанным Guid
            </summary>
            <param name="pageGuid">Guid рабочей страницы</param>
            <returns>Рабочая страница</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageManager.Find(TFlex.DOCs.Model.ServerConnection,System.Guid)">
            <summary>
            Возвращает рабочую страницу с указанным Guid
            </summary>
            <param name="pageGuid">Guid рабочей страницы</param>
            <returns>Рабочая страница</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageManager.Export(System.IO.Stream)">
            <summary>
            Экспортирует все страницы в указанный поток данных в формате xml
            </summary>
            <param name="stream">Поток данных</param>
            <returns>Значение true, если была экспортирована хоть одна страница; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageManager.Export(System.IO.Stream,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage})">
            <summary>
            Экспортирует указанные страницы в заданный поток данных в формате xml
            </summary>
            <param name="stream">Поток данных</param>
            <param name="pages">Коллекция экспортируемых страниц (если null - экспортируются все страницы)</param>
            <returns>Значение true, если была экспортирована хоть одна страница; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageManager.Export(TFlex.DOCs.Model.ServerConnection,System.IO.Stream,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage})">
            <summary>
            Экспортирует указанные страницы в заданный поток данных в формате xml
            </summary>
            <param name="stream">Поток данных</param>
            <param name="pages">Коллекция экспортируемых страниц (если null - экспортируются все страницы)</param>
            <returns>Значение true, если была экспортирована хоть одна страница; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageManager.Import(System.IO.Stream)">
            <summary>
            Импортирует страницы из указанного потока данных
            </summary>
            <param name="stream">Поток данных с xml страниц</param>
            <returns>Список импортированных страниц</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPageManager.Import(TFlex.DOCs.Model.ServerConnection,System.IO.Stream)">
            <summary>
            Импортирует страницы из указанного потока данных
            </summary>
            <param name="stream">Поток данных с xml страниц</param>
            <returns>Список импортированных страниц</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.ClientConfiguration">
            <summary>
            Конфигурация системы
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ClientConfiguration.#ctor">
            <summary>
            Создает новую конфигурацию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ClientConfiguration.RegistryName">
            <summary>
            Возвращает или задает наименование раздела реестра конфигурации
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ClientConfiguration.RegistryKey">
            <summary>
            Возвращает раздел реестра конфигурации
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ClientConfiguration.CurrentRegistryKey">
            <summary>
            Возвращает раздел реестра текущей конфигурации
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ClientConfiguration.CommandLineArguments">
            <summary>
            Возвращает или задает аргументы командной строки для запуска конфигурации
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ClientConfiguration.MainWindowIcon">
            <summary>
            Возвращает или задает иконку конфигурации
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ClientConfiguration.SkinName">
            <summary>
            Возвращает или задает стиль оформления конфигурации
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ClientConfiguration.MainWindowTitle">
            <summary>
            Возвращает или задает заголовок конфигурации
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ClientConfiguration.LoginWindowTitle">
            <summary>
            Возвращает или задает заголовок диалога входа конфигурации
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ClientConfiguration.GetLoginWindowImage">
            <summary>
            Возвращает изображение для диалога входа конфигурации
            </summary>
            <returns>Изображение для диалога входа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ClientConfiguration.GetLoginWindowImageBytes">
            <summary>
            Возвращает массив байтов изображения для диалога входа конфигурации
            </summary>
            <returns>Массив байтов изображения для диалога входа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.ClientConfiguration.SetLoginWindowImage(System.Drawing.Image)">
            <summary>
            Задает изображение для диалога входа конфигурации
            </summary>
            <param name="image">Изображение для диалога входа</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.ClientConfiguration.Default">
            <summary>
            Возвращает конфигурацию "По умолчанию"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.SettingsContainer`1">
            <summary>
            Контейнер настроек (базовый класс для работы с настройками и видами)
            </summary>
            <typeparam name="TSettings">Тип объекта, в котором хранятся настройки, сохраняемого в xml с помощью XmlSerializer</typeparam>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsContainer`1.Application">
            <summary>
            Возвращает приложение
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsContainer`1.Interface">
            <summary>
            Возвращает интерфейс
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsContainer`1.Context">
            <summary>
            Возвращает контекст использования настроек
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsContainer`1.ParameterGroupId">
            <summary>
            Возвращает Id связанной группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsContainer`1.ObjectId">
            <summary>
            Возвращает Id связанного объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsContainer`1.SupportsViews">
            <summary>
            Возвращает значение, указывающее, поддерживаются ли виды
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsContainer`1.SharingType">
            <summary>
            Возвращает тип хранения настроек
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsContainer`1.IsCommon">
            <summary>
            Возвращает значение, указывающее, являются ли настройки общими для всех окон
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsContainer`1.IsLoaded">
            <summary>
            Возвращает значение, указывающее, были ли настройки загружены
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsContainer`1.IsNew">
            <summary>
            Возвращает значение, указывающее, являются ли настройки новыми (ещё не сохранены в БД)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsContainer`1.Exists">
            <summary>
            Возвращает значение true, если настройки были загружены и не были подобраны из похожих по контексту настроек или видов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsContainer`1.Data">
            <summary>
            Возвращает или задаёт данные настроек
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsContainer`1.CurrentApplicationName">
            <summary>
            Возвращает имя текущего приложения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsContainer`1.IsLocked">
            <summary>
            Возвращает значение, указывающее, заблокированы ли настройки
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsContainer`1.Lock">
            <summary>
            Блокирует настройки
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsContainer`1.Unlock">
            <summary>
            Разблокирует настройки
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsContainer`1.Load">
            <summary>
            Загружает настройки
            </summary>
            <returns>Значение true, если настройки существуют и не были подобраны из похожих по контексту настроек или видов; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsContainer`1.Clear">
            <summary>
            Очищает настройки
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsContainer`1.ReloadViews">
            <summary>
            Сбрасывает виды настроек
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsContainer`1.Reset">
            <summary>
            Сбрасывает прочитанные настройки для повторного чтения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsContainer`1.Reload(System.Boolean)">
            <summary>
            Перезагружает настройки
            </summary>
            <returns>Значение true, если настройки существуют и не были подобраны из похожих по контексту настроек или видов; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsContainer`1.Save">
            <summary>
            Сохраняет настройки
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsContainer`1.Remove">
            <summary>
            Удаляет настройки
            </summary>
            <returns>Значение true, если настройки были успешно удалены; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsContainer`1.CreateView(System.String,TFlex.DOCs.Model.Configuration.SettingsViewType,System.Boolean,System.Boolean,TFlex.DOCs.Model.Configuration.ConfigurationUseType,System.Collections.Generic.List{System.Guid})">
            <summary>
            Создаёт вид
            </summary>
            <param name="name">Название вида</param>
            <param name="type">Тип вида</param>
            <param name="inSettingsContext">Значение true, если вид использует контекст настроек, в противном случае - значение false</param>
            <param name="copySettings">Значение true, если надо скопировать текущие данные настроек в вид; в противном случае - значение false</param>
            <param name="configurationUseType">Тип использования списка конфигураций</param>
            <param name="configurtaions">Список конфигураций</param>
            <returns>Созданный вид</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsContainer`1.UpdateView(TFlex.DOCs.Model.Configuration.SettingsView{`0},System.String,TFlex.DOCs.Model.Configuration.SettingsViewType,System.Boolean,System.Boolean,TFlex.DOCs.Model.Configuration.ConfigurationUseType,System.Collections.Generic.List{System.Guid})">
            <summary>
            Обновляет вид
            </summary>
            <param name="view">Вид</param>
            <param name="name">Название вида</param>
            <param name="type">Тип вида</param>
            <param name="inSettingsContext">Значение true, если вид использует контекст настроек; в противном случае - значение false</param>
            <param name="copySettings">Значение true, если надо скопировать текущие данные настроек в вид; в противном случае - значение false</param>
            <param name="configurationUseType">Тип использования списка конфигураций</param>
            <param name="configurtaions">Список конфигураций</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsContainer`1.DeleteView(TFlex.DOCs.Model.Configuration.SettingsView{`0})">
            <summary>
            Удаляет вид
            </summary>
            <param name="view">Вид</param>
            <returns>Значение true, если вид был успешно удалён; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsContainer`1.ApplyView(TFlex.DOCs.Model.Configuration.SettingsView{`0})">
            <summary>
            Применяет указанный вид к настройкам
            </summary>
            <param name="view">Вид</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsContainer`1.ApplyView(System.Guid)">
            <summary>
            Применяет к настройкам вид с указанным Guid
            </summary>
            <param name="viewId">Guid вида</param>
            <returns>Значение true, если вид успешно применен к настройкам; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsContainer`1.Views">
            <summary>
            Возвращает список видов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsContainer`1.CurrentView">
            <summary>
            Возвращает текущий вид настроек
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsContainer`1.DefaultView">
            <summary>
            Возвращает вид, используемый по умолчанию всеми пользователями
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsContainer`1.ToString">
            <summary>
            Возвращает строковое представление настроек
            </summary>
            <returns>Строковое представление настроек</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.SettingsSharingType">
            <summary>
            Тип хранения настроек
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.SettingsSharingType.CurrentUserOnly">
            <summary>
            Могут быть только личные настройки и виды
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.SettingsSharingType.AllUsersOnly">
            <summary>
            Могут быть только общие настройки и виды
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.SettingsSharingType.Mixed">
            <summary>
            Могут быть как общие, так и личные настройки и виды
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.XmlSerializerManager">
            <summary>
            Управление сериализацией XML
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.XmlSerializerManager.RegisterType(System.Type)">
            <summary>
            Регистрирует тип
            </summary>
            <param name="type">Регистрируемый тип</param>
            <returns>Значение true, если тип успешно зарегистрирован; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.XmlSerializerManager.RegisterTypes(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Регистрирует коллекцию типов
            </summary>
            <param name="types">Регистрируемые типы</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.XmlSerializerManager.RegisterTypes(System.Xml.Serialization.XmlSerializer,System.Type[])">
            <summary>
            Регистрирует типы с заданным модулем сериализации
            </summary>
            <param name="serializer">Модуль сериализации XML</param>
            <param name="types">Регистрируемые типы</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.XmlSerializerManager.GetSerializer(System.Type,System.Boolean)">
            <summary>
            Возвращает модуль сериализации для указанного типа
            </summary>
            <param name="type">Тип</param>
            <param name="registerIfNotFound">Значение, указывающее, требуется ли регистрировать тип в случае, если он не был зарегистрирован ранее</param>
            <returns>Модуль сериализации</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.XmlSerializerManager.Serialize``1(``0,System.Boolean)">
            <summary>
            Сериализует указанный объект
            </summary>
            <typeparam name="T">Тип сериализуемого объекта</typeparam>
            <param name="obj">Сериализуемый объект</param>
            <param name="registerType">Значение, указывающее, требуется ли регистрировать тип в случае, если он не был зарегистрирован ранее</param>
            <returns>Строка XML сериализованного объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.XmlSerializerManager.Serialize``1(``0,TFlex.DOCs.Model.ServerConnection,System.Boolean)">
            <summary>
            Сериализует указанный объект
            </summary>
            <typeparam name="T">Тип сериализуемого объекта</typeparam>
            <param name="obj">Сериализуемый объект</param>
            <param name="connection">Соединение с сервером</param>
            <param name="registerType">Значение, указывающее, требуется ли регистрировать тип в случае, если он не был зарегистрирован ранее</param>
            <returns>Строка XML сериализованного объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.XmlSerializerManager.Serialize(System.Object,System.Type,System.Boolean)">
            <summary>
            Сериализует указанный объект
            </summary>
            <param name="obj">Сериализуемый объект</param>
            <param name="type">Тип сериализуемого объекта</param>
            <param name="registerType">Значение, указывающее, требуется ли регистрировать тип в случае, если он не был зарегистрирован ранее</param>
            <returns>Строка XML сериализованного объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.XmlSerializerManager.Serialize(System.Object,System.Type,TFlex.DOCs.Model.ServerConnection,System.Boolean)">
            <summary>
            Сериализует указанный объект
            </summary>
            <param name="obj">Сериализуемый объект</param>
            <param name="type">Тип сериализуемого объекта</param>
            <param name="connection">Соединение с сервером</param>
            <param name="registerType">Значение, указывающее, требуется ли регистрировать тип в случае, если он не был зарегистрирован ранее</param>
            <returns>Строка XML сериализованного объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.XmlSerializerManager.BinarySerialize``1(``0,System.Boolean)">
            <summary>
            Сериализует указанный объект в массив байтов
            </summary>
            <typeparam name="T">Тип сериализуемого объекта</typeparam>
            <param name="obj">Сериализуемый объект</param>
            <param name="registerType">Значение, указывающее, требуется ли регистрировать тип в случае, если он не был зарегистрирован ранее</param>
            <returns>Массив байтов, содержащий строку XML сериализованного объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.XmlSerializerManager.BinarySerialize``1(``0,TFlex.DOCs.Model.ServerConnection,System.Boolean)">
            <summary>
            Сериализует указанный объект в массив байтов
            </summary>
            <typeparam name="T">Тип сериализуемого объекта</typeparam>
            <param name="obj">Сериализуемый объект</param>
            <param name="connection">Соединение с сервером</param>
            <param name="registerType">Значение, указывающее, требуется ли регистрировать тип в случае, если он не был зарегистрирован ранее</param>
            <returns>Массив байтов, содержащий строку XML сериализованного объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.XmlSerializerManager.Deserialize``1(System.String,System.Boolean)">
            <summary>
            Десериализует указанную строку XML в объект
            </summary>
            <typeparam name="T">Тип десериализуемого объекта</typeparam>
            <param name="xml">Строка XML</param>
            <param name="registerType">Значение, указывающее, требуется ли регистрировать тип в случае, если он не был зарегистрирован ранее</param>
            <returns>Десериализованный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.XmlSerializerManager.Deserialize``1(System.String,TFlex.DOCs.Model.ServerConnection,System.Boolean)">
            <summary>
            Десериализует указанную строку XML в объект
            </summary>
            <typeparam name="T">Тип десериализуемого объекта</typeparam>
            <param name="xml">Строка XML</param>
            <param name="connection">Соединение с сервером</param>
            <param name="registerType">Значение, указывающее, требуется ли регистрировать тип в случае, если он не был зарегистрирован ранее</param>
            <returns>Десериализованный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.XmlSerializerManager.Deserialize(System.String,System.Type,System.Boolean)">
            <summary>
            Десериализует указанную строку XML в объект
            </summary>
            <param name="xml">Строка XML</param>
            <param name="type">Тип десериализуемого объекта</param>
            <param name="registerType">Значение, указывающее, требуется ли регистрировать тип в случае, если он не был зарегистрирован ранее</param>
            <returns>Десериализованный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.XmlSerializerManager.Deserialize(System.String,System.Type,TFlex.DOCs.Model.ServerConnection,System.Boolean)">
            <summary>
            Десериализует указанную строку XML в объект
            </summary>
            <param name="xml">Строка XML</param>
            <param name="type">Тип десериализуемого объекта</param>
            <param name="connection">Соединение с сервером</param>
            <param name="registerType">Значение, указывающее, требуется ли регистрировать тип в случае, если он не был зарегистрирован ранее</param>
            <returns>Десериализованный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.XmlSerializerManager.Deserialize``1(System.Byte[],System.Boolean)">
            <summary>
            Десериализует указанный массив байт в объект
            </summary>
            <typeparam name="T">Тип десериализуемого объекта</typeparam>
            <param name="data">Массив байт</param> 
            <param name="registerType">Значение, указывающее, требуется ли регистрировать тип в случае, если он не был зарегистрирован ранее</param>
            <returns>Десериализованный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.XmlSerializerManager.Deserialize``1(System.Byte[],TFlex.DOCs.Model.ServerConnection,System.Boolean)">
            <summary>
            Десериализует указанный массив байт в объект
            </summary>
            <typeparam name="T">Тип десериализуемого объекта</typeparam>
            <param name="data">Массив байт</param> 
            <param name="connection">Соединение с сервером</param>
            <param name="registerType">Значение, указывающее, требуется ли регистрировать тип в случае, если он не был зарегистрирован ранее</param>
            <returns>Десериализованный объект</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.SettingsView`1">
            <summary>
            Вид
            </summary>
            <typeparam name="TSettings">Тип объекта, сериализуемого в xml с помощью XmlSerializer, в котором хранятся настройки</typeparam>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsView`1.Owner">
            <summary>
            Возвращает контейнер настроек, которым принадлежит вид
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsView`1.Id">
            <summary>
            Возвращает Guid вида
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsView`1.Name">
            <summary>
            Возвращает название вида
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsView`1.Type">
            <summary>
            Возвращает тип вида
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsView`1.IsDefault">
            <summary>
            Возвращает значение, указывающее, используется ли данный вид по умолчанию всеми пользователями
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsView`1.IsShared">
            <summary>
            Возвращает значение, указывающее, является ли вид доступным для всех пользователей
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsView`1.IsInSettingsContext">
            <summary>
            Возвращает значение, указывающее, совпадает ли контекст вида с контекстом настроек
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsView`1.ConfigurationUseType">
            <summary>
            Возвращает тип использования списка конфигураций
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Configuration.SettingsView`1.Configurations">
            <summary>
            Возвращает список конфигураций
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsView`1.CanUseInCurrentConfiguration">
            <summary>
            Возвращает значение, указывающее, возможно ли использование вида в текущей конфигурации
            </summary>
            <returns>Значение true, если использование вида в текущей конфигурации разрешено; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsView`1.CanUseInConfiguration(TFlex.DOCs.Model.Configuration.BaseConfiguration)">
            <summary>
            Возвращает значение, указывающее, возможно ли использование вида в указанной конфигурации
            </summary>
            <returns>Значение true, если использование вида в указанной конфигурации разрешено; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsView`1.GetData">
            <summary>
            Возвращает данные вида
            </summary>
            <returns>Данные вида</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsView`1.op_Equality(TFlex.DOCs.Model.Configuration.SettingsView{`0},TFlex.DOCs.Model.Configuration.SettingsView{`0})">
            <summary>
            Определяет, эквивалентны ли указанные виды
            </summary>
            <param name="first">Первый вид для сравнения</param>
            <param name="second">Второй вид для сравнения</param>
            <returns>Значение true, если указанные виды одинаковы; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsView`1.op_Inequality(TFlex.DOCs.Model.Configuration.SettingsView{`0},TFlex.DOCs.Model.Configuration.SettingsView{`0})">
            <summary>
            Определяет, различаются ли указанные виды
            </summary>
            <param name="first">Первый вид для сравнения</param>
            <param name="second">Второй вид для сравнения</param>
            <returns>Значение true, если указанные виды различаются; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsView`1.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если заданный объект равен текущему; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsView`1.GetHashCode">
            <summary>
            Возвращает хэш-код объекта
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsView`1.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns>Строковое представление объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsView`1.CompareTo(TFlex.DOCs.Model.Configuration.SettingsView{`0})">
            <summary>
            Сравнивает текущий объект с указанным
            </summary>
            <param name="other">Объект для сравнения</param>
            <returns>Значение равное нулю, если объекты равны; значение большее нуля, если текущий объект больше указанного; значение меньшее нуля, если текущий объект меньше указанного</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Configuration.SettingsView`1.CompareTo(TFlex.DOCs.Model.Configuration.ISettingsView)">
            <summary>
            Сравнивает текущий объект с указанным
            </summary>
            <param name="other">Объект для сравнения</param>
            <returns>Значение равное нулю, если объекты равны; значение большее нуля, если текущий объект больше указанного; значение меньшее нуля, если текущий объект меньше указанного</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Configuration.SettingsViewType">
            <summary>
            Тип вида
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.SettingsViewType.Private">
            <summary>
            Вид принадлежит текущему пользователю
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.SettingsViewType.Shared">
            <summary>
            Вид доступен всем пользователям
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Configuration.SettingsViewType.Default">
            <summary>
            Вид доступен всем пользователям, и используется по умолчанию
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADExchange.CombineFilesProvider">
            <summary>
            Контекст для сохранения нескольких файлов T-FLEX CAD в один
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADExchange.CombineFilesProvider.OutputPath">
            <summary>
            Путь, по которому необходимо сохранить новый файл
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADExchange.CombineFilesProvider.FilesToCombine">
            <summary>
            Файлы, которые надо объединить в один
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADExchange.CombineFilesProvider.IsEmbedded">
            <summary>
            Делать ли фрагменты вложенными
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADExchange.CombineFilesProvider.Serialize">
            <summary>
            Сериализовать контекст
            </summary>
            <returns>Массив байт</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADExchange.CombineFilesProvider.Deserialize(System.Byte[])">
            <summary>
            Десериализовать контекст
            </summary>
            <param name="data">Данные для десериализации</param>
            <returns>Контекст</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADExchange.CombineFilesProvider.Execute(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Выполняет объединение файлов
            </summary>
            <param name="connection">Соединение с сервером приложения</param>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADExchange.CombineFilesProvider.GetLinkPath(System.String)">
            <summary>
            Получает путь до вставляемого файл
            </summary>
            <param name="file">Файл, который необходимо вложить</param>
            <returns>Возвращает корректный путь до вставляемого файла</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.CadDocument">
            <summary>
            Класс, представляющий документ CAD системы
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.#ctor(System.String,System.Boolean)">
            <summary>
            Конструктор для создания представителя документ CAD системы
            </summary>
            <param name="path">Полный путь к документу CAD системы</param>
            <param name="readOnly">Открыт ли документ только для чтения</param>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.#ctor(System.String,System.Boolean,System.Object)">
            <summary>
            Конструктор для создания представителя документ CAD системы
            </summary>
            <param name="path">Полный путь к документу CAD системы</param>
            <param name="readOnly">Открыт ли документ только для чтения</param>
            <param name="context">Контекст открытия документа</param>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.Path">
            <summary>
            Полный путь к документу CAD системы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.ReadOnly">
            <summary>
            Открыт ли документ только для чтения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.Context">
            <summary>
            Контекст открытия документа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.Id">
            <summary>
            Внутренний идентификатор документа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.IsActive">
            <summary>
            Открыт ли документ в CAD системе
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.Provider">
            <summary>
            Объект, отвечающий за взаимодействие с CAD системой
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.Service">
            <summary>
            Сервис для работы с CAD системой
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.Open(TFlex.DOCs.Model.FilePreview.CADService.CadDocumentProvider)">
            <summary>
            Открыть документ в CAD системе
            </summary>
            <param name="provider">Объект, отвечающий за взаимодействие с CAD системой</param>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.Close(System.Boolean)">
            <summary>
            Закрыть документ в CAD системе
            </summary>
            <param name="save">Сохранить документ</param>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.GetVariables">
            <summary>
            Получить список переменных документа
            </summary>
            <returns>Возвращает список переменных</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.GetFragments2D">
            <summary>
            Получить коллекцию 2D фрагментов
            </summary>
            <returns>Возвращает коллекцию 2D фрагментов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.GetFragments3D">
            <summary>
            Получить коллекцию 3D фрагментов
            </summary>
            <returns>Возвращает коллекцию 3D фрагментов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.GetLCSs">
            <summary>
            Получить коллекцию локальных систем координат
            </summary>
            <returns>Возвращает коллекцию локальных систем координат</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.GetConnectors2D">
            <summary>
            Получить коллекцию 2D коннекторов
            </summary>
            <returns>Возвращает коллекцию 2D коннекторов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.GetConnectors3D">
            <summary>
            Получить коллекцию 3D коннекторов
            </summary>
            <returns>Возвращает коллекцию 3D коннекторов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.InsertFragment3D(TFlex.DOCs.Model.FilePreview.CADService.LCS,TFlex.DOCs.Model.FilePreview.CADService.LCS,System.String,System.Boolean)">
            <summary>
            Вставить в документ 3D фрагмент по ЛСК
            </summary>
            <param name="documentLCS">Локальная система координат документа</param>
            <param name="fragmentLCS">Локальная система координат фрагмента</param>
            <param name="fragmentPath">Полный путь до вставляемого фрагмента</param>
            <param name="embedded">Сделать ли фрагмент вложенным</param>
            <returns>Возвращает 3D фрагмент</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.InsertFragment3D(TFlex.DOCs.Model.FilePreview.CADService.Connector3D,TFlex.DOCs.Model.FilePreview.CADService.LCS,System.String,System.Boolean)">
            <summary>
            Вставить в документ 3D фрагмент по коннектору
            </summary>
            <param name="documentConnector">Коннектор документа</param>
            <param name="fragmentLCS">Локальная система координат фрагмента</param>
            <param name="fragmentPath">Полный путь до вставляемого фрагмента</param>
            <param name="embedded">Сделать ли фрагмент вложенным</param>
            <returns>Возвращает 3D фрагмент</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.SaveInNomenclature">
            <summary>
            Сохранить состав изделия в номенклатуру
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.OpenPart(TFlex.DOCs.Model.FilePreview.CADService.Fragment)">
            <summary>
            Открыть фрагмент как деталировку
            </summary>
            <param name="fragment">Фрагмент, который нужно открыть</param>
            <returns>Возвращает открытый документ</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.OpenLink(TFlex.DOCs.Model.FilePreview.CADService.Fragment)">
            <summary>
            Открыть фрагмент
            </summary>
            <param name="fragment">Фрагмент, который нужно открыть</param>
            <returns>Возвращает открытый документ</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocument.Export(TFlex.DOCs.Model.FilePreview.CADService.ExportContext)">
            <summary>
            Экспортировать документ в другой формат
            </summary>
            <param name="exportContext">Настройки эскпорта</param>
            <returns>Возвращает полный путь до экспортированного файла</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.CadDocumentProvider">
            <summary>
            Класс, отвечающий за взаимодействие с выбранной CAD системой
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocumentProvider.Connect(TFlex.DOCs.Model.ServerConnection,System.String,System.String,System.Object)">
            <summary> Подключение к CAD системе </summary>
            <param name="connection">Соединение с сервером приложений</param>
            <param name="extension">Расширение файлов, с которым необходимо работать</param>
            <param name="integrationRule">Правило настройки интеграции (строка Guid'а)</param>
            <param name="context">Контекст отрытия документов по умолчанию</param>
            <returns>Возвращает объект, который позволяет работать с документами CAD системы</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocumentProvider.Connect(TFlex.DOCs.Model.ServerConnection,TFlex.DOCs.Model.FilePreview.Service.FilePreviewType,System.String,System.Object)">
            <summary> Подключение к CAD системе </summary>
            <param name="connection">Соединение с сервером приложений</param>
            <param name="filePreviewType">Тип модуля просмотра</param>
            <param name="integrationRule">Правило настройки интеграции (строка Guid'а)</param>
            <param name="context">Контекст отрытия документов по умолчанию</param>
            <returns>Возвращает объект, который позволяет работать с документами CAD системы</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.CadDocumentProvider.IsActive">
            <summary>
            Является ли активным подключение к CAD системе
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.CadDocumentProvider.Context">
            <summary>
            Контекст отрытия документов по умолчанию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.CadDocumentProvider.Connection">
            <summary>
            Соединение с сервером приложений
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.CadDocumentProvider.FilePreview">
            <summary>
            Тип модуля просмотра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.CadDocumentProvider.Service">
            <summary>
            Сервис для работы с CAD системой
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocumentProvider.OpenDocument(System.String,System.Boolean,System.Object)">
            <summary>
            Открыть CAD документ
            </summary>
            <param name="path">Полный путь к документу</param>
            <param name="readOnly">Открыть только на чтение</param>
            <param name="context">Контекст открытия</param>
            <returns>Возвращает открытый документ</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocumentProvider.RegisterLibrary(System.String)">
            <summary>
            Подключить библиотеку
            </summary>
            <param name="path">Полный путь к файлу библиотеки компонентов</param>
            <returns>Возвращает наименование библиотеки, если подключение проведено успешно</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.CadDocumentProvider.SetIntegrationRule(System.String)">
            <summary>
            Установить правило настройки интеграции
            </summary>
            <param name="integrationRule">Правило настройки интеграции (строка Guid'а)</param>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.Connector">
            <summary>
            Коннектор
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Connector.Service">
            <summary>
            Сервис для работы с CAD системой
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Connector.Document">
            <summary>
            Документ CAD системы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Connector.IsActive">
            <summary>
            Открыт ли документ в CAD системе
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.Connector.GetVariables">
            <summary>
            Получить список переменных коннектора
            </summary>
            <returns>Возвращает список переменных</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.Connector2D">
            <summary>
            Коннектор на плоскости
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.Connector2D.Initialize(TFlex.DOCs.Model.FilePreview.CADService.Point2D,TFlex.DOCs.Model.FilePreview.CADService.Point2D)">
            <summary>
            Инициализировать коннектор
            </summary>
            <param name="startNode">Точка начала</param>
            <param name="endNode">Точка окончания</param>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.Connector2D.GetAngle">
            <summary>
            Получить направление коннектора
            </summary>
            <returns>Возвращает угол относительно оси X (в градусах)</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Connector3D.LCS">
            <summary>
            Локальная система координат, к которой привязан коннектор
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.ConnectorCollection">
            <summary>
            Коллекция коннекторов
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.ExportContext">
            <summary>
            Настройки экспорта документа CAD системы в другой формат
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.ExportContext.#ctor(System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="path">Полный путь на результирующий файл, включая расширение</param>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.ExportContext.Path">
            <summary>
            Полный путь на результирующий файл
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.ExportContext.Page">
            <summary>
            Номер страницы, которую нужо экспортировать
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.ExportContext.Pages">
            <summary>
            Список страниц, которые нужно эскпортировать
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.ExportContext.Item(System.String)">
            <summary>
            Свойства
            </summary>
            <param name="key">Имя свойства</param>
            <returns>Значение свойства</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.Fragment">
            <summary>
            Фрагмент
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Fragment.Service">
            <summary>
            Сервис для работы с CAD системой
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Fragment.Document">
            <summary>
            Документ фрагмента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Fragment.IsActive">
            <summary>
            Открыт ли документ в CAD системе
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.Fragment.GetVariables">
            <summary>
            Получить список переменных документа
            </summary>
            <returns>Возвращает список переменных</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.Fragment.GetRealProperty(System.String)">
            <summary>
            Получить значение действительного свойства
            </summary>
            <param name="propertyName">Имя свойства</param>
            <returns>Возвращает значение свойства</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.Fragment.GetTextProperty(System.String)">
            <summary>
            Получить значение текстового свойства
            </summary>
            <param name="propertyName">Имя свойства</param>
            <returns>Возвращает значение свойства</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.Fragment.GetProperties">
            <summary>
            Получить коллекцию свойств
            </summary>
            <returns>Возвращает коллекцию свойств</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.Fragment.OpenPart">
            <summary>
            Открыть как деталировку
            </summary>
            <returns>Возвращает открытый документ</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.Fragment.OpenLink">
            <summary>
            Открыть отдельный документ
            </summary>
            <returns>Возвращает открытый документ</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.Fragment2D">
            <summary>
            2D фрагмент
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.Fragment3D">
            <summary>
            3D фрагмент
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.Fragment3D.GetLCSs">
            <summary>
            Получить коллекцию ЛСК фрагмента
            </summary>
            <returns>Возвращает коллекцию ЛСК</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.Fragment3D.CompareTo(System.String,TFlex.DOCs.Model.FilePreview.CADService.LCS,System.String)">
            <summary>
            Сравнить фрагмент с другим документом
            </summary>
            <param name="compareToDocument">Документ, с которым сравнивается фрагмент</param>
            <param name="sourceLCS">ЛСК фрагмента</param>
            <param name="compareToDocumentLCS">ЛСК документа</param>
            <returns>Возвращает разницу объёмов между сравниваемыми объектами при их наложении по переданным ЛСК</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.Fragment3D.IsCorrect">
            <summary>
            Проверить фрагмент на пересечение тел
            </summary>
            <returns>Возвращает True, если пересечений не обнаружени</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.FragmentCollection">
            <summary>
            Коллекция фрагментов
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.LCS">
            <summary>
            Локальная система координат (ЛСК)
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.LCS.Initialize(TFlex.DOCs.Model.FilePreview.CADService.Point3D,TFlex.DOCs.Model.FilePreview.CADService.Point3D,TFlex.DOCs.Model.FilePreview.CADService.Point3D,TFlex.DOCs.Model.FilePreview.CADService.Point3D)">
            <summary>
            Инициализировать ЛСК
            </summary>
            <param name="origin">Начало координат</param>
            <param name="pointX">Точка на оси X</param>
            <param name="pointY">Точка на оси Y</param>
            <param name="pointZ">Точка на оси Z</param>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.LCS.Origin">
            <summary>
            Начало системы координат
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.LCS.PointX">
            <summary>
            Точка на оси X
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.LCS.PointY">
            <summary>
            Точка на оси Y
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.LCS.PointZ">
            <summary>
            Точка на оси Z
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.LCSCollection">
            <summary>
            Коллекция локальных систем координат
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.ModelObject.Name">
            <summary>
            Наименование
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.ModelObject.UniqueId">
            <summary>
            Уникальный идентификатор
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.ModelObjectCollection`1.Add(`0)">
            <summary>
            Добавить элемент
            </summary>
            <param name="modelObject">Элемент для добавления</param>
            <returns>Возвращает True, если элемент успешно добавлен</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.ModelObjectCollection`1.Find(System.String)">
            <summary>
            Найти элемент
            </summary>
            <param name="name">Имя элемента</param>
            <returns>Возвращает элемент</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.ModelObjectCollection`1.ForEach(System.Action{`0})">
            <summary>
            Выполнить действие для каждого элемента
            </summary>
            <param name="action">Действие для выполнения</param>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.ModelObjectCollection`1.Contains(`0)">
            <summary>
            Содержится ли элемент в коллекции
            </summary>
            <param name="item">Элемент</param>
            <returns>Возврадает True, если элемент присутствует в коллекции</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.ModelObjectCollection`1.Count">
            <summary>
            Количество элементов в коллекции
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.ModelObjectCollection`1.IsReadOnly">
            <summary>
            Коллекция только для чтения
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.Point2D">
            <summary>
            Точка на плоскости
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Point2D.X">
            <summary>
            Координата X
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Point2D.Y">
            <summary>
            Координата Y
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.Point3D">
            <summary>
            Точка в пространстве
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Point3D.Z">
            <summary>
            Координата Z
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.Property">
            <summary>
            Свойство
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Property.Name">
            <summary>
            Наименование свойства
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Property.Value">
            <summary>
            Значение свойства
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Property`1.Value">
            <summary>
            Значение свойства
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.RealProperty">
            <summary>
            Действительное свойство
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.IntProperty">
            <summary>
            Целочисленное свойство
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.TextProperty">
            <summary>
            Текстовое свойство
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.PropertyCollection">
            <summary>
            Коллекция свойств
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.PropertyCollection.Count">
            <summary>
            Количество свойств
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.PropertyCollection.Add(TFlex.DOCs.Model.FilePreview.CADService.Property)">
            <summary>
            Добавить свойство в коллекцию
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.PropertyCollection.Find(System.String)">
            <summary>
            Найти свойство
            </summary>
            <param name="name">Имя свойства</param>
            <returns>Возвращает найденное свойство</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.PropertyCollection.GetRealProperty(System.String)">
            <summary>
            Получить действительное значение свойства
            </summary>
            <param name="name">Имя свойства</param>
            <returns>Возвращает действительное значение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.PropertyCollection.GetIntProperty(System.String)">
            <summary>
            Получить целочисленное значение свойства
            </summary>
            <param name="name">Имя свойства</param>
            <returns>Возвращает целочисленное значение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.PropertyCollection.GetTextProperty(System.String)">
            <summary>
            Получить текстовое значение свойства
            </summary>
            <param name="name">Имя свойства</param>
            <returns>Возвращает текстовое значение</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.Variable">
            <summary>
            Переменная CAD системы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Variable.Name">
            <summary>
            Наименование переменной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Variable.Value">
            <summary>
            Значение переменной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Variable.Expression">
            <summary>
            Выражение для вычисления значения переменной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Variable.Description">
            <summary>
            Описание / комментарий
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Variable.IsExternal">
            <summary>
            Является ли переменная внешней
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Variable.IsModify">
            <summary>
            Вносились ли изменения в переменную
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Variable.Owner">
            <summary>
            Коллекция, которой принадлежит данная переменная 
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.Variable.SetModify">
            <summary>
            Отметить переменную изменённой
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.Variable.CopyFrom(TFlex.DOCs.Model.FilePreview.CADService.Variable)">
            <summary>
            Скопировать свойства с другой переменной
            </summary>
            <param name="other">Переменная, с которой копируются свойства</param>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.Variable`1.Value">
            <summary>
            Значение переменной
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.StringVariable">
            <summary>
            Строковая переменная
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.DoubleVariable">
            <summary>
            Действительная переменная
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.CADService.VariableCollection">
            <summary>
            Список переменных документа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.VariableCollection.IsActive">
            <summary>
            Открыт ли документ в CAD системе
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.VariableCollection.Service">
            <summary>
            Сервис для работы с CAD системой
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.VariableCollection.OwnerId">
            <summary>
            Идентификатор владельца переменных
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.VariableCollection.Document">
            <summary>
            Документ CAD системы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.CADService.VariableCollection.Count">
            <summary>
            Количество переменных в коллекции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.VariableCollection.Add(TFlex.DOCs.Model.FilePreview.CADService.Variable)">
            <summary>
            Добавить переменную
            </summary>
            <param name="variable">Переменная, которую неободимо добавить</param>
            <returns>Возвращает True, если переменная успешно добавлена</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.VariableCollection.AddRange(TFlex.DOCs.Model.FilePreview.CADService.Variable[])">
            <summary>
            Добавить несколько переменных
            </summary>
            <param name="variables">Добавляемые переменные</param>
            <returns>Возвращает количество добавленных переменных</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.VariableCollection.Save">
            <summary>
            Сохраняет изменения в документ
            </summary>
            <returns>Возвращает True, если сохранение прошло успешно</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.VariableCollection.Get(System.String)">
            <summary>
            Получить переменную
            </summary>
            <param name="name">Имя переменной</param>
            <returns>Возвращает переменную</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.CADService.VariableCollection.ForEach(System.Action{TFlex.DOCs.Model.FilePreview.CADService.Variable})">
            <summary>
            Выполнить действие для каждой переменной
            </summary>
            <param name="action">Выполняемое действие</param>
        </member>
        <member name="T:TFlex.DOCs.Model.FilePreview.Contract.FilePreviewerDescriptionAttribute">
            <summary>
            Атрибут описания модуля просмотра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.Contract.FilePreviewerDescriptionAttribute.Name">
            <summary>
            Возвращает имя модуля препросмотра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.Contract.FilePreviewerDescriptionAttribute.ErrorMessage">
            <summary>
            Возвращает или задает текст сообщения об ошибке загрузки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.Contract.FilePreviewerDescriptionAttribute.Extensions">
            <summary>
            Возвращает или задает расширения без точки через точку с запятой
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FilePreview.Contract.FilePreviewerDescriptionAttribute.Platform">
            <summary>
            Возвращает или задает разрядность
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.FilePreview.Contract.FilePreviewerDescriptionAttribute.#ctor(System.String,System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="name">Имя модуля препросмотра</param>
        </member>
        <member name="T:TFlex.DOCs.Model.Internal.Search.ISupportSecondOperatorCustomValue">
            <summary> Интерфейс для операторов сравнения, в которых тип второго параметра не соответствует типу первого параметра </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient">
            <summary>
            Клиентская часть для связи с сервером приложений
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary>
            
            </summary>
            <param name="callbackInstance"></param>
            <param name="binding"></param>
            <param name="remoteAddress"></param>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.IsCommandAllowed(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Разрешена ли команда для элемента справочника
            </summary>
            <param name="command">Проверяемая команда</param>
            <param name="referenceId">Справочник</param>
            <param name="objectId">Объект, по отношению к которому применяется команда</param>
            <param name="linkId">Связь, по отношению к которой применяется команда</param>
            <returns>true - команда разрешена</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.GetAccessGroups(System.Int32,System.Int32,System.Int32)">
            <summary>
            Получить группы прав доступа для объекта (справочника)
            </summary>
            <param name="typeId">Тип групп прав доступа (перечислитель AccessCommandType)</param>
            <param name="referenceId">Справочник</param>
            <param name="objectId">Объект</param>
            <returns>Список групп прав доступа на объект (справочник)</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.GetAccessGroup(System.Int32)">
            <summary>
            Получить группу прав доступа
            </summary>
            <param name="groupId">Идентификатор группы прав доступа</param>
            <returns>Группа прав доступа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.SaveAccessGroup(TFlex.DOCs.Data.AccessGroup)">
            <summary>
            Сохранить группу прав доступа
            </summary>
            <param name="group">Группа прав доступа</param>
            <returns>Ключ группы</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.DeleteAccessGroup(System.Int32)">
            <summary>
            Удалить группу прав доступа
            </summary>
            <param name="groupId">Удаляемая группа</param>
            <returns>true - удаление прошло успешно</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.GetAccess(System.Int32,System.Int32,System.Int32,TFlex.DOCs.Common.AccessTypeID,System.Boolean,System.Boolean,TFlex.DOCs.Common.AccessRightsLoadOptions)">
            <summary>
            Получить доступы для указанного элемента
            </summary>
            <param name="referenceId">Идентификатор справочника</param>
            <param name="objectId">Идентификатор объекта</param>
            <param name="stageId">Идентификатор стадии</param>
            <param name="type">Тип доступов</param>
            <param name="currentUser">Идентификатор текущего пользователя</param>
            <param name="getParentObjectId">Требуется ли отыскать родительский объект</param>
            <param name="options">Режим чтения прав доступа</param>
            <returns>Набор прав доступа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.SetAccess(System.Int32,System.Int32,System.Int32,TFlex.DOCs.Data.AccessObject[],TFlex.DOCs.Data.AccessGroup[])">
            <summary>
            Записать права доступа на указанный элемент системы DOCs
            </summary>
            <param name="referenceId">Справочник</param>
            <param name="objectId">Объект</param>
            <param name="stageId">Стадия</param>
            <param name="access">Список прав доступа</param>
            <param name="groups">Список групп прав доступа</param>
            <returns>Список Guid</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.ClearAccess(System.Int32,System.Int32)">
            <summary>
            Очистить доступы для указанного объекта
            </summary>
            <param name="referenceId">Справочник</param>
            <param name="objectId">Объект</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.AccessCacheRefreshStages">
            <summary>
            Обновить кэш прав доступа для всех стадий
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.AccessCacheRefreshReferences">
            <summary>
            Обновить кэш прав доступа для всех справочников
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.AccessCacheRefreshReference(System.Int32)">
            <summary>
            Обновить кэш прав доступа для указанного справочника
            </summary>
            <param name="referenceId">Справочник, для которого требуется обновить кэш прав доступа</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.Create_xReferences(System.Int32)">
            <summary>
            Создать набор перекрёстных ссылок в таблице "xRefs" для указанного справочника
            </summary>
            <param name="referenceId">Справочник, в котором включено наследование прав доступа по связям</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.Remove_xReferences(System.Int32)">
            <summary>
            Удалить набор перекрёстных ссылок из таблицы "xRefs" для указанного справочника
            </summary>
            <param name="referenceId">Справочник, в котором отключено наследование прав доступа по связям</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.LoadSimpleReferences(System.Int32[])">
            <summary>
            Загрузить краткие описания справочников по их идентификаторам
            </summary>
            <param name="referenceIDs">Список идентификаторов справочников (пустое значение - все справочники)</param>
            <returns>Краткие описания справочников (коллекция возвращается всегда). 
            Ключ: id справочника, значение: краткое описание справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.LoadSimpleStages">
            <summary>
            Загрузить краткие описания стадий
            </summary>
            <returns>Краткие описания стадий (коллекция возвращается всегда). 
            Ключ: id стадии, значение: краткое описание стадии</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.LoadSimpleObjects(System.Int32,System.Int32,System.Int32[])">
            <summary>
            Загрузить краткие описания объектов справочника по их идентификаторам
            </summary>
            <param name="clientViewID"></param>
            <param name="referenceID">Идентификатор справочника</param>
            <param name="objectIDs">Список идентификаторов объектов (не задано - все объекты справочника)</param>
            <returns>Краткие описания справочников (коллекция возвращается всегда). 
            Ключ: id справочника, значение: краткое описание справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.CertificateInUse(System.Guid)">
            <summary>
            Используется ли сертификат в каких-либо параметрах
            </summary>
            <param name="certificateGuid">Guid сертификата</param>
            <returns>Применение сертификата</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.CloseCertificate(System.Guid)">
            <summary>
            Закрыть сертификат
            </summary>
            <param name="certificateGuid">Guid сертификата</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.ApplyCertificates(TFlex.DOCs.Common.Encryption.CertificateSessionItemsCollection)">
            <summary>
            Применить коллекцию открытых сертификатов
            </summary>
            <param name="certificates">Сертификаты или null</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.OpenCloseSymmetricKey(System.String,System.String,System.String)">
            <summary>
            Открыть и закрыть симметричный ключ шифрования с помощью указанного асимметричного ключа и его пароля.
            Метод вернёт false, если ключ открыть не удалось, true, если открытие было успешным.
            Исключения, которые могут появиться во время работы метода, будут подавлены, результатом будет false.
            
            ВНИМАНИЕ! Данный метод ЗАКРЫВАЕТ указанный симметричный ключ!
            
            </summary>
            <param name="symmkeyName">Имя открываемого симметричного ключа шифрования</param>
            <param name="asymmkeyName">Имя асимметричного ключа, с помощью которого открывается симметричный ключ</param>
            <param name="asymmKeyPassword">Пароль для открытия асимметричного ключа шифрования - [AsymmHash]</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.AlterAsymmetricKey(System.String,System.String,System.String)">
            <summary>
            Обновить пароль асимметричного ключа шифрования
            </summary>
            <param name="keyName">Название ключа</param>
            <param name="oldPassword">Прежный пароль - [AsymmHash]</param>
            <param name="newPassword">Новый пароль - [AsymmHash]</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.CreateKeysPair(System.Guid,System.String,TFlex.DOCs.Common.Encryption.AsymmEncryptionMethod,TFlex.DOCs.Common.Encryption.SymmEncryptionMethod)">
            <summary>
            Создать пару связанных ключей шифрования, которые будут назначены указанному сертификату,
            вернуть название симметричного ключа шифрования для сертификата.
            В случае, если с сертификатом уже связаны ключи, будет возвращены их имена
            </summary>
            <param name="certificateGuid">Идентификатор объекта-сертификата, для которого требуется создать пару ключей шифрования</param>
            <param name="passwordHash">Хэш-код пароля пользователя для шифрования ключей (первичный хэш [PH])</param>
            <param name="asymmMethod">Способ шифрования асимметричного ключа</param>
            <param name="symmMethod">Способ шифрования симметричного ключа</param>
            <returns>Имя симметричного ключа шифрования / имя асимметричного ключа шифрования</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Connection.ApplicationServerClient.DropKeysPair(System.Guid)">
            <summary>
            Удалить пару связанных ключей шифрования, которые были назначены указанному сертификату
            </summary>
            <param name="certificateGuid">Идентификатор объекта-сертификата, для которого требуется удалить пару ключей шифрования</param>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Classes.SystemClasses.Users.Group">
            <summary>
            Группа пользователей
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Classes.SystemClasses.Users.Subdivision">
            <summary>
            Подразделение
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Classes.SystemClasses.Users.Enterprise">
            <summary>
            Предприятие
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Classes.SystemClasses.Users.Division">
            <summary>
            Отдел
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Classes.SystemClasses.Users.User">
            <summary>
            Пользователь
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Classes.SystemClasses.Users.Employee">
            <summary>
            Сотрудник
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Classes.SystemClasses.Users.DisconnectedUser">
            <summary>
            Отключенный пользователь
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Classes.SystemClasses.Users.OutsideUser">
            <summary>
            Внешний пользователь
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Classes.SystemClasses.Users.Administrator">
            <summary>
            Администратор
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Classes.SystemClasses.Users.Post">
            <summary>
            Должность
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Classes.SystemClasses.Users.ProductionUnit">
            <summary>
            Производственное подразделение
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Classes.SystemClasses.Users.Shop">
            <summary>
            Цех
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Classes.SystemClasses.Users.Area">
            <summary>
            Участок
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Classes.SystemClasses.Users.Workplace">
            <summary>
            Рабочее место
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Classes.SystemClasses.Users.Workcenter">
            <summary>
            Рабочий центр
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Classes.SystemClasses.Users.WorkflowRole">
            <summary>
            Роль бизнес-процесса
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Classes.SystemClasses.WorkingAreaClasses.Folder">
            <summary>
            Папка
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Classes.SystemClasses.WorkingAreaClasses.Shortcut">
            <summary>
            Ярлык
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Classes.SystemClasses.WorkingAreaClasses.Desktop">
            <summary>
            Рабочий стол
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Internal.Structure.SystemParameterInfo">
            <summary>
            Описание системного параметра справочника (модель)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.SystemParameterInfo.PreviousPropertiesState">
            <summary>
            Текущее состояние ключевых свойств параметра в виде коллекции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Structure.SystemParameterInfo.FixParameterState">
            <summary>
            Зафиксировать текущее состояние параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.SystemParameterInfo.Encrypted">
            <summary>
            Системные параметры не могут быть зашифрованы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.SystemParameterInfo.CertificateGuid">
            <summary>
            Системные параметры не могут быть зашифрованы
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Internal.Structure.ObjectIdParameterInfo">
            <summary>
            Описание параметра справочника "Идентификатор объекта" (модель)
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo">
            <summary>
            Описание пользовательского параметра справочника (модель)
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo._source">
            <summary>
            Параметр-источник
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo._id">
            <summary>
            Идентификатор параметра
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo._guid">
            <summary>
            Глобальный уникальный идентификатор параметра
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo._unit">
            <summary>
            Единица измерения параметра
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo._defaultValue">
            <summary>
            Значение по умолчанию
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo._valueList">
            <summary>
            Список значений
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.#ctor(TFlex.DOCs.Data.ParameterInfo,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создать пользовательский параметр
            </summary>
            <param name="source">Параметр-источник</param>
            <param name="group">Группа параметров</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.Refresh(TFlex.DOCs.Data.ParameterInfo)">
            <summary>
            Обновить состояние из указанного источника
            </summary>
            <param name="source">Параметр-источник</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.Source">
            <summary>
            Параметр-источник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.Id">
            <summary>
            Идентификатор параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.Guid">
            <summary>
            Глобальный уникальный идентификатор параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.Type">
            <summary>
            Тип параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.Name">
            <summary>
            Название параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.Comment">
            <summary>
            Примечание
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.Length">
            <summary>
            Максимально допустимая длина
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.Format">
            <summary>
            Формат
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.DecimalPlaces">
            <summary>
            Точность числа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.IsVisible">
            <summary>
            Отображается ли в интерфейсе
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.EditType">
            <summary>
            Способ изменения значения параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.Nullable">
            <summary>
            Допустимость NULL-значений
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.IsRequired">
            <summary>
            Параметр является обязательным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.Encrypted">
            <summary>
            Значение параметра зашифровано
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.CertificateGuid">
            <summary>
            Guid сертификата, который назначен параметру для шифрования
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.DefaultValue">
            <summary>
            Значение по умолчанию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.IsIndexed">
            <summary>
            Индексирование значений параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.ActivityStatus">
            <summary>
            Статус активности параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.CanEdit">
            <summary>
            Допускается ли изменение значений параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.CanDelete">
            <summary>
            Допускается ли удаление параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.Unit">
            <summary>
            Единица измерения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.ValueList">
            <summary>
            Список значений параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.UserControl">
            <summary>
            Компонент для просмотра и редактирования параметра
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.FixParameterState">
            <summary>
            Зафиксировать текущее состояние параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.UserParameterInfo.PreviousPropertiesState">
            <summary>
            Предыдущее состояние ключевых свойств параметра в виде коллекции
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Internal.Structure.DataTableParameterType">
            <summary>
            Тип параметра "Таблица данных"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Structure.DataTableParameterType.#ctor">
            <summary>
            Создать экземпляр класса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.DataTableParameterType.Name">
            <summary>
            Название типа данных
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.DataTableParameterType.MaxSize">
            <summary>
            Максимально допустимый размер данных
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.DataTableParameterType.SupportsSize">
            <summary>
            Поддержка изменения размера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.DataTableParameterType.SupportsMaxSize">
            <summary>
            Поддержка максимального размера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.DataTableParameterType.IsVariantSize">
            <summary>
            Данные переменной длины
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.DataTableParameterType.IsSupported">
            <summary>
            Тип зарезервирован для внутренних целей - использование для вызова хранимых процедур и функций с табличными аргументами и результатами
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.DataTableParameterType.CanBeEncrypted">
            <summary>
            Не шифруем
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Structure.DataTableParameterType.CreateParameter(TFlex.DOCs.Model.Parameters.ParameterCollection,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создать параметр
            </summary>
            <param name="owner">Владелец</param>
            <param name="info">Описание параметра</param>
            <returns>Параметр</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Structure.DataTableParameterType.GetObjectParameterType">
            <summary>
            Получить тип физического представления параметра
            </summary>
            <returns>Параметр массива байт</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.HtmlParameterType.CanBeEncrypted">
            <summary>
            Слишком крупные размеры не позволили Html-у пролезть вслед за Алисой в эту кроличью нору
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.Structure.RtfParameterType.CanBeEncrypted">
            <summary>
            Шифровать нельзя
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Internal.ReferenceManager">
            <summary>
            Управление справочниками
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Internal.ReferenceManager._specialReferences">
            <summary>
            Коллекция специальных (системных) справочников
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Plugins.InterfaceCreator`1.CreateInterface">
            <summary>
            Создание объекта, описывающего интерфейс
            </summary>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Plugins.InterfaceCreator`1.FindInterfaceInRepository">
            <summary>
            Поиск реализации интерфейса T
            </summary>
            <returns>Загрузчик интерфейса, если интерфейс так и не был найден, то он попытается создаться через все загруженные сборки</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Plugins.InterfaceCreator`1.FindInterfaceByContextInUIMap">
            <summary>
            Поиск интерфейса в списке предопределенных интерфейсов
            </summary>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Internal.Plugins.InterfaceCreator`1.FindInterfaceByContextInServer">
            <summary>
            Поиск по контексту в БД
            </summary>
            <returns></returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.BaseObject.SuperObject">
            <summary>
            Указатель на "пользовательский" объект справочника.
            BaseObject без SuperObject существовать не может
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.BaseObject.Reference">
            <summary>
            Справочник, для которого данный объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Internal.BaseObject.IsTree">
            <summary>
            Является ли древовидным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.Base.AssignObjectPropertyActivityBase.Object">
            <summary>
            Объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.Base.AssignObjectPropertyActivityBase.Action">
            <summary>
            Действие
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.Base.AssignObjectPropertyActivityBase.Value">
            <summary>
            Значение
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.Base.ChangeLinkActivityBase.Object">
            <summary>
            Объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.Base.ChangeLinkActivityBase.LinkedObject">
            <summary>
            Объект по связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.Base.ChangeLinkActivityBase.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.Base.ChangeLinkActivityBase.Link">
            <summary>
            Связь
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.Base.ICommentActivity.Comment">
            <summary>
            Комментарий
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.Base.FormulaActivityBase.Formula">
            <summary>
            Код формулы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.Base.ObjectPropertyActivityBase.Object">
            <summary>
            Объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.Base.ObjectPropertyActivityBase.Action">
            <summary>
            Действие
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.Base.ObjectPropertyActivityBase.Link">
            <summary>
            Связь
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.Base.SequenceResultActivityBase.Activities">
            <summary>
            Действия
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.Base.SequenceResultActivityReturnBase.Activities">
            <summary>
            Действия
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.Base.SequenceActivityBase.Variables">
            <summary>
            Переменные
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.Base.SequenceActivityBase.Activities">
            <summary>
            Действия
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.Base.WhileActivityBase.Condition">
            <summary>
            Условие
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.Base.WhileActivityBase.Body">
            <summary>
            Тело цикла
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.SaveAllActivity">
            <summary>
            Действие "Сохранить всё"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignObjectPropertyActivity">
            <summary>
            Действие "Установить свойство объекта"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ChangeStageActivity">
            <summary>
            Действие "Изменить стадию объекта"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ChangeStageActivity.Object">
            <summary>
            Объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ChangeStageActivity.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ChangeStageActivity.Stage">
            <summary>
            Наименование стадии
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ChangeStageActivity.IgnoreScheme">
            <summary>
            Игнорировать схему переходов стадий
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.DeleteSignatureActivity">
            <summary>
            Действие "Удалить подпись"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.DeleteSignatureActivity.Signature">
            <summary>
            Подпись
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.CountOfItemsInCollectionActivity`1">
            <summary>
            Действие "Количество элементов в списке"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CountOfItemsInCollectionActivity`1.Values">
            <summary>
            Список
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.MachineActivity">
            <summary>
            Действие "Место выполнения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.MachineActivity.Machine">
            <summary>
            Место выполнения
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.RemoveFromCollectionActivity`1">
            <summary>
            Действие "Удалить из списка"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.RemoveFromCollectionActivity`1.Values">
            <summary>
            Список
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.RemoveFromCollectionActivity`1.Item">
            <summary>
            Удаляемый элемент
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.RemoveFromCollectionActivity`1.IsIndex">
            <summary>
            Удалить по номеру
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.RemoveFromCollectionActivity`1.Index">
            <summary>
            Номер
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ClearCollectionActivity`1">
            <summary>
            Действие "Очистить список"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ClearCollectionActivity`1.Values">
            <summary>
            Список
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ExistsInCollectionActivity`1">
            <summary>
            Действие "Входит в список"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ExistsInCollectionActivity`1.Values">
            <summary>
            Список
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ExistsInCollectionActivity`1.Item">
            <summary>
            Элемент
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.AddRangeToCollectionActivity`1">
            <summary>
            Действие "Добавить элементы в список"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AddRangeToCollectionActivity`1.Values">
            <summary>
            Список
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AddRangeToCollectionActivity`1.Items">
            <summary>
            Добавляемыe элементы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AddRangeToCollectionActivity`1.IsInsert">
            <summary>
            Вставить элемент
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AddRangeToCollectionActivity`1.Index">
            <summary>
            Номер
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.AddToCollectionActivity`1">
            <summary>
            Действие "Добавить в список"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AddToCollectionActivity`1.Values">
            <summary>
            Список
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AddToCollectionActivity`1.Item">
            <summary>
            Добавляемый элемент
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AddToCollectionActivity`1.IsInsert">
            <summary>
            Вставить элемент
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AddToCollectionActivity`1.Index">
            <summary>
            Номер
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.CurrentSignatureActivity">
            <summary>
            Действие "Получить текущую подпись"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ClassObjectParametersActivity">
            <summary>
            Действие "Получить параметры типа"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ClassObjectParametersActivity.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ClassObjectParametersActivity.ClassObject">
            <summary>
            Тип
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.IsInheritClassObjectActivity">
            <summary>
            Действие "Проверить порождённость типа у объекта"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.IsInheritClassObjectActivity.Object">
            <summary>
            Объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.IsInheritClassObjectActivity.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.IsInheritClassObjectActivity.ClassObject">
            <summary>
            Тип
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignGlobalParameterActivity">
            <summary>
            Действие "Присвоить значение глобальному параметру"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignGlobalParameterActivity.Parameter">
            <summary>
            Параметр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignGlobalParameterActivity.Value">
            <summary>
            Значение
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.BreakMacroActivity">
            <summary>
            Действие "Прервать выполнение макроса"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.CancelMacroActivity">
            <summary>
            Действие "Отменить выполнение макроса"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.CommentActivity">
            <summary>
            Действие "Комментарий"
            </summary>
            <remarks>Состоит из игнорируемых действий</remarks>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CommentActivity.Activities">
            <summary>
            Действия
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.DesktopActivity">
            <summary>
            Действие "История изменений"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.DesktopActivity.Object">
            <summary>
            Переменная
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.DesktopActivity.Action">
            <summary>
            Действие
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.DesktopActivity.Comment">
            <summary>
            Комментарий
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.DesktopActivity.ExecuteCallback">
            <summary>
            Показывать диалог подтверждения
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.EditActivity">
            <summary>
            Действие "Редактирование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.EditActivity.Variable">
            <summary>
            Переменная
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.EditActivity.Action">
            <summary>
            Действие
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.EditActivity.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.EditActivity.ClassObject">
            <summary>
            Тип
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.FormulaActivity">
            <summary>
            Действие "Вычислить значение формулы"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.GlobalParameterActivity">
            <summary>
            Действие "Получить значение глобального параметра"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.GlobalParameterActivity.Parameter">
            <summary>
            Параметр
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.HandlerActivity`2">
            <summary>
            Действие "Обработчик"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.HandlerActivity`2.Body">
            <summary>
            Тело цикла
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.MacroActivity">
            <summary>
            Действие "Макрос"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.RunMacroActivity">
            <summary>
            Действие "Выполнить макрос"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.RunMacroActivity.ReferenceObject">
            <summary>
            Объект справочника "Макросы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.RunMacroActivity.EntryPoint">
            <summary>
            Точка входа
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ShowErrorMessageActivity">
            <summary>
            Действие "Вывести сообщение об ошибке"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ShowErrorMessageActivity.Message">
            <summary>
            Текст сообщения
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ShowMessageActivity">
            <summary>
            Действие "Вывести сообщение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ShowMessageActivity.Caption">
            <summary>
            Заголовок
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ShowMessageActivity.Message">
            <summary>
            Текст сообщения
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ShowQuestionActivity">
            <summary>
            Действие "Задать вопрос"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ShowQuestionActivity.Message">
            <summary>
            Текст сообщения
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignFilterVariableActivity">
            <summary>
            Действие "Присвоить значение переменной фильтра"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignFilterVariableActivity.Variable">
            <summary>
            Имя переменной фильтра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignFilterVariableActivity.Value">
            <summary>
            Значение
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ChangedLinkActivity">
            <summary>
            Действие "Получить изменённую связь"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ChangedParameterActivity">
            <summary>
            Действие "Получить изменённый параметр"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.CurrentHierarchyLinkActivity">
            <summary>
            Действие "Получить текущее подключение"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.CurrentObjectActivity">
            <summary>
            Действие "Получить текущий объект"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.CurrentUserActivity">
            <summary>
            Действие "Получить текущего пользователя"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.FilterVariableActivity">
            <summary>
            Действие "Получить значение переменной фильтра"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.FilterVariableActivity.Variable">
            <summary>
            Имя переменной фильтра
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.MacroContextActivity">
            <summary>
            Действие "Получить контекст выполнения макроса"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.RaiseObjectEventActivity">
            <summary>
            Действие "Инициировать событие"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.RaiseObjectEventActivity.Object">
            <summary>
            Объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.RaiseObjectEventActivity.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.RaiseObjectEventActivity.EventName">
            <summary>
            Имя события
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.CreateHierarchyLinkActivity">
            <summary>
            Действие "Создать подключение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CreateHierarchyLinkActivity.ParentObject">
            <summary>
            Родительский объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CreateHierarchyLinkActivity.ChildObject">
            <summary>
            Дочерний объект
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.HierarchyLinkActivity">
            <summary>
            Действие "Получить переменную подключения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.HierarchyLinkActivity.HierarchyLink">
            <summary>
            Подключение
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.HierarchyLinkPropertyActivity">
            <summary>
            Действие "Получить свойство подключения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.HierarchyLinkPropertyActivity.HierarchyLink">
            <summary>
            Подключение
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.HierarchyLinkPropertyActivity.Action">
            <summary>
            Действие
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignValueInputDialogActivity">
            <summary>
            Действие "Задать значение поля диалога ввода"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignValueInputDialogActivity.InputDialog">
            <summary>
            Диалог ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignValueInputDialogActivity.FieldName">
            <summary>
            Имя поля
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignValueInputDialogActivity.Value">
            <summary>
            Значение
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ChangeInputDialogActivity">
            <summary>
            Действие "Изменить диалог ввода"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ChangeInputDialogActivity.InputDialog">
            <summary>
            Диалог ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ChangeInputDialogActivity.Fields">
            <summary>
            Содержимое полей
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.CreateInputDialogActivity">
            <summary>
            Действие "Создать диалог ввода"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CreateInputDialogActivity.Caption">
            <summary>
            Заголовок
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CreateInputDialogActivity.Fields">
            <summary>
            Содержимое полей
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.FieldInputDialog">
            <summary>
            Поле диалога ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.FieldInputDialog.TypeName">
            <summary>
            Локализованное название типа поля
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.FieldInputDialog.InputDialog">
            <summary>
            Диалог ввода
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.FieldInputDialog.AddToDialog(System.Activities.NativeActivityContext)">
            <summary>
            Добавляет поле в диалог ввода
            </summary>
            <param name="context">Контекст действия</param>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.ValueFieldInputDialog">
            <summary>
            Поле с выбором значения диалога ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.ValueFieldInputDialog.FieldName">
            <summary>
            Заголовок поля
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.ValueFieldInputDialog.IsRequired">
            <summary>
            Является обязательным
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.IntegerFieldInputDialog">
            <summary>
            Поле выбора целых значений диалога ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.IntegerFieldInputDialog.DefaultValue">
            <summary>
            Значение по умолчанию
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.DoubleFieldInputDialog">
            <summary>
            Поле выбора вещественных значений диалога ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.DoubleFieldInputDialog.DefaultValue">
            <summary>
            Значение по умолчанию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.DoubleFieldInputDialog.DecimalPlaces">
            <summary>
            Точность
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.StringFieldInputDialog">
            <summary>
            Поле выбора строковых значений диалога ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.StringFieldInputDialog.DefaultValue">
            <summary>
            Значение по умолчанию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.StringFieldInputDialog.IsMultiline">
            <summary>
            Является многострочным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.StringFieldInputDialog.Mask">
            <summary>
            Маска
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.DateTimeBaseFieldInputDialog.DefaultValue">
            <summary>
            Значение по умолчанию
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.DateTimeFieldInputDialog">
            <summary>
            Поле выбора значения даты и времени диалога ввода 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.DateTimeFieldInputDialog.Mask">
            <summary>
            Маска
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.DateFieldInputDialog">
            <summary>
            Поле выбора значения даты диалога ввода 
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.TimeFieldInputDialog">
            <summary>
            Поле выбора значения времени диалога ввода 
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.FlagFieldInputDialog">
            <summary>
            Поле выбора булевого значения диалога ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.FlagFieldInputDialog.DefaultValue">
            <summary>
            Значение по умолчанию
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.SelectFromListFieldInputDialog">
            <summary>
            Поле выбора из списка диалога ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.SelectFromListFieldInputDialog.DefaultValue">
            <summary>
            Значение по умолчанию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.SelectFromListFieldInputDialog.Values">
            <summary>
            Значения
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.SelectFromReferenceFieldInputDialog">
            <summary>
            Поле выбора из справочника диалога ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.SelectFromReferenceFieldInputDialog.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.SelectFromReferenceFieldInputDialog.Parameter">
            <summary>
            Параметр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.SelectFromReferenceFieldInputDialog.DefaultValue">
            <summary>
            Значение по умолчанию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.SelectFromReferenceFieldInputDialog.Filter">
            <summary>
            Фильтр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.SelectFromReferenceFieldInputDialog.Code">
            <summary>
            Код генерации фильтра
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.ButtonFieldInputDialog">
            <summary>
            Поле кнопки диалога ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.ButtonFieldInputDialog.Code">
            <summary>
            Код
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.ButtonFieldInputDialog.Width">
            <summary>
            Ширина
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.CommentFieldInputDialog">
            <summary>
            Поле комментария к полю диалога ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.CommentFieldInputDialog.Comment">
            <summary>
            Комментарий
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.GroupFieldInputDialog">
            <summary>
            Поле группы полей выбора диалога ввода
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.ElementVisibilityFieldInputDialog">
            <summary>
            Поле изменения видимости элемента диалога ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.ElementVisibilityFieldInputDialog.Value">
            <summary>
            Значение
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.ElementEnabledFieldInputDialog">
            <summary>
            Поле изменения доступности элемента диалога ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.ElementEnabledFieldInputDialog.Value">
            <summary>
            Значение
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.CommonFieldInputDialog">
            <summary>
            Поле добавления общих элементов в диалог ввода
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.TextFieldInputDialog">
            <summary>
            Поле текста диалога ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.TextFieldInputDialog.Text">
            <summary>
            Текст
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.TextFieldInputDialog.LineCount">
            <summary>
            Количество строк
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.PictureFieldInputDialog">
            <summary>
            Поле изображения диалога ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.PictureFieldInputDialog.Object">
            <summary>
            Объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.PictureFieldInputDialog.ImagePath">
            <summary>
            Путь к изображению
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.PictureFieldInputDialog.LineCount">
            <summary>
            Количество строк
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.ChangePictureFieldInputDialog">
            <summary>
            Поле замены изображения диалога ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.ChangePictureFieldInputDialog.Index">
            <summary>
            Количество строк
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.ChangePictureFieldInputDialog.Object">
            <summary>
            Переменная
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.ChangePictureFieldInputDialog.ImagePath">
            <summary>
            Путь к изображению
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.DialogSizeFieldInputDialog">
            <summary>
            Поле изменения размеров диалога ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.DialogSizeFieldInputDialog.Width">
            <summary>
            Ширина
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.DialogSizeFieldInputDialog.Height">
            <summary>
            Высота
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.ValueChangedFieldInputDialog">
            <summary>
            Поле события "Значение изменено" диалога ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.ValueChangedFieldInputDialog.Code">
            <summary>
            Код
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.CaptionFieldInputDialog">
            <summary>
            Заголовок диалога ввода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.InputDialog.CaptionFieldInputDialog.Caption">
            <summary>
            Заголовок
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ShowInputDialogActivity">
            <summary>
            Действие "Показать диалог ввода"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ShowInputDialogActivity.InputDialog">
            <summary>
            Диалог ввода
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ValueInputDialogActivity">
            <summary>
            Действие "Получить значение поля диалога ввода"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ValueInputDialogActivity.InputDialog">
            <summary>
            Переменная
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ValueInputDialogActivity.FieldName">
            <summary>
            Имя поля
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Activities.Search.LogicalActivityOperator.AndAlso">
            <summary>
            Возвращает оператор "И"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Activities.Search.LogicalActivityOperator.OrElse">
            <summary>
            Возвращает оператор "Или"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignParameterActivity">
            <summary>
            Действие "Присвоить значение параметру"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignParameterActivity.Variable">
            <summary>
            Переменная
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignParameterActivity.Parameter">
            <summary>
            Параметр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignParameterActivity.Value">
            <summary>
            Значение
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ParameterActivity">
            <summary>
            Действие "Получить значение параметра"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ParameterActivity.Variable">
            <summary>
            Переменная
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ParameterActivity.Parameter">
            <summary>
            Параметр
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ParameterValueListActivity">
            <summary>
            Действие "Получить список значений параметра"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ParameterValueListActivity.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ParameterValueListActivity.ClassObject">
            <summary>
            Тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ParameterValueListActivity.Parameter">
            <summary>
            Параметр
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ParameterValueListNameActivity">
            <summary>
            Действие "Получить наименование значения списка параметра"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ParameterValueListNameActivity.Variable">
            <summary>
            Переменная
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ParameterValueListNameActivity.Parameter">
            <summary>
            Параметр
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ReferencePropertyActivity">
            <summary>
            Действие "Получить свойство справочника"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ReferencePropertyActivity.Variable">
            <summary>
            Переменная
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ReferencePropertyActivity.Action">
            <summary>
            Действие
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.AddLinkedObjectActivity">
            <summary>
            Действие "Подключить объект по связи"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.CopyObjectActivity">
            <summary>
            Действие "Создать копию объекта"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CopyObjectActivity.Object">
            <summary>
            Объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CopyObjectActivity.ParentObject">
            <summary>
            Родительский объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CopyObjectActivity.ClassObject">
            <summary>
            Новый тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CopyObjectActivity.Values">
            <summary>
            Пропущенные параметры
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.CreateNomenclatureObjectActivity">
            <summary>
            Действие "Подключить к номенклатуре"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CreateNomenclatureObjectActivity.Object">
            <summary>
            Объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CreateNomenclatureObjectActivity.ParentObject">
            <summary>
            Родительский объект
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.CreateObjectActivity">
            <summary>
            Действие "Создать объект"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CreateObjectActivity.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CreateObjectActivity.ClassObject">
            <summary>
            Тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CreateObjectActivity.Prototype">
            <summary>
            Прототип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CreateObjectActivity.ParentObject">
            <summary>
            Родительский объект
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.CreateObjectListActivity">
            <summary>
            Действие "Создать объект списка"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CreateObjectListActivity.Object">
            <summary>
            Объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CreateObjectListActivity.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CreateObjectListActivity.ObjectsList">
            <summary>
            Список объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CreateObjectListActivity.ClassObject">
            <summary>
            Тип
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.FindObjectsActivity">
            <summary>
            Действие "Найти объекты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.FindObjectsActivity.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.FindObjectsActivity.Filter">
            <summary>
            Фильтр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.FindObjectsActivity.SearchMode">
            <summary>
            Режим поиска
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.FindObjectsActivity.IsOne">
            <summary>
            Тип поиска - найти один объект или все
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.FullCopyObjectActivity">
            <summary>
            Действие "Создать полную копию объекта"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.FullCopyObjectActivity.Object">
            <summary>
            Объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.FullCopyObjectActivity.Values">
            <summary>
            Пропущенные связи
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ObjectActivity">
            <summary>
            Действие "Получить переменную объекта"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ObjectActivity.Object">
            <summary>
            Объект
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ObjectPropertyActivity">
            <summary>
            Действие "Получить свойство объекта"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ObjectPropertyActivity.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.RemoveLinkedObjectActivity">
            <summary>
            Действие "Отключить объект по связи"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.SelectObjectActivity">
            <summary>
            Действие "Получить объект"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.SelectObjectActivity.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.SelectObjectActivity.SearchMode">
            <summary>
            Режим поиска
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.SelectObjectActivity.ReferenceObject">
            <summary>
            Объект справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ShowPropertyDialogActivity">
            <summary>
            Действие "Показать диалог свойств объекта"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ShowPropertyDialogActivity.Object">
            <summary>
            Объект
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.AddSignatureActivity">
            <summary>
            Действие "Добавить подпись к объекту"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AddSignatureActivity.Object">
            <summary>
            Объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AddSignatureActivity.User">
            <summary>
            Пользователь
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AddSignatureActivity.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AddSignatureActivity.SignatureType">
            <summary>
            Тип подписи
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ObjectSignaturesActivity">
            <summary>
            Действие "Получить подписи объекта"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ObjectSignaturesActivity.Object">
            <summary>
            Объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ObjectSignaturesActivity.IsOne">
            <summary>
            Тип поиска - получить одну подпись или все
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ObjectSignaturesActivity.SignatureType">
            <summary>
            Тип подписи
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.SetSignatureActivity">
            <summary>
            Действие "Подписать объект"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.SetSignatureActivity.Object">
            <summary>
            Объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.SetSignatureActivity.User">
            <summary>
            Пользователь
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.SetSignatureActivity.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.SetSignatureActivity.SignatureType">
            <summary>
            Тип подписи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.SetSignatureActivity.Resolution">
            <summary>
            Резолюция
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.SignaturePropertyActivity">
            <summary>
            Действие "Получить свойство подписи"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.SignaturePropertyActivity.Signature">
            <summary>
            Подпись
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.SignaturePropertyActivity.Action">
            <summary>
            Действие
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignActivity">
            <summary>
            Действие "Присвоить"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignActivity.To">
            <summary>
            Переменная
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignActivity.Value">
            <summary>
            Значение
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignVariableActivity">
            <summary>
            Действие "Присвоить значение переменной"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignVariableActivity.Variable">
            <summary>
            Переменная
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.AssignVariableActivity.Value">
            <summary>
            Значение
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.CompareActivity">
            <summary>
            Действие "Сравнить"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CompareActivity.LeftValue">
            <summary>
            Значение слева
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CompareActivity.Operator">
            <summary>
            Оператор сравнения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.CompareActivity.RightValue">
            <summary>
            Значение справа
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ExceptionActivity">
            <summary>
            Действие "Сгенерировать исключение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ExceptionActivity.Exception">
            <summary>
            Исключение
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ExpressionActivity">
            <summary>
            Действие "Вычислить выражение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ExpressionActivity.Expression">
            <summary>
            Выражение
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.FindInCollectionActivity`1">
            <summary>
            Действие "Найти в списке"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.FindInCollectionActivity`1.Values">
            <summary>
            Список
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.FindInCollectionActivity`1.IsOne">
            <summary>
            Тип поиска - найти один объект или все
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.FindInCollectionActivity`1.Body">
            <summary>
            Тело цикла
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ForActivity`1">
            <summary>
            Действие "Цикл со счётчиком"
            </summary>
            <remarks>Аналог цикла For</remarks>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ForActivity`1.From">
            <summary>
            От
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ForActivity`1.To">
            <summary>
            До
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ForActivity`1.Step">
            <summary>
            Шаг
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ForActivity`1.Body">
            <summary>
            Тело цикла
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ForEachActivity`1">
            <summary>
            Действие "Цикл по коллекции"
            </summary>
            <remarks>Аналог цикла ForEach</remarks>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ForEachActivity`1.Values">
            <summary>
            Список
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ForEachActivity`1.Body">
            <summary>
            Тело цикла
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.IfActivity">
            <summary>
            Действие "Если"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.IfActivity.Condition">
            <summary>
            Условие
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.IfActivity.Then">
            <summary>
            Если
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.IfElseActivity">
            <summary>
            Действие "Если иначе"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.IfElseActivity.Condition">
            <summary>
            Условие
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.IfElseActivity.Then">
            <summary>
            Если
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.IfElseActivity.Else">
            <summary>
            Иначе
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.MethodParameterActivity">
            <summary>
            Действие "Получить параметр макроса"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.MethodParameterActivity.IsOne">
            <summary>
            Тип поиска - получить один объект или все
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.MethodParameterActivity.Index">
            <summary>
            Номер параметра
            </summary>
            <remarks>Начальный номер: 1</remarks>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.NullActivity">
            <summary>
            Действие "Получить пустое значение"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.ResultActivity">
            <summary>
            Действие "Установить результат"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Activities.ResultActivity.Value">
            <summary>
            Возвращаемое значение
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.SequenceActivity">
            <summary>
            Действие "Последовательность действий"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.UntilActivity">
            <summary>
            Действие "Цикл с постусловием"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Activities.WhileActivity">
            <summary>
            Действие "Цикл с предусловием"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Classes.MachineTypeActionType">
            <summary>
            Место выполнения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.MachineTypeActionType.Client">
            <summary>
            Клиент
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.MachineTypeActionType.Server">
            <summary>
            Сервер
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.SearchModeActionType.Objects">
            <summary>
            Объекты
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.SearchModeActionType.Prototypes">
            <summary>
            Прототипы
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Classes.ActivityExpressionAttribute">
            <summary>
            Атрибут использования ввода через действие или выражение
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableExpressionAttribute">
            <summary>
            Атрибут использования аргумента с именем переменной в действии
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Classes.ContextVariables">
            <summary>
            Типы текущих свойств макроконтекста
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.ContextVariables.CurrentObject">
            <summary>
            Переменная "Текущий объект"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.ContextVariables.CurrentHierarchyLink">
            <summary>
            Переменная "Текущее подключение"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.ContextVariables.CurrentUser">
            <summary>
            Переменная "Текущий пользователь"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Classes.CurrentObjectContextVariableInfo">
            <summary>
            Переменная "Текущий объект"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Classes.CurrentHierarchyLinkContextVariableInfo">
            <summary>
            Переменная "Текущее подключение"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Classes.CurrentUserContextVariableInfo">
            <summary>
            Переменная "Текущий пользователь"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Classes.ContextVariableInfo">
            <summary>
            Описание переменной контекста
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Classes.ContextVariableInfo.#ctor(System.String,System.String,TFlex.DOCs.Model.Macros.ObjectModel.Types.DefaultSupportedType,System.String)">
            <summary>
            Создаёт описание составной переменной
            </summary>
            <param name="displayName">Имя переменной</param>
            <param name="variableName">Обозначение значения переменной</param>
            <param name="defaultType">Тип</param>
            <param name="groupName">Имя группировки</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Classes.ContextVariableInfo.#ctor(System.String,System.String,System.Type,System.String)">
            <summary>
            Создаёт описание составной переменной
            </summary>
            <param name="displayName">Имя переменной</param>
            <param name="variableName">Обозначение значения переменной</param>
            <param name="type">Тип</param>
            <param name="groupName">Имя группировки</param>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.ReferenceActionType.Name">
            <summary>
            Наименование
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.ReferenceActionType.Guid">
            <summary>
            Уникальный идентификатор
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.SignatureActionType.SignatureType">
            <summary>
            Тип подписи
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.SignatureActionType.User">
            <summary>
            Пользователь
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.SignatureActionType.SignatureDate">
            <summary>
            Дата подписания
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.SignatureActionType.Resolution">
            <summary>
            Резолюция
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.SignatureActionType.IsSet">
            <summary>
            Установлена
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.DesktopActionType.CheckOut">
            <summary>
            Взять на редактирование
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.DesktopActionType.CheckIn">
            <summary>
            Применить изменения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.DesktopActionType.UndoCheckOut">
            <summary>
            Отменить изменения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.DesktopActionType.Restore">
            <summary>
            Восстановить
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.DesktopActionType.ClearRecycleBin">
            <summary>
            Очистить корзину
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.EditActionType.BeginChanges">
            <summary>
            Изменить
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.EditActionType.BeginChangesClass">
            <summary>
            Изменить тип
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.EditActionType.CancelChanges">
            <summary>
            Отменить изменения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.EditActionType.Save">
            <summary>
            Сохранить
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.EditActionType.Delete">
            <summary>
            Удалить
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.HierarchyLinkActionType.ParentObject">
            <summary>
            Родительский объект
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.HierarchyLinkActionType.ChildObject">
            <summary>
            Дочерний объект
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.HierarchyLinkActionType.Changing">
            <summary>
            Редактируется
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.ObjectActionType.MasterObject">
            <summary>
            Владелец
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.ObjectActionType.ParentObject">
            <summary>
            Родительский объект
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.ObjectActionType.ParentObjects">
            <summary>
            Родительские объекты
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.ObjectActionType.ChildObjects">
            <summary>
            Дочерние объекты
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.ObjectActionType.LinkedObject">
            <summary>
            Связанный объект
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.ObjectActionType.LinkedObjects">
            <summary>
            Связанные объекты
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.ObjectActionType.ChildHierarchyLinks">
            <summary>
            Дочерние подключения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.ObjectActionType.ParentHierarchyLinks">
            <summary>
            Родительские подключения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.ObjectActionType.Class">
            <summary>
            Тип
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.ObjectActionType.Changing">
            <summary>
            Редактируется
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.ObjectActionType.Author">
            <summary>
            Автор
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.ObjectActionType.IsCheckedOut">
            <summary>
            Взят на редактирование
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.ObjectActionType.IsCheckedOutByCurrentUser">
            <summary>
            Взят на редактирование текущим пользователем
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Classes.ObjectActionType.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Classes.ParameterGroupInfo">
            <summary>
            Описание ParameterGroupManager
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.ParameterGroupInfo.Reference">
            <summary>
            Описание справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.ParameterGroupInfo.Class">
            <summary>
            Тип справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.ParameterGroupInfo.IsClass">
            <summary>
            Является ли типом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.ParameterGroupInfo.IsHierarchy">
            <summary>
            Является ли подключением
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.ParameterGroupInfo.Parameters">
            <summary>
            Возвращает коллекцию описания параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Classes.ParameterGroupInfo.GetParameter(System.Guid)">
            <summary>
            Возвращает описание параметра по Guid
            </summary>
            <param name="parameterGuid">Guid параметра</param>
            <returns>Описание параметра</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo">
            <summary>
            Описание переменной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.DisplayName">
            <summary>
            Имя отображения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.VariableName">
            <summary>
            Имя переменной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.Type">
            <summary>
            Тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.Value">
            <summary>
            Значение
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.DefaultType">
            <summary>
            Тип макроязыка
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.IsEmbed">
            <summary>
            Является ли переменная встроенной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.IsContext">
            <summary>
            Является ли контекстом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.ContextVariableInfo">
            <summary>
            Переменная контекста
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.IsPath">
            <summary>
            Является ли путём
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.Path">
            <summary>
            Путь по структуре
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.Image">
            <summary>
            Иконка
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.GroupName">
            <summary>
            Имя группировки переменных
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.Reference">
            <summary>
            Поддрерживаемые справочники
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.Classes">
            <summary>
            Поддерживаемые типы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.IsReferenceObject">
            <summary>
            Является ли объектом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.IsHierarchyLink">
            <summary>
            Является ли подключением
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.IsMultiple">
            <summary>
            Является ли коллекцией
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.VariableDefaultType">
            <summary>
            Тип макроязыка по переменной (учитывая типы списков)
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.IsEmbedVariable(System.String)">
            <summary>
            Проверяет - является ли составным имя переменной
            </summary>
            <param name="variableName">Имя переменной</param>
            <returns>Возвращает true, если имя переменной составное, иначе false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.IsContextVariable(System.String)">
            <summary>
            Проверяет - является ли имя переменной контекстом
            </summary>
            <param name="variableName">Имя переменной</param>
            <returns>Возвращает true, если имя переменной является контекстом, иначе false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Classes.VariableInfo.IsPathVariable(System.String)">
            <summary>
            Проверяет - является ли имя переменной путём
            </summary>
            <param name="variableName">Имя переменной</param>
            <returns>Возвращает true, если имя переменной является путём, иначе false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityMetadataExtensions.AddValidationWarning(System.Activities.ActivityMetadata,System.String)">
            <summary>
            Добавить сообщение предупреждения с текстом
            </summary>
            <param name="metadata">Метаданные действия</param>
            <param name="message">Текст</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityMetadataExtensions.AddValidationArgumentWarning(System.Activities.ActivityMetadata,System.String)">
            <summary>
            Добавить сообщение предупреждения с текстом
            </summary>
            <param name="metadata">Метаданные действия</param>
            <param name="message">Текст</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityMetadataExtensions.AddValidationArgumentError(System.Activities.ActivityMetadata,System.String)">
            <summary>
            Добавить сообщение ошибки с текстом
            </summary>
            <param name="metadata">Метаданные действия</param>
            <param name="argument">Текст</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityMetadataExtensions.AddValidationMetadataArgumentError(System.Activities.ActivityMetadata,System.String)">
            <summary>
            Добавить сообщение ошибки валидации с текстом
            </summary>
            <param name="metadata">Метаданные действия</param>
            <param name="argument">Текст</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityMetadataExtensions.AddValidationFunctionError(System.Activities.ActivityMetadata)">
            <summary>
            Добавить сообщение ошибки при не выбранной функции
            </summary>
            <param name="metadata">Метаданные действия</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityMetadataExtensions.AddValidationWarning(System.Activities.NativeActivityMetadata,System.String)">
            <summary>
            Добавить сообщение предупреждения с текстом
            </summary>
            <param name="metadata">Метаданные действия</param>
            <param name="message">Текст</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityMetadataExtensions.AddValidationArgumentWarning(System.Activities.NativeActivityMetadata,System.String)">
            <summary>
            Добавить сообщение предупреждения с текстом
            </summary>
            <param name="metadata">Метаданные действия</param>
            <param name="message">Текст</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityMetadataExtensions.AddValidationArgumentError(System.Activities.NativeActivityMetadata,System.String)">
            <summary>
            Добавить сообщение ошибки с текстом
            </summary>
            <param name="metadata">Метаданные действия</param>
            <param name="argument">Текст</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityMetadataExtensions.AddValidationMetadataArgumentError(System.Activities.NativeActivityMetadata,System.String)">
            <summary>
            Добавить сообщение ошибки валидации с текстом
            </summary>
            <param name="metadata">Метаданные действия</param>
            <param name="argument">Текст</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityMetadataExtensions.AddValidationFunctionError(System.Activities.NativeActivityMetadata)">
            <summary>
            Добавить сообщение ошибки при не выбранной функции
            </summary>
            <param name="metadata">Метаданные действия</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityMetadataExtensions.AddValidationWarning(System.Activities.CodeActivityMetadata,System.String)">
            <summary>
            Добавить сообщение предупреждения с текстом
            </summary>
            <param name="metadata">Метаданные действия</param>
            <param name="message">Текст</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityMetadataExtensions.AddValidationArgumentWarning(System.Activities.CodeActivityMetadata,System.String)">
            <summary>
            Добавить сообщение предупреждения с текстом
            </summary>
            <param name="metadata">Метаданные действия</param>
            <param name="message">Текст</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityMetadataExtensions.AddValidationArgumentError(System.Activities.CodeActivityMetadata,System.String)">
            <summary>
            Добавить сообщение ошибки с текстом
            </summary>
            <param name="metadata">Метаданные действия</param>
            <param name="argument">Текст</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityMetadataExtensions.AddValidationMetadataArgumentError(System.Activities.CodeActivityMetadata,System.String)">
            <summary>
            Добавить сообщение ошибки валидации с текстом
            </summary>
            <param name="metadata">Метаданные действия</param>
            <param name="argument">Текст</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityMetadataExtensions.AddValidationFunctionError(System.Activities.CodeActivityMetadata)">
            <summary>
            Добавить сообщение ошибки при не выбранной функции
            </summary>
            <param name="metadata">Метаданные действия</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityMetadataExtensions.SetReturnChildrenCollection(System.Activities.NativeActivityMetadata,System.Collections.ObjectModel.Collection{System.Activities.Activity{System.Object}})">
            <summary>
            Добавить в метаданные колекцию возвращающих действий
            </summary>
            <param name="metadata">Метаданные действия</param>
            <param name="children">Действия</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ConstraintExtensions.AddConstraint``1(System.Collections.ObjectModel.Collection{System.Activities.Validation.Constraint},``0,System.Boolean,System.String,System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})">
            <summary>
            Добавить правило проверки
            </summary>
            <typeparam name="T">Тип действия с переменной</typeparam>
            <param name="constraints">Коллекция правил валидации</param>
            <param name="activity">Действие</param>
            <param name="isWarning">Значение False если предупреждение, True если ошибка</param>
            <param name="message">Сообщение</param>
            <param name="expression">Выражение проверки</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ConstraintExtensions.AddConstraint``1(System.Collections.ObjectModel.Collection{System.Activities.Validation.Constraint},``0,System.String,System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})">
            <summary>
            Добавить правило проверки
            </summary>
            <typeparam name="T">Тип действия с переменной</typeparam>
            <param name="constraints">Коллекция правил валидации</param>
            <param name="activity">Действие</param>
            <param name="message">Сообщение</param>
            <param name="expression">Выражение проверки</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ConstraintExtensions.AddParameter``1(System.Collections.ObjectModel.Collection{System.Activities.Validation.Constraint},``0)">
            <summary>
            Добавить правило проверки для параметра
            </summary>
            <typeparam name="T">Тип действия с параметром</typeparam>
            <param name="constraints">Коллекция правил валидации</param>
            <param name="activity">Действие</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ConstraintExtensions.AddAction``1(System.Collections.ObjectModel.Collection{System.Activities.Validation.Constraint},``0)">
            <summary>
            Добавить правило проверки для выбора действия
            </summary>
            <typeparam name="T">Тип действия поддерживающий выбор действия</typeparam>
            <param name="constraints">Коллекция правил валидации</param>
            <param name="activity">Действие</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ConstraintExtensions.AddReference``1(System.Collections.ObjectModel.Collection{System.Activities.Validation.Constraint},``0)">
            <summary>
            Добавить правило проверки для справочника
            </summary>
            <typeparam name="T">Тип действия со справочником</typeparam>
            <param name="constraints">Коллекция правил валидации</param>
            <param name="activity">Действие</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ConstraintExtensions.AddReferenceObject``1(System.Collections.ObjectModel.Collection{System.Activities.Validation.Constraint},``0)">
            <summary>
            Добавить правило проверки для объекта справочника
            </summary>
            <typeparam name="T">Тип действия с объектом справочника</typeparam>
            <param name="constraints">Коллекция правил валидации</param>
            <param name="activity">Действие</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ConstraintExtensions.AddPrototype``1(System.Collections.ObjectModel.Collection{System.Activities.Validation.Constraint},``0)">
            <summary>
            Добавить правило проверки для прототипа
            </summary>
            <typeparam name="T">Тип действия с прототипом</typeparam>
            <param name="constraints">Коллекция правил валидации</param>
            <param name="activity">Действие</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ConstraintExtensions.AddClassObject``1(System.Collections.ObjectModel.Collection{System.Activities.Validation.Constraint},``0)">
            <summary>
            Добавить правило проверки для типа справочника
            </summary>
            <typeparam name="T">Тип действия с типом справочника</typeparam>
            <param name="constraints">Коллекция правил валидации</param>
            <param name="activity">Действие</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ConstraintExtensions.AddLink``1(System.Collections.ObjectModel.Collection{System.Activities.Validation.Constraint},``0)">
            <summary>
            Добавить правило проверки для связи
            </summary>
            <typeparam name="T">Тип действия со связью</typeparam>
            <param name="constraints">Коллекция правил валидации</param>
            <param name="activity">Действие</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ConstraintExtensions.AddObjectsList``1(System.Collections.ObjectModel.Collection{System.Activities.Validation.Constraint},``0)">
            <summary>
            Добавить правило проверки для списка объекта
            </summary>
            <typeparam name="T">Тип действия со списком объектов</typeparam>
            <param name="constraints">Коллекция правил валидации</param>
            <param name="activity">Действие</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ConstraintExtensions.AddFilter``1(System.Collections.ObjectModel.Collection{System.Activities.Validation.Constraint},``0)">
            <summary>
            Добавить правило проверки для фильтра
            </summary>
            <typeparam name="T">Тип действия с фильтром</typeparam>
            <param name="constraints">Коллекция правил валидации</param>
            <param name="activity">Действие</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ConstraintExtensions.AddSignatureType``1(System.Collections.ObjectModel.Collection{System.Activities.Validation.Constraint},``0)">
            <summary>
            Добавить правило проверки для типа подписи
            </summary>
            <typeparam name="T">Тип действия с типом подписи</typeparam>
            <param name="constraints">Коллекция правил валидации</param>
            <param name="activity">Действие</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ConstraintExtensions.AddOperator``1(System.Collections.ObjectModel.Collection{System.Activities.Validation.Constraint},``0)">
            <summary>
            Добавить правило проверки для оператора
            </summary>
            <typeparam name="T">Тип действия с оператором</typeparam>
            <param name="constraints">Коллекция правил валидации</param>
            <param name="activity">Действие</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ConstraintExtensions.NotSpecifiedArgumentMessage(System.String)">
            <summary>
            "Не задан аргумент: {0}"
            </summary>
            <param name="argument"></param>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityContextExtensions.GetMacroContext(System.Activities.ActivityContext)">
            <summary>
            Возвращает MacroContext
            </summary>
            <param name="context">Контекст действия</param>
            <returns>MacroContext</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityContextExtensions.GetMacroProvider(System.Activities.ActivityContext)">
            <summary>
            Возвращает MacroProvider
            </summary>
            <param name="context">Контекст действия</param>
            <returns>MacroProvider</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityContextExtensions.GetConnection(System.Activities.ActivityContext)">
            <summary>
            Возвращает подключение к серверу
            </summary>
            <param name="context">Контекст действия</param>
            <returns>Подключение к серверу</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityContextExtensions.Return(System.Activities.NativeActivityContext,System.Object)">
            <summary>
            Возвращает результат и прерывает выполнение Workflow
            </summary>
            <param name="context">Контекст действия</param>
            <param name="result">Возвращаемый объект</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityContextExtensions.GetVariableValue(System.Activities.ActivityContext,System.String)">
            <summary>
            Возвращает значение переменной
            </summary>
            <param name="context">Контекст действия</param>
            <param name="variableName">Имя переменной</param>
            <returns>Значение переменной</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityContextExtensions.TryVariableValue(System.Activities.ActivityContext,System.String,System.Object@)">
            <summary>
            Получает значение переменной, ели она существует
            </summary>
            <param name="context">Контекст действия</param>
            <param name="variableName">Имя переменной</param>
            <param name="value">Значение переменной</param>
            <returns>Возвращает True, если переменная существует, иначе False</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityContextExtensions.SetVariableValue(System.Activities.ActivityContext,System.String,System.Object)">
            <summary>
            Задаёт значение переменной
            </summary>
            <param name="context">Контекст действия</param>
            <param name="variableName">Имя переменной</param>
            <param name="value">Значение переменной</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Extensions.ActivityContextExtensions.GetFlowchartMacroContext(System.Activities.ActivityContext)">
            <summary>
            Возвращает контекст выполнения макроса
            </summary>
            <param name="context">Контекст действия</param>
            <returns>FlowchartMacroContext</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Managers.VariableManager.GetAvailableVariables(System.Activities.ActivityContext)">
            <summary>
            Получает список описаний переменных, доступных в контексте действия
            </summary>
            <param name="context">Контекст действия</param>
            <returns>Список описаний переменных</returns>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.Flowchart.Managers.CodeVersionConverter.Version">
            <summary>
            Текущая версия кода макросов на основе блок-схем
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Managers.ActivityCreator">
            <summary>
            Создаёт экземпляры деревьев действий.
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Managers.ActivityCreator.Load(System.String,System.Boolean)">
            <summary>
            Создает экземпляр декларативного рабочего процесса, описанного в виде текста.
            </summary>
            <param name="text">Текст кода</param>
            <param name="ignoreDynamicRootActivity">Значение true, если при загрузке будет игнорироваться корневое действие DynamicActivity, иначе false</param>
            <returns>Дерево действий</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Managers.ActivitySettingsManager">
            <summary>
            Менеджер по работе с найстройками действий
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Managers.ActivitySettingsManager.AddNamespace(System.Activities.Activity,TFlex.DOCs.Model.Macros.Flowchart.Classes.NamespaceInfo)">
            <summary>
            Добавляет пространство имён к действию
            </summary>
            <param name="activity">Действие</param>
            <param name="namespaceInfo">Пространство имён</param>
            <returns>Возвращает true, если пространство имён добавлено, иначе false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Managers.ActivitySettingsManager.AddNamespaces(System.Activities.Activity,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Macros.Flowchart.Classes.NamespaceInfo})">
            <summary>
            Добавляет пространства имён к действию
            </summary>
            <param name="activity">Действие</param>
            <param name="namespaces">Пространства имён</param>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Flowchart.Managers.ExpressionManager">
            <summary>
            Менеджер по работе с выражениями
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ClassObjectHelper.FindClass(TFlex.DOCs.Model.ServerConnection,System.String,System.String,System.Boolean)">
            <summary>
            Возвращает объект типа в справочнике
            </summary>
            <param name="connection">Соединение с сервером</param>
            <param name="referenceName">Название, guid, id справочника</param>
            <param name="className">Название, guid, id типа</param>
            <param name="throwOnError">Значение true, если требуется вывести сообщение об ошибке; в противном случае - значение false</param>
            <returns>Объект типа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ClassObjectHelper.FindClass(TFlex.DOCs.Model.ReferenceInfo,System.String,System.Boolean)">
            <summary>
            Возвращает объект типа в справочнике
            </summary>
            <param name="referenceInfo">Описание справочника</param>
            <param name="className">Название, guid, id типа</param>
            <param name="throwOnError">Значение true, если требуется вывести сообщение об ошибке; в противном случае - значение false</param>
            <returns>Объект типа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ExpressionHelper.FindReference(System.Activities.ActivityContext,System.Activities.InArgument{System.String})">
            <summary>
            Выполняет поиск описания справочника
            </summary>
            <param name="reference">Название, Guid, Id справочника</param>
            <param name="context">Контект действия</param>
            <returns>Описание справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ExpressionHelper.TryParseLink(TFlex.DOCs.Model.ReferenceInfo,System.String,TFlex.DOCs.Model.Structure.ParameterGroup@)">
            <summary>
            Десериализовать связь
            </summary>
            <param name="referenceInfo">Описание справочника</param>
            <param name="linkText">Название, Guid связи</param>
            <param name="linkGroup">Группа параметров связи</param>
            <returns>Значение true, если десериализация успешно прошла; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ExpressionHelper.TryParseLink(TFlex.DOCs.Model.ServerConnection,System.String,System.String,TFlex.DOCs.Model.Structure.ParameterGroup@)">
            <summary>
            Десериализовать связь
            </summary>
            <param name="connection">Соединение с сервером</param>
            <param name="referenceName">Название справочника</param>
            <param name="linkText">Название, Guid связи</param>
            <param name="linkGroup">Группа параметров связи</param>
            <returns>Значение true, если десериализация успешно прошла; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ExpressionHelper.TryParseClassObject(TFlex.DOCs.Model.ServerConnection,System.String,System.String,TFlex.DOCs.Model.Classes.ClassObject@)">
            <summary>
            Десериализовать тип справочника
            </summary>
            <param name="connection">Соединение с сервером</param>
            <param name="referenceName">Название справочника</param>
            <param name="classObjectText">Название, Guid типа</param>
            <param name="classObject">Тип справочника</param>
            <returns>Значение true, если десериализация успешно прошла; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ExpressionHelper.TryParseClassObject(TFlex.DOCs.Model.ReferenceInfo,System.String,TFlex.DOCs.Model.Classes.ClassObject@)">
            <summary>
            Десериализовать тип справочника
            </summary>
            <param name="referenceInfo">Описание справочника</param>
            <param name="classObjectText">Название, Guid типа</param>
            <param name="classObject">Тип справочника</param>
            <returns>Значение true, если десериализация успешно прошла; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ExpressionHelper.TryParseClassObjectWithPrototype(TFlex.DOCs.Model.ServerConnection,System.String,System.String,TFlex.DOCs.Model.Classes.ClassObject@,TFlex.DOCs.Model.References.ReferenceObject@)">
            <summary>
            Десериализовать тип справочника или объект прототипа
            </summary>
            <param name="connection">Соединение с сервером</param>
            <param name="value">Название, Guid типа; Guid прототипа</param>
            <param name="referenceName">Название справочника</param>
            <param name="classObject">Тип справочника</param>
            <param name="prototypeObject">Прототип</param>
            <returns>Значение true, если десериализация успешно прошла; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ExpressionHelper.TryParseClassObjectWithPrototype(System.String,TFlex.DOCs.Model.ReferenceInfo,TFlex.DOCs.Model.Classes.ClassObject@,TFlex.DOCs.Model.References.ReferenceObject@)">
            <summary>
            Десериализовать тип справочника или объект прототипа
            </summary>
            <param name="value">Название, Guid типа; Guid прототипа</param>
            <param name="referenceInfo">Описание справочника</param>
            <param name="classObject">Тип справочника</param>
            <param name="prototypeObject">Прототип</param>
            <returns>Значение true, если десериализация успешно прошла; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ExpressionHelper.TryParseReferenceObject(TFlex.DOCs.Model.ServerConnection,System.String,System.String,TFlex.DOCs.Model.References.ReferenceObject@)">
            <summary>
            Десериализовать объект справочника
            </summary>
            <param name="connection">Соединение с сервером</param>
            <param name="referenceName">Название справочника</param>
            <param name="referenceObjectName">Параметр по умолчанию, Guid объекта</param>
            <param name="referenceObject">Объект справочника</param>
            <returns>Значение true, если десериализация успешно прошла; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ExpressionHelper.TryParseReferenceObject(TFlex.DOCs.Model.References.Reference,System.String,TFlex.DOCs.Model.References.ReferenceObject@)">
            <summary>
            Десериализовать объект справочника
            </summary>
            <param name="reference">Справочник</param>
            <param name="referenceObjectName">Параметр по умолчанию, Guid объекта</param>
            <param name="referenceObject">Объект справочника</param>
            <returns>Значение true, если десериализация успешно прошла; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ParameterGroupHelper.GetReference(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Вернуть описание справочника
            </summary>
            <param name="group">Группа параметров</param>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ParameterGroupHelper.TryParse(System.String,TFlex.DOCs.Model.ServerConnection,TFlex.DOCs.Model.Structure.ParameterGroup@)">
            <summary>
            Преобразовывает заданное строковое представление пути в эквивалентную ему группу параметров
            </summary>
            <param name="path">Строковое представление пути</param>
            <param name="connection">Соединение с сервером</param>
            <param name="group">Группа параметров</param>
            <returns>Значение true в случае, если преобразование прошло успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ParameterGroupHelper.CombineListObjectPath(System.String,System.String)">
            <summary>
            Возвращает путь до списка объектов
            </summary>
            <param name="reference">Справочник</param>
            <param name="listObject">Список объектов</param>
            <returns>Путь в виде строки</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ReferenceHelper.Find(TFlex.DOCs.Model.ServerConnection,System.String)">
            <summary>
            Выполняет поиск описания справочника
            </summary>
            <param name="connection">Соединение с сервером</param>
            <param name="referenceName">Название, Guid, Id справочника</param>
            <returns>Описание справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ReferenceHelper.Find(TFlex.DOCs.Model.ServerConnection,System.Guid)">
            <summary>
            Выполняет поиск описания справочника
            </summary>
            <param name="connection">Соединение с сервером</param>
            <param name="referenceGuid">Guid справочника</param>
            <returns>Описание справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ReferenceHelper.Find(TFlex.DOCs.Model.ServerConnection,TFlex.DOCs.Model.Structure.SpecialReference)">
            <summary>
            Выполняет поиск описания справочника
            </summary>
            <param name="connection">Соединение с сервером</param>
            <param name="reference">Тип справочника</param>
            <returns>Описание справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ReferenceHelper.Create(TFlex.DOCs.Model.ServerConnection,System.String,System.Boolean,System.Boolean)">
            <summary>
            Создает экземпляр справочника для работы с данными
            </summary>
            <param name="connection">Соединение с сервером</param>
            <param name="referenceName">Название, Guid, Id справочника</param>
            <param name="prototypeMode">Значение true, если требуется создать экземпляр справочника для работы с прототипами; в противном случае - значение false</param>
            <param name="throwOnError">Значение true, если требуется вывести сообщение об ошибке; в противном случае - значение false</param>
            <returns>Экземпляр справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ReferenceHelper.Create(TFlex.DOCs.Model.ServerConnection,System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Создает экземпляр справочника для работы с данными
            </summary>
            <param name="connection">Соединение с сервером</param>
            <param name="referenceGuid">Guid справочника</param>
            <param name="prototypeMode">Значение true, если требуется создать экземпляр справочника для работы с прототипами; в противном случае - значение false</param>
            <param name="throwOnError">Значение true, если требуется вывести сообщение об ошибке; в противном случае - значение false</param>
            <returns>Экземпляр справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ReferenceHelper.Create(TFlex.DOCs.Model.ServerConnection,TFlex.DOCs.Model.Structure.SpecialReference,System.Boolean,System.Boolean)">
            <summary>
            Создает экземпляр справочника для работы с данными
            </summary>
            <param name="connection">Соединение с сервером</param>
            <param name="reference">Тип справочника</param>
            <param name="prototypeMode">Значение true, если требуется создать экземпляр справочника для работы с прототипами; в противном случае - значение false</param>
            <param name="throwOnError">Значение true, если требуется вывести сообщение об ошибке; в противном случае - значение false</param>
            <returns>Экземпляр справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.Flowchart.Helpers.ReferenceHelper.Create(TFlex.DOCs.Model.ReferenceInfo,System.Boolean,System.Boolean)">
            <summary>
            Создает экземпляр справочника для работы с данными
            </summary>
            <param name="referenceInfo">Описание справочника</param>
            <param name="prototypeMode">Значение true, если требуется создать экземпляр справочника для работы с прототипами; в противном случае - значение false</param>
            <param name="throwOnError">Значение true, если требуется вывести сообщение об ошибке; в противном случае - значение false</param>
            <returns>Экземпляр справочника</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Interfaces.IReferenceActivity.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Interfaces.ISearchModeActivity.SearchMode">
            <summary>
            Режим поиска
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Interfaces.IMachineActivity.Machine">
            <summary>
            Место выполнения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Interfaces.IIsOneModeActivity.IsOne">
            <summary>
            Тип поиска - получить один объект или все
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Interfaces.IClassObjectActivity.ClassObject">
            <summary>
            Тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Interfaces.IParameterActivity.Parameter">
            <summary>
            Параметр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Interfaces.IFilterActivity.Filter">
            <summary>
            Фильтр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Interfaces.ILinkActivity.Link">
            <summary>
            Связь
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Interfaces.IIndexNameActivity.IndexName">
            <summary>
            Наименование
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Interfaces.IObjectsListActivity.ObjectsList">
            <summary>
            Список объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Interfaces.IReferenceObjectActivity.ReferenceObject">
            <summary>
            Объект справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Interfaces.IPrototypeActivity.Prototype">
            <summary>
            Прототип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Interfaces.ISignatureType.SignatureType">
            <summary>
            Тип подписи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Interfaces.IOperatorActivity.Operator">
            <summary>
            Оператор
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Interfaces.IActionActivity.Action">
            <summary>
            Действие
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.Flowchart.Interfaces.ICodeActivity.Code">
            <summary>
            Код
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.ObjectModel.Types.Helpers.AccessorCreator.CreateObject(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Создаёт объект соответствующего типа макроязыка в макроконтексте
            </summary>
            <param name="referenceObject">Объект справочника</param>
            <param name="context">Макроконтекст</param>
            <returns>Объект соответствующего типа макроязыка</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.Types.Helpers.AccessorManager.DefaultSupportedMacroTypes">
            <summary>
            Типы макроязыка
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.ObjectModel.Types.InfoAttribute">
            <summary>
            Атрибут описания элемента макроязыка
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.Types.InfoAttribute.Language">
            <summary>
            Язык
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.Types.InfoAttribute.Name">
            <summary>
            Имя
            </summary>
            <remarks>Не переводить</remarks>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.Types.InfoAttribute.Key">
            <summary>
            Ключ для определения аналогичного элемента на английском языке
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.Types.InfoAttribute.Code">
            <summary>
            Вставляемый код
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.Types.InfoAttribute.EndsWithSemicolon">
            <summary>
            Код заканчивается точкой с запятой
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.Types.InfoAttribute.AdditionalName">
            <summary>
            Дополнительное имя
            </summary>
            <remarks>Не переводить</remarks>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.ObjectModel.Types.TypeInfoAttribute">
            <summary>
            Атрибут описания типа макроязыка
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.Types.TypeInfoAttribute.Language">
            <summary>
            Язык
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.Types.TypeInfoAttribute.Name">
            <summary>
            Имя
            </summary>
            <remarks>Не переводить</remarks>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.Types.TypeInfoAttribute.NoIndexBaseClasses">
            <summary>
            Не индексировать базовые классы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.Types.AccessorDefaultType.Name">
            <summary>
            Имя типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.Types.AccessorDefaultType.TypeClass">
            <summary>
            Тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.Types.AccessorDefaultType.SubClass">
            <summary>
            Базовый тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.Types.AccessorDefaultType.RealClass">
            <summary>
            Действительный тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.Types.AccessorDefaultType.IconName">
            <summary>
            Путь до иконки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.Types.AccessorDefaultType.Image">
            <summary>
            Иконка
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.Types.AccessorDefaultType.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.Types.AccessorDefaultType.Classes">
            <summary>
            Допустимые типы справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.Types.AccessorDefaultType.CastFunc">
            <summary>
            Функция преобразование типов для объектов справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.ObjectModel.Types.AccessorTypes">
            <summary>
            Типы макроязыка
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ObjectModel.Types.AccessorTypes.DefaultReferenceObjectType">
            <summary>
            Объект
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ObjectModel.Types.AccessorTypes.DefaultReferenceObjectListType">
            <summary>
            Объекты
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ObjectModel.Types.AccessorTypes.DefaultHierarchyLinkType">
            <summary>
            Подключение
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ObjectModel.Types.AccessorTypes.DefaultHierarchyLinkListType">
            <summary>
            Подключения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ObjectModel.Types.AccessorTypes.DefaultInputDialogType">
            <summary>
            Диалог ввода
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ObjectModel.Types.AccessorTypes.DefaultSignatureObjectType">
            <summary>
            Подпись
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ObjectModel.Types.AccessorTypes.DefaultSignatureObjectListType">
            <summary>
            Подписи
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.ObjectModel.Types.Language">
            <summary>
            Язык
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ObjectModel.Types.Language.RU">
            <summary>
            Русский
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ObjectModel.Types.Language.EN">
            <summary>
            Английский
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ObjectModel.Types.DefaultSupportedType.None">
            <summary>
            Без типа
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ObjectModel.Types.DefaultSupportedType.Custom">
            <summary>
            Другой тип
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ObjectModel.Types.DefaultSupportedType.ReferenceObject">
            <summary>
            Объект
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ObjectModel.Types.DefaultSupportedType.ReferenceObjectList">
            <summary>
            Объекты
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ObjectModel.Types.DefaultSupportedType.HierarchyLink">
            <summary>
            Подключение
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ObjectModel.Types.DefaultSupportedType.HierarchyLinkList">
            <summary>
            Подключения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ObjectModel.Types.DefaultSupportedType.InputDialog">
            <summary>
            Диалог ввода
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ObjectModel.Types.DefaultSupportedType.SignatureObject">
            <summary>
            Подпись
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ObjectModel.Types.DefaultSupportedType.SignatureObjectList">
            <summary>
            Подписи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.ObjectModel.Types.Extensions.ClassObjectExtensions.GetReferenceInfo(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Вернуть описание справочника
            </summary>
            <param name="classObject">Тип справочника</param>
            <returns>Описание справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.ObjectModel.Types.Extensions.ClassObjectExtensions.CloneIcon(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Возвращает копию иконки типа
            </summary>
            <param name="classObject">Тип справочника</param>
            <returns>Иконка</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.ObjectModel.Types.Extensions.MacroContextExtensions.CreateObject(TFlex.DOCs.Model.Macros.MacroContext,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создаёт "Объект" в макроконтексте
            </summary>
            <param name="context">Макроконтекст</param>
            <param name="referenceObject">ReferenceObject</param>
            <returns>Объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.ObjectModel.Types.Extensions.MacroContextExtensions.CreateHierarchyLink(TFlex.DOCs.Model.Macros.MacroContext,TFlex.DOCs.Model.References.ComplexHierarchyLink)">
            <summary>
            Создаёт "Подключение" в макроконтексте
            </summary>
            <param name="context">Макроконтекст</param>
            <param name="hierarchyLink">ComplexHierarchyLink</param>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.ObjectModel.Types.Extensions.MacroContextExtensions.CreateObjects(TFlex.DOCs.Model.Macros.MacroContext,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject})">
            <summary>
            Создаёт "Объекты" в макроконтексте
            </summary>
            <param name="context">Макроконтекст</param>
            <param name="referenceObjects">Список ReferenceObject</param>
            <returns>Объекты</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.ObjectModel.Types.Extensions.MacroContextExtensions.CreateInputDialog(TFlex.DOCs.Model.Macros.MacroContext,System.String)">
            <summary>
            Создаёт "ДиалогВвода" в макроконтексте
            </summary>
            <param name="context">Макроконтекст</param>
            <param name="caption">Заголовок</param>
            <returns>ДиалогВвода</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.ObjectModel.Types.Extensions.MacroContextExtensions.CreateParameterValueList(TFlex.DOCs.Model.Macros.MacroContext,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Structure.ListValue})">
            <summary>
            Создаёт "СписокЗначений" в макроконтексте
            </summary>
            <param name="context">Макроконтекст</param>
            <param name="values">Значения</param>
            <returns>СписокЗначений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.ObjectModel.Types.Extensions.ParameterGroupExtensions.CloneIcon(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Возвращает копию иконки группы параметров
            </summary>
            <param name="parameterGroup">Группа параметров</param>
            <returns>Иконка</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.ObjectModel.Types.Extensions.ParameterGroupExtensions.CloneIcon(TFlex.DOCs.Model.ReferenceInfo)">
            <summary>
            Возвращает копию иконки справочника
            </summary>
            <param name="referenceInfo">Описание справочника</param>
            <returns>Иконка</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.FieldValueEventArgs.Name">
            <summary>
            Заголовок поля
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.FieldValueChangedEventArgs.OldValue">
            <summary>
            Старое значение
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.FieldValueChangedEventArgs.NewValue">
            <summary>
            Новое значение
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.ObjectModel.CopySetAccessor.CopyTo(TFlex.DOCs.Model.Macros.ObjectModel.ObjectAccessor[],System.Int32)">
            <summary>
            Копирует набор объектов в указанный массив, начиная с заданного индекса массива
            </summary>
            <param name="array">Массив для копирования объектов</param>
            <param name="arrayIndex">Индекс в массиве, с которого следует начинать копирование</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.ObjectModel.CopySetAccessor.Count">
            <summary>
            Возвращает количество объектов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.ObjectModel.CopySetAccessor.GetEnumerator">
            <summary>
            Возвращает перечислитель объектов в наборе
            </summary>
            <returns>Перечислитель объектов</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.ObjectModel.GlobalParameterAccessor">
            <summary>
            Макросы: класс для получения глобальных параметров из макроса
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.ObjectModel.ParameterAccessor">
            <summary>
            Макросы: класс для получения параметров объекта справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.ObjectModel.DynamicType">
            <summary>
            Макросы: динамический тип данных
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.Path.StructurePath">
            <summary>
            Путь по структуре
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.CodeInfo">
            <summary>
            Информация о коде макроса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.CodeInfo.Type">
            <summary>
            Тип кода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.CodeInfo.Language">
            <summary>
            Язык программирования
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.CodeInfo.Version">
            <summary>
            Версия кода
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.CodeType">
            <summary>
            Тип кода
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.CodeType.Text">
            <summary>
            Текст
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.CodeType.Flowchart">
            <summary>
            Блок-схема
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.ProgrammingLanguage">
            <summary>
            Язык программирования
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ProgrammingLanguage.VisualBasic">
            <summary>
            Visual Basic
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Macros.ProgrammingLanguage.VisualCSharp">
            <summary>
            Visual C#
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.FormulaMacro">
            <summary>
            Макрос для выполнения формулы
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.FormulaMacro.#ctor">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.FormulaMacro.#ctor(TFlex.DOCs.Model.Macros.FormulaMacro)">
            <summary>
            Создает новый экземпляр класса на основании указанного экземпляра
            </summary>
            <param name="source">Макрос для копирования свойств</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.FormulaMacro.#ctor(System.String)">
            <summary>
            Создает новый экземпляр класса с указанной формулой
            </summary>
            <param name="formula">Формула</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.FormulaMacro.Formula">
            <summary>
            Возвращает или задает формулу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.FormulaMacro.IsReturnValue">
            <summary>
            Возвращает значение, указывающее, должна ли формула возвращать значение
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.FormulaMacro.IsText">
            <summary>
            Возвращает значение, указывающее, является ли код формулы текстовым кодом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.FormulaMacro.IsFlowchart">
            <summary>
            Возвращает значение, указывающее, является ли код формулы кодом блок-схемы
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.FormulaMacro.Validate">
            <summary>
            Проверяет код формулы на ошибки и предупреждения
            </summary>
            <returns>Коллекция ошибок</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.FormulaMacro.Calculate(TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Вычисляет значение формулы
            </summary>
            <param name="context">Контекст выполнения макроса</param>
            <returns>Вычисленное значение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.FormulaMacro.ReadXml(System.Xml.XmlReader)">
            <summary>
            Заполняет параметры объекта из его Xml-представления
            </summary>
            <param name="reader">Поток XmlReader, из которого выполняется десериализация объекта</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.FormulaMacro.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Преобразует объект в Xml-представление
            </summary>
            <param name="writer">Поток XmlReader, в который выполняется сериализация объекта</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.FormulaMacro.Clone">
            <summary>
            Создает копию текущего объекта
            </summary>
            <returns>Созданная копия объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.FormulaMacro.ToString">
            <summary>
            Возвращает строковое представление макроса
            </summary>
            <returns>Строковое представление макроса</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.MacroException">
            <summary>
            Исключение, возникающее в ходе выполнения макроса
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroException.#ctor(System.String,System.Exception)">
            <summary>
            Создает новый экземпляр исключения с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения
            </summary>
            <param name="message">Сообщение об ошибке</param>
            <param name="innerException">Исключение, вызвавшее текущее исключение, или указатель null, если внутреннее исключение не задано</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroException.#ctor(System.String,System.Exception,System.Boolean)">
            <summary>
            Создает новый экземпляр исключения с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения
            </summary>
            <param name="message">Сообщение об ошибке</param>
            <param name="innerException">Исключение, вызвавшее текущее исключение, или указатель null, если внутреннее исключение не задано</param>
            <param name="cancel">Значение true, если требуется ли отменить текущую операцию; в противном случае - значение false</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroException.#ctor">
            <summary>
            Создает новый экземпляр исключения, прерывающего выполнение макроса без сообщения об ошибке
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroException.#ctor(System.Boolean)">
            <summary>
            Создает новый экземпляр исключения с возможностью указать, требуется ли отмена текущей операции 
            </summary>
            <param name="cancel">Значение true, если требуется ли отменить текущую операцию; в противном случае - значение false</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroException.#ctor(TFlex.DOCs.Model.Macros.MacroException)">
            <summary>
            Создает новый экземпляр исключения на основании указанного экземпляра
            </summary>
            <param name="source">Исключение для копирования параметров</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Создает новый экземпляр исключения путем десериализации
            </summary>
            <param name="info">Объект SerializationInfo, содержащий данные объекта</param>
            <param name="context">Контекст потока сериализации</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает данные объекта для сериализации
            </summary>
            <param name="info">Объект SerializationInfo для заполнения данными</param>
            <param name="context">Контекст потока сериализации</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroException.Cancel">
            <summary>
            Возвращает значение, указывающее, требуется ли отмена текущей операции
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroValidationResults.HasErrors">
            <summary>
            Возвращает значение, показывающее, есть ли в коллекции ошибки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroValidationResults.HasWarnings">
            <summary>
            Возвращает значение, показывающее, есть ли в коллекции предупреждения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroValidationResults.IsTextValidation">
            <summary>
            Возвращает значение, показывающее, что проверялся макрос C#
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroValidationResults.TextResults">
            <summary>
            Результаты компиляции макроса C#
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroValidationResults.IsFlowchartValidation">
            <summary>
            Возвращает значение, показывающее, что проверялся макрос на основе блок-схемы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroValidationResults.FlowchartResults">
            <summary>
            Результаты валидации макроса на основе блок-схемы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroValidationResults.ResultException">
            <summary>
            Ошибка выполнения валидации
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.MathExtensions.MathExtensions">
            <summary>
            Расширения по работе с System.Math
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.MathExtensions.M">
            <summary>
            Расширения для математических функций
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.DynamicMacro">
            <summary>
            Динамический макрос
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.DynamicMacro.#ctor">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.DynamicMacro.#ctor(TFlex.DOCs.Model.Macros.DynamicMacro)">
            <summary>
            Создает новый экземпляр класса на основании указанного экземпляра
            </summary>
            <param name="source">Макрос для копирования свойств</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.DynamicMacro.Dispose">
            <summary>
            Освобождает используемые ресурсы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.DynamicMacro.Name">
            <summary>
            Возвращает или задает наименование макроса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.DynamicMacro.Sources">
            <summary>
            Возврщает список строк, содержащих исходный код макроса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.DynamicMacro.References">
            <summary>
            Возвращает список ссылок, подключенных к макросу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.DynamicMacro.IsCompiled">
            <summary>
            Возвращает значение, указывающее, является ли макрос скомпилированным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.DynamicMacro.CompilerVersion">
            <summary>
            Возвращает или задает версию компилятора
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.DynamicMacro.UseConvertResult">
            <summary>
            Возвращает или задаёт конвертирование результата выполнения макроса из типа макроязыка в тип API
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.DynamicMacro.Compile">
            <summary>
            Компилирует макрос
            </summary>
            <returns>Коллекция ошибок компилятора</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.DynamicMacro.Run(TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Выполняет макрос
            </summary>
            <param name="context">Контекст выполнения макроса</param>
            <returns>Возвращенное значение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.DynamicMacro.Run(TFlex.DOCs.Model.Macros.MacroContext,System.String,System.Object[])">
            <summary>
            Выполняет макрос
            </summary>
            <param name="context">Контекст выполнения макроса</param>
            <param name="entryPoint">Точка входа макроса</param>
            <param name="args">Массив передаваемых параметров</param>
            <returns>Возвращенное значение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.DynamicMacro.Clone">
            <summary>
            Создает копию текущего объекта
            </summary>
            <returns>Созданная копия объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.DynamicMacro.GetEntryPoints">
            <summary>
            Возвращает коллекцию точек входа
            </summary>
            <returns>Коллекция точек входа</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.MacroContext">
            <summary>
            Контекст выполнения макроса
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroContext.#ctor">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroContext.Group">
            <summary>
            Возврщает текущую группу параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroContext.ReferenceObject">
            <summary>
            Возвращает текущий объект справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroContext.HierarchyLink">
            <summary>
            Возвращает текущее подключение
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroContext.ObjectChangedArgs">
            <summary>
            Возвращает аргумент события изменения объекта справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroContext.ChangedParameter">
            <summary>
            Возвращает измененный параметр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroContext.ChangedLink">
            <summary>
            Возвращает измененную связь
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroContext.ChangedParameterName">
            <summary>
            Возвращает имя измененного параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroContext.ChangedLinkName">
            <summary>
            Возвращает имя измененной связи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroContext.CloseDialog(System.Boolean)">
            <summary>
            Закрывает диалог свойств объекта
            </summary>
            <param name="saveChanges">Значение true, если требуется сохранить изменения; в противном случае - значение false</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroContext.Tag">
            <summary>
            Возвращает или задает значение, которое может использоваться для передачи специальной информации
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroContext.RaiseEvent(System.String)">
            <summary>
            Инициирует пользовательское событие с заданным именем
            </summary>
            <param name="eventName">Имя пользовательского события</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroContext.RunMacro(System.String,System.String,System.Object[])">
            <summary>
            Выполняет указанный макрос
            </summary>
            <param name="macroName">Наименование макроса</param>
            <param name="entryPoint">Точка входа макроса</param>
            <param name="parameters">Набор передаваемых параметров</param>
            <returns>Возвращенное значение</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroContext.Filter">
            <summary>
            Возвращает фильтр, к которому относится формула
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroContext.ShowMessage(System.String,System.String,System.Object[])">
            <summary>
            Показывает сообщение
            </summary>
            <param name="caption">Заголовок сообщения</param>
            <param name="text">Текст сообщения в виде строки формата</param>
            <param name="args">Массив объектов для форматирования</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroContext.ShowQuestion(System.String)">
            <summary>
            Показывает сообщение с иконкой вопрос и вариантами Да/Нет
            </summary>
            <param name="text">Текст сообщения в виде строки формата</param>
            <returns>true - если пользователь ответил Да, false в противном случае</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroContext.CreateInputDialog">
            <summary>
            Создает диалог ввода
            </summary>
            <returns>Диалог ввода</returns>
            <remarks>Не поддерживается для текущего типа</remarks>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroContext.ShowObjectPropertyDialog(TFlex.DOCs.Model.Macros.ObjectModel.ObjectAccessor,System.String)">
            <summary>
            Показывает диалог свойств указанного объекта
            </summary>
            <param name="object">Объект, для которого требуется показать диалог свойств</param>
            <param name="caption">Заголовок диалога</param>
            <returns>Значение true, если диалог свойств объекта закрыт кнопкой "Ок"; в противом случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroContext.Item(System.String)">
            <summary>
            Возвращает или задает данные по указанному строковому ключу
            </summary>
            <param name="propertyName">Ключ для доступа к данным</param>
            <returns>Данные по указанному ключу</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.MacroProvider">
            <summary>
            Базовый тип макроса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.Context">
            <summary>
            Возвращает контекст выполнения макроса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.CurrentObject">
            <summary>
            Возвращает текущий объект справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.CurrentHierarchyLink">
            <summary>
            Возвращает текущее подключение объекта справочника к родительскому объекту
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.Parameter">
            <summary>
            Возвращает объект для доступа к параметрам текущего объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.Class">
            <summary>
            Возвращает тип текущего объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.Global">
            <summary>
            Возвращает объект для доступа к глобальным параметрам
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.Nomenclature">
            <summary>
            Возвращает объект для доступа к справочнику номенклатуры
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.ChangedParameter">
            <summary>
            Возвращает наименование измененного параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.ChangedLink">
            <summary>
            Возвращает наименование измененной связи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.FindObject(System.String,System.String,System.Object)">
            <summary>
            Возвращает объект указанного справочника, у которого заданный параметр равен указанному значению
            </summary>
            <param name="referenceName">Наименование справочника</param>
            <param name="parameter">Наименование параметра</param>
            <param name="value">Значение параметра</param>
            <returns>Найденный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.FindObject(System.String,TFlex.DOCs.Model.Macros.ObjectModel.SearchTerm)">
            <summary>
            Возвращает объект указанного справочника, для которого выполняется заданное условие
            </summary>
            <param name="referenceName">Наименование справочника</param>
            <param name="term">Условие поиска объекта</param>
            <returns>Найденный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.FindObject(System.String,System.String)">
            <summary>
            Возвращает объект указанного справочника, для которого выполняются условия заданного фильтра
            </summary>
            <param name="referenceName">Наименование справочника</param>
            <param name="filter">Строка фильтра</param>
            <returns>Найденный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.FindObjects(System.String,System.String,System.Object)">
            <summary>
            Возвращает список объектов указанного справочника, у которых заданный параметр равен указанному значению
            </summary>
            <param name="referenceName">Наименование справочника</param>
            <param name="parameter">Наименование параметра</param>
            <param name="value">Значение параметра</param>
            <returns>Список найденных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.FindObjects(System.String,TFlex.DOCs.Model.Macros.ObjectModel.SearchTerm)">
            <summary>
            Возвращает список объектов указанного справочника, для которых выполняется заданное условие
            </summary>
            <param name="referenceName">Наименование справочника</param>
            <param name="term">Условие поиска объектов</param>
            <returns>Список найденных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.FindObjects(System.String,System.String)">
            <summary>
            Возвращает список объектов указанного справочника, для которых выполняются условия заданного фильтра
            </summary>
            <param name="referenceName">Наименование справочника</param>
            <param name="filter">Строка фильтра</param>
            <returns>Список найденных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.FindPrototype(System.String,System.String)">
            <summary>
            Возвращает прототип справочника
            </summary>
            <param name="referenceName">Наименование справочника</param>
            <param name="filter">Фильтр для поиска</param>
            <returns>Найденный прототип</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.CreateObject(System.String,System.String)">
            <summary>
            Создает объект заданного типа в указанном справочнике
            </summary>
            <param name="referenceName">Наименование справочника</param>
            <param name="className">Наименование типа объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.CreateObject(System.String,System.String,TFlex.DOCs.Model.Macros.ObjectModel.ObjectAccessor)">
            <summary>
            Создает объект указанного типа в заданном справочнике с указанием родительского объекта
            </summary>
            <param name="referenceName">Наименование справочника</param>
            <param name="className">Имя типа создаваемого объекта</param>
            <param name="parentObject">Родительский объект</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.CopyObject(TFlex.DOCs.Model.Macros.ObjectModel.ObjectAccessor,TFlex.DOCs.Model.Macros.ObjectModel.ObjectAccessor,System.Boolean,System.Boolean)">
            <summary>
            Создает объект на основе указанного прототипа
            </summary>
            <param name="прототип">Прототип создаваемого объекта</param>
            <param name="родитель">Родительский объект</param>
            <param name="копироватьДочерниеОбъекты">Значение, указывающее, требуется ли копировать дочерние объекты прототипа</param>
            <param name="копироватьСвязанныеОбъекты">Значение, указывающее, требуется ли копировать связанные объекты прототипа</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.CreateHierarchyLink(TFlex.DOCs.Model.Macros.ObjectModel.RefObj,TFlex.DOCs.Model.Macros.ObjectModel.RefObj)">
            <summary>
            Создает подключение указанного дочернего объекта к заданному родительскому объекту
            </summary>
            <param name="parentObject">Родительский объект</param>
            <param name="childObject">Дочерний объект</param>
            <returns>Подключение</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.CurrentUser">
            <summary>
            Возвращает текущего пользователя системы
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.SearchTerm(System.String,System.String,System.Object)">
            <summary>
            Создает условие поиска
            </summary>
            <param name="parameter">Наименование параметра объекта</param>
            <param name="operator">Наименование оператора сравнения</param>
            <param name="value">Значение параметра</param>
            <returns>Условие поиска</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.Error(System.String,System.Object[])">
            <summary>
            Генерирует исключение с указанным сообщением об ошибке
            </summary>
            <param name="text">Сообщение об ошибке в виде строки формата</param>
            <param name="args">Массив объектов для форматирования</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.Message(System.String,System.String,System.Object[])">
            <summary>
            Выводит сообщение на экран
            </summary>
            <param name="caption">Заголовок сообщения</param>
            <param name="text">Текст сообщения в виде строки формата</param>
            <param name="args">Массив объектов для форматирования</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.Question(System.String)">
            <summary>
            Показывает сообщение с иконкой вопрос и вариантами Да/Нет
            </summary>
            <param name="text">Текст сообщения в виде строки формата</param>
            <returns>true - если пользователь ответил Да, false в противном случае</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.Break">
            <summary>
            Прерывает выполнение макроса
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.Cancel">
            <summary>
            Прерывает выполнение макроса с отменой изменений
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.RaiseEvent(System.String)">
            <summary>
            Инициирует пользовательское событие с заданным именем
            </summary>
            <param name="eventName">Имя события</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.RunMacro(System.String,System.String,System.Object[])">
            <summary>
            Выполняет указанный макрос
            </summary>
            <param name="macro">Наименование макроса</param>
            <param name="entryPoint">Точка входа макроса</param>
            <param name="parameters">Массив передаваемых параметров</param>
            <returns>Значение, возвращенное макросом</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.FilterVariable">
            <summary>
            Возвращает объект для доступа к переменным фильтра
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.CreateInputDialog(System.String)">
            <summary>
            Создает диалог ввода значений с указанным заголовком
            </summary>
            <param name="caption">Заголовок диалога ввода</param>
            <returns>Созданный диалог ввода значений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.ShowPropertyDialog(TFlex.DOCs.Model.Macros.ObjectModel.RefObj)">
            <summary>
            Отображает диалог свойств указанного объекта справочника
            </summary>
            <param name="refObj">Объект справочника</param>
            <returns>Значение true, если диалог был закрыт нажатием на кнопку "OК", в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.GetValueList(System.String,System.String,System.String)">
            <summary>
            Возвращает список значений для параметра справочника или списка объектов
            </summary>
            <param name="parameterName">Имя или Guid параметра</param>
            <param name="referenceName">Имя или Guid параметра</param>
            <param name="objectList">Имя или Guid списка объектов</param>
            <returns>Список значений</returns>
            <remarks>ValueList представляет собой коллекцию объектов ValueListItem, содержащих свойства Name и Value</remarks>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.SaveAll">
            <summary>
            Сохраняет все контекстные объекты
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.ТекущийОбъект">
            <summary>
            Возвращает текущий объект справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.ТекущееПодключение">
            <summary>
            Возвращает текущее подключение объекта справочника к родительскому объекту
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.Параметр">
            <summary>
            Возврщает объект для доступа к параметрам текущего объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.Тип">
            <summary>
            Возвращает тип текущего объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.ГлобальныйПараметр">
            <summary>
            Возвращает объект для доступа к глобальным параметрам
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.Номенклатура">
            <summary>
            Возвращает объект для доступа к номенклатуре
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.ИзмененныйПараметр">
            <summary>
            Возвращает наименование измененного параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.ИзмененнаяСвязь">
            <summary>
            Возвращает наименование измененной связи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.НайтиОбъект(System.String,System.String,System.Object)">
            <summary>
            Возвращает объект указанного справочника, у которого заданный параметр равен указанному значению
            </summary>
            <param name="справочник">Наименование справочника</param>
            <param name="параметр">Наименование параметра</param>
            <param name="значение">Значение параметра</param>
            <returns>Найденный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.НайтиОбъект(System.String,TFlex.DOCs.Model.Macros.ObjectModel.Условие)">
            <summary>
            Возвращает объект указанного справочника, для которого выполняется заданное условие
            </summary>
            <param name="справочник">Наименование справочника</param>
            <param name="условие">Условие поиска объекта</param>
            <returns>Найденный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.НайтиОбъект(System.String,System.String)">
            <summary>
            Возвращает объект указанного справочника, для которого выполняются условия заданного фильтра
            </summary>
            <param name="справочник">Наименование справочника</param>
            <param name="фильтр">Строка фильтра</param>
            <returns>Найденный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.НайтиОбъекты(System.String,System.String,System.Object)">
            <summary>
            Возвращает список объектов указанного справочника, у которых заданный параметр равен указанному значению
            </summary>
            <param name="справочник">Наименование справочника</param>
            <param name="параметр">Наименование параметра</param>
            <param name="значение">Значение параметра</param>
            <returns>Список найденных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.НайтиОбъекты(System.String,TFlex.DOCs.Model.Macros.ObjectModel.Условие)">
            <summary>
            Возвращает список объектов указанного справочника, для которых выполняется заданное условие
            </summary>
            <param name="справочник">Наименование справочника</param>
            <param name="условие">Условие поиска объектов</param>
            <returns>Список найденных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.НайтиОбъекты(System.String,System.String)">
            <summary>
            Возвращает список объектов указанного справочника, для которых выполняются условия заданного фильтра
            </summary>
            <param name="справочник">Наименование справочника</param>
            <param name="фильтр">Строка фильтра</param>
            <returns>Список найденных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.СоздатьОбъект(System.String,System.String)">
            <summary>
            Создает объект указанного типа в заданном справочнике
            </summary>
            <param name="справочник">Наименование справочника</param>
            <param name="тип">Наименование типа создаваемого объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.СоздатьОбъект(System.String,System.String,TFlex.DOCs.Model.Macros.ObjectModel.ObjectAccessor)">
            <summary>
            Создает объект указанного типа в заданном справочнике с указанием родительского объекта
            </summary>
            <param name="справочник">Наименование справочника</param>
            <param name="тип">Имя типа создаваемого объекта</param>
            <param name="родительскийОбъект">Родительский объект</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.СкопироватьОбъект(TFlex.DOCs.Model.Macros.ObjectModel.ObjectAccessor,TFlex.DOCs.Model.Macros.ObjectModel.ObjectAccessor,System.Boolean,System.Boolean)">
            <summary>
            Создает объект на основе указанного прототипа
            </summary>
            <param name="прототип">Прототип создаваемого объекта</param>
            <param name="родитель">Родительский объект</param>
            <param name="копироватьДочерниеОбъекты">Значение, указывающее, требуется ли копировать дочерние объекты прототипа</param>
            <param name="копироватьСвязанныеОбъекты">Значение, указывающее, требуется ли копировать связанные объекты прототипа</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.НайтиПрототип(System.String,System.String)">
            <summary>
            Возвращает прототип справочника
            </summary>
            <param name="справочник">Наименование справочника</param>
            <param name="фильтр">Фильтр для поиска</param>
            <returns>Найденный прототип</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.СоздатьПодключение(TFlex.DOCs.Model.Macros.ObjectModel.Объект,TFlex.DOCs.Model.Macros.ObjectModel.Объект)">
            <summary>
            Создает подключение указанного дочернего объекта к заданному родительскому объекту
            </summary>
            <param name="родительскийОбъект">Родительский объект</param>
            <param name="дочернийОбъект">Дочерний объект</param>
            <returns>Созданное подключение</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.ТекущийПользователь">
            <summary>
            Возвращает текущего пользователя системы
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.Условие(System.String,System.String,System.Object)">
            <summary>
            Создает условие поиска
            </summary>
            <param name="параметр">Наименование параметра условия</param>
            <param name="оператор">Наименование оператора сравнения</param>
            <param name="значение">Значение для сравнения</param>
            <returns>Созданное условие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.Ошибка(System.String,System.Object[])">
            <summary>
            Генерирует исключение с указанным сообщением об ошибке
            </summary>
            <param name="текст">Сообщение об ошибке в виде строки формата</param>
            <param name="аргументы">Массив объектов для форматирования</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.Сообщение(System.String,System.String,System.Object[])">
            <summary>
            Выводит на экран сообщение
            </summary>
            <param name="заголовок">Заголовок сообщения</param>
            <param name="текст">Текст сообщения в виде строки формата</param>
            <param name="аргументы">Массив объектов для форматирования</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.Вопрос(System.String)">
            <summary>
            Показывает сообщение с иконкой вопрос и вариантами Да/Нет
            </summary>
            <param name="текст">Текст сообщения в виде строки формата</param>
            <returns>true - если пользователь ответил Да, false в противном случае</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.Прервать">
            <summary>
            Прерывает выполнение макроса
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.Отменить">
            <summary>
            Прерывает выполнение макроса с отменой изменений
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.ИнициироватьСобытие(System.String)">
            <summary>
            Инициирует пользовательское событие с заданным именем
            </summary>
            <param name="событие">Наименование события</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.ВыполнитьМакрос(System.String,System.String,System.Object[])">
            <summary>
            Выполняет указанный макрос
            </summary>
            <param name="макрос">Наименование макроса</param>
            <param name="метод">Наименование выполняемого метода</param>
            <param name="параметры">Массив параметров для передачи в метод</param>
            <returns>Возвращенное значение</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.ПеременнаяФильтра">
            <summary>
            Возврщает объект для доступа к переменным фильтра
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.СоздатьДиалогВвода(System.String)">
            <summary>
            Создает диалог ввода значений
            </summary>
            <param name="заголовок">Заголовок диалога ввода</param>
            <returns>Созданный диалог ввода</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.ПоказатьДиалогСвойств(TFlex.DOCs.Model.Macros.ObjectModel.Объект)">
            <summary>
            Отображает диалог свойств указанного объекта
            </summary>
            <param name="объект">Объект справочника</param>
            <returns>Значение true, если диалог свойств был закрыт нажатием на кнопку "ОК"; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.ПолучитьСписокЗначений(System.String,System.String,System.String)">
            <summary>
            Возвращает список значений для параметра справочника или списка объектов
            </summary>
            <param name="параметр">Имя или Guid параметра</param>
            <param name="справочник">Имя или Guid параметра</param>
            <param name="списокОбъектов">Имя или Guid списка объектов</param>
            <returns>Список значений</returns>
            <remarks>СписокЗначений представляет собой коллекцию объектов ЗначениеСписка, содержащих свойства Наименование и Значение</remarks>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.СохранитьВсё">
            <summary>
            Сохраняет все контекстные объекты
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.Run">
            <summary>
            Метод макроса, выполняемый по умолчанию при запуске макроса
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Macros.MacroProvider.ButtonValidator">
            <summary>
            Данные о состоянии кнопки пользовательского события в интерфейсе
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Macros.MacroProvider.ButtonValidator.#ctor">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.ButtonValidator.Enable">
            <summary>
            Возвращает или задает значение, указывающее, является ли кнопка активной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Macros.MacroProvider.ButtonValidator.Visible">
            <summary>
            Возвращает или задает значение, указывающее, является ли кнопка видимой
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.Account">
            <summary>
            Учетная запись для работы с почтой и заданиями
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Account.IsLoggedIn">
            <summary>
            Показывает, выплолнено ли подключение к учётной записи с заданными настройками 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Account.IsClientViewAccount">
            <summary>
            Возращает, является ли учётная запись личной для текущего пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Account.OwnerId">
            <summary>
            Возращает идентификатор объекта владельца учётной записи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Account.Owner">
            <summary>
            Возращает владельца учётной записи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Account.Guid">
            <summary>
            Возвращает Guid учетной записи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Account.Folders">
            <summary>
            Возвращает коллекцию папок учетной записи, содержащих сообщения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Account.Rules">
            <summary>
            Возвращает коллекцию правил учетной записи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Account.Name">
            <summary>
            Возвращает наименование учетной записи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Account.ReloadFolders">
            <summary>
            Обновляет коллекцию папок учетной записи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Account.ReloadRules">
            <summary>
            Обновляет коллекцию правил учетной записи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Account.SetMessageUnread(TFlex.DOCs.Model.Mail.MailMessage)">
            <summary>
            устанавливает статус "Непрочтённое" для указанного сообщения
            </summary>
            <param name="messages">сообщение</param>
            <returns>Значение true, если сообщение успешно помечено как непрочитанное; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Account.SetMessageRead(TFlex.DOCs.Model.Mail.MailMessage)">
            <summary>
            устанавливает статус "Прочитано" для указанного сообщения
            </summary>
            <param name="messages">сообщение</param>
            <returns>Значение true, если сообщение успешно помечено как прочитанное; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Account.SetMessagesUnread(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Mail.MailMessage})">
            <summary>
            устанавливает статус "Непрочтённое" для указанных сообщений
            </summary>
            <param name="messages">список сообщений</param>
            <returns>Значение true, если сообщения успешно помечены как непрочитанные; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Account.SetMessagesRead(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Mail.MailMessage})">
            <summary>
            устанавливает статус "Прочитано" для указанных сообщений
            </summary>
            <param name="messages">список сообщений</param>
            <returns>Значение true, если сообщения успешно помечены как прочитанные; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Account.CanSaveMessagesOnServer">
            <summary>
            Показывает, хранит ли учётная запись сообщения в БД или работает в online-режиме с использованием кэша в памяти
            </summary>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Account.GetRootFolders">
            <summary>
            Возвращает список корневых папок учетной записи
            </summary>
            <returns>Список корневых папок</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Account.Inbox">
            <summary>
            Возвращает папку "Входящие"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Account.SentItems">
            <summary>
            Возвращает папку "Отправленные"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Account.Drafts">
            <summary>
            Возвращает папку "Черновики"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Account.DeletedItems">
            <summary>
            Возвращает папку "Удалённые"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Account.DeleteMessages(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Mail.MailMessage},System.Boolean)">
            <summary>
            Удалить сообщения
            </summary>
            <param name="messages">список сообщений для удаления</param>
            <param name="useAccountSettings">Использовать ли настройки учётной записи для удаления. Если false, то сообщения удаляются без возможности восстановления</param>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Account.FindMessage(System.Int32,System.Int32)">
            <summary>
            Возвращает сообщение с укзанным глобальным Id
            </summary>
            <param name="globalId">Глобальный Id сообщения</param>
            <param name="folderId">Идентификатор папки, в которой должно находится сообщение</param>
            <returns>Сообщение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Account.ToString">
            <summary>
            Возвращает строковое представление учетной записи
            </summary>
            <returns>Строковое представление учетной записи</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingReferenceObject">
            <summary>
            Представляет объект справочника "Настройки адресной книги"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingReferenceObject.Class">
            <summary>
            Возвращет описание типа объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingReferenceObject.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingReferenceObject.ReferenceParameter">
            <summary>
            Возвращает параметр "Справочник"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingReferenceObject.AddressParameter">
            <summary>
            Возвращает параметр "Адрес"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingReferenceObject.NameParameter">
            <summary>
            Возвращает параметр "Имя"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingReferenceObject.FieldKeys">
            <summary>
            Уникальные идентификаторы (GUID) параметров справочника "Настройки адресной книги"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingReferenceObject.FieldKeys.Name">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingReferenceObject.FieldKeys.Reference">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Справочник"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingReferenceObject.FieldKeys.AddressParameter">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Адрес"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingReferenceObject.FieldKeys.NameParameter">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Имя"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingsReference">
            <summary>
            Представляет описание справочника "Настройки адресной книги"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingsReference.ReferenceId">
            <summary>
            Представляет уникальный идентификатор (GUID) справочника "Настройки адресной книги"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingsReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Инициализирует новый экземпляр AddressBookSettingsReference для работы с объектами справочника "Настройки адресной книги"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingsReference.Classes">
            <summary>
            Возвращает типы объектов справочника "Настройки адресной книги"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingsTypes">
            <summary>
            Представляет типы объектов справочника "Настройки адресной книги"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingsTypes.AddressBookSettingReferenceObject">
            <summary>
            Возвращает описание типа объектов "Настройка адресной книги"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingsTypes.Keys">
            <summary>
            Уникальные идентификаторы (GUID) типов объектов справочника "Настройки адресной книги"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingsTypes.Keys.AddressBookSettingReferenceObject">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Настройка адресной книги"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingType">
            <summary>
            Представляет описание типа объекта справочника "Настройки адресной книги"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingType.Classes">
            <summary>
            Возвращает типы объектов справочника "Настройки адресной книги"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.AddressBook.AddressBookSettingType.IsAddressBookSettingReferenceObject">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Настройка адресной книги" или порождён от него
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlTokenType">
            <summary>
            types of lexical tokens for html-to-xaml converter
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlParser">
            <summary>
            HtmlParser class accepts a string of possibly badly formed Html, parses it and returns a string
            of well-formed Html that is as close to the original string in content as possible
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlParser.#ctor(System.String)">
            <summary>
            Constructor. Initializes the _htmlLexicalAnalayzer element with the given input string
            </summary>
            <param name="inputString">
            string to parsed into well-formed Html
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlParser.ParseHtml(System.String)">
            <summary>
            Instantiates an HtmlParser element and calls the parsing function on the given input string
            </summary>
            <param name="htmlString">
            Input string of pssibly badly-formed Html to be parsed into well-formed Html
            </param>
            <returns>
            XmlElement rep
            </returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlParser.ParseHtmlContent">
            <summary>
            Parses the stream of html tokens starting from the name of top-level element.
            </summary>
            <returns>XmlElement representing the top-level html element</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlLexicalAnalyzer">
            <summary>
            lexical analyzer class
            recognizes tokens as groups of characters separated by arbitrary amounts of whitespace
            also classifies tokens according to type
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlLexicalAnalyzer.#ctor(System.String)">
            <summary>
            initializes the _inputStringReader member with the string to be read
            also sets initial values for _nextCharacterCode and _nextTokenType
            </summary>
            <param name="inputTextString">
            text string to be parsed for xml content
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlLexicalAnalyzer.GetNextContentToken">
            <summary>
            retrieves next recognizable token from input string 
            and identifies its type
            if no valid token is found, the output parameters are set to null
            if end of stream is reached without matching any token, token type
            paramter is set to EOF
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlLexicalAnalyzer.GetNextTagToken">
            <summary>
            Unconditionally returns a token which is one of: TagEnd, EmptyTagEnd, Name, Atom or EndOfStream
            Does not guarantee token reader advancing.
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlLexicalAnalyzer.GetNextEqualSignToken">
            <summary>
            Unconditionally returns equal sign token. Even if there is no
            real equal sign in the stream, it behaves as if it were there.
            Does not guarantee token reader advancing.
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlLexicalAnalyzer.GetNextAtomToken">
            <summary>
            Unconditionally returns an atomic value for an attribute
            Even if there is no appropriate token it returns Atom value
            Does not guarantee token reader advancing.
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlLexicalAnalyzer.GetNextCharacter">
            <summary>
            Advances a reading position by one character code
            and reads the next availbale character from a stream.
            This character becomes available as NextCharacter property.
            </summary>
            <remarks>
            Throws InvalidOperationException if attempted to be called on EndOfStream
            condition.
            </remarks>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlLexicalAnalyzer.SkipWhiteSpace">
            <summary>
            skips whitespace in the input string
            leaves the first non-whitespace character available in the NextCharacter property
            this may be the end-of-file character, it performs no checking 
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlLexicalAnalyzer.IsGoodForNameStart(System.Char)">
            <summary>
            checks if a character can be used to start a name
            if this check is true then the rest of the name can be read
            </summary>
            <param name="character">
            character value to be checked
            </param>
            <returns>
            true if the character can be the first character in a name
            false otherwise
            </returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlLexicalAnalyzer.IsGoodForName(System.Char)">
            <summary>
            checks if a character can be used as a non-starting character in a name
            uses the IsExtender and IsCombiningCharacter predicates to see
            if a character is an extender or a combining character
            </summary>
            <param name="character">
            character to be checked for validity in a name
            </param>
            <returns>
            true if the character can be a valid part of a name
            </returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlLexicalAnalyzer.IsCombiningCharacter(System.Char)">
            <summary>
            identifies a character as being a combining character, permitted in a name
            TODO: only a placeholder for now but later to be replaced with comparisons against
            the list of combining characters in the XML documentation
            </summary>
            <param name="character">
            character to be checked
            </param>
            <returns>
            true if the character is a combining character, false otherwise
            </returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlLexicalAnalyzer.IsExtender(System.Char)">
            <summary>
            identifies a character as being an extender, permitted in a name
            TODO: only a placeholder for now but later to be replaced with comparisons against
            the list of extenders in the XML documentation
            </summary>
            <param name="character">
            character to be checked
            </param>
            <returns>
            true if the character is an extender, false otherwise
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlLexicalAnalyzer.ReadDynamicContent" -->
        <!-- Badly formed XML comment ignored for member "M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlLexicalAnalyzer.ReadComment" -->
        <!-- Badly formed XML comment ignored for member "M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlLexicalAnalyzer.ReadUnknownDirective" -->
        <!-- Badly formed XML comment ignored for member "M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlLexicalAnalyzer.SkipProcessingDirective" -->
        <member name="T:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlSchema">
            <summary>
            HtmlSchema class
            maintains static information about HTML structure
            can be used by HtmlParser to check conditions under which an element starts or ends, etc.
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlSchema.#cctor">
            <summary>
            static constructor, initializes the ArrayLists
            that hold the elements in various sub-components of the schema
            e.g _htmlEmptyElements, etc.
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlSchema.IsEmptyElement(System.String)">
            <summary>
            returns true when xmlElementName corresponds to empty element 
            </summary>
            <param name="xmlElementName">
            string representing name to test
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlSchema.IsBlockElement(System.String)">
            <summary>
            returns true if xmlElementName represents a block formattinng element.
            It used in an algorithm of transferring inline elements over block elements
            in HtmlParser
            </summary>
            <param name="xmlElementName"></param>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlSchema.IsInlineElement(System.String)">
            <summary>
            returns true if the xmlElementName represents an inline formatting element
            </summary>
            <param name="xmlElementName"></param>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlSchema.IsKnownOpenableElement(System.String)">
            <summary>
            It is a list of known html elements which we
            want to allow to produce bt HTML parser,
            but don'tt want to act as inline, block or no-scope.
            Presence in this list will allow to open
            elements during html parsing, and adding the
            to a tree produced by html parser.
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlSchema.ClosesOnParentElementEnd(System.String)">
            <summary>
            returns true when xmlElementName closes when the outer element closes
            this is true of elements with optional start tags
            </summary>
            <param name="xmlElementName">
            string representing name to test
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlSchema.ClosesOnNextElementStart(System.String,System.String)">
            <summary>
            returns true if the current element closes when the new element, whose name has just been read, starts
            </summary>
            <param name="currentElementName">
            string representing current element name
            </param>
            <param name="elementName"></param>
            string representing name of the next element that will start
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlSchema.IsEntity(System.String)">
            <summary>
            returns true if the string passed as argument is an Html entity name
            </summary>
            <param name="entityName">
            string to be tested for Html entity name 
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlSchema.EntityCharacterValue(System.String)">
            <summary>
            returns the character represented by the entity name string which is passed as an argument, if the string is an entity name
            as specified in _htmlCharacterEntities, returns the character value of 0 otherwise 
            </summary>
            <param name="entityName">
            string representing entity name whose character value is desired
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlSchema.InitializeEmptyElements">
            <summary>
            initializes _htmlEmptyElements with empty elements in HTML 4 spec at
            http://www.w3.org/TR/REC-html40/index/elements.html
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlSchema.InitializeElementsClosingOnParentElementEnd">
            <summary>
            initializes _htmlElementsClosingOnParentElementEnd with the list of HTML 4 elements for which closing tags are optional
            we assume that for any element for which closing tags are optional, the element closes when it's outer element
            (in which it is nested) does
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.HtmlSchema.InitializeHtmlCharacterEntities">
            <summary>
            initializes _htmlCharacterEntities hashtable with the character corresponding to entity names
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.ToXaml(System.String)">
            <summary>
            
            </summary>
            <param name="body">Well-formed Html string</param>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.GetAttribute(System.Xml.XmlElement,System.String)">
            <summary>
            Returns a value for an attribute by its name (ignoring casing)
            </summary>
            <param name="element">
            XmlElement in which we are trying to find the specified attribute
            </param>
            <param name="attributeName">
            String representing the attribute name to be searched for
            </param>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.UnQuote(System.String)">
            <summary>
            Returns string extracted from quotation marks
            </summary>
            <param name="value">
            String representing value enclosed in quotation marks
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.AddBlock(System.Xml.XmlElement,System.Xml.XmlNode,System.Collections.Hashtable,TFlex.DOCs.Model.Mail.Converters.HtmlConverter.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Analyzes the given htmlElement expecting it to be converted
            into some of xaml Block elements and adds the converted block
            to the children collection of xamlParentElement.
            
            Analyzes the given XmlElement htmlElement, recognizes it as some HTML element
            and adds it as a child to a xamlParentElement.
            In some cases several following siblings of the given htmlElement
            will be consumed too (e.g. LIs encountered without wrapping UL/OL, 
            which must be collected together and wrapped into one implicit List element).
            </summary>
            <param name="xamlParentElement">
            Parent xaml element, to which new converted element will be added
            </param>
            <param name="htmlElement">
            Source html element subject to convert to xaml.
            </param>
            <param name="inheritedProperties">
            Properties inherited from an outer context.
            </param>
            <param name="stylesheet"></param>
            <param name="sourceContext"></param>
            <returns>
            Last processed html node. Normally it should be the same htmlElement
            as was passed as a paramater, but in some irregular cases
            it could one of its following siblings.
            The caller must use this node to get to next sibling from it.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.AddSection(System.Xml.XmlElement,System.Xml.XmlElement,System.Collections.Hashtable,TFlex.DOCs.Model.Mail.Converters.HtmlConverter.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})" -->
        <!-- Badly formed XML comment ignored for member "M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.AddParagraph(System.Xml.XmlElement,System.Xml.XmlElement,System.Collections.Hashtable,TFlex.DOCs.Model.Mail.Converters.HtmlConverter.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})" -->
        <!-- Badly formed XML comment ignored for member "M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.AddImplicitParagraph(System.Xml.XmlElement,System.Xml.XmlNode,System.Collections.Hashtable,TFlex.DOCs.Model.Mail.Converters.HtmlConverter.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})" -->
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.AddList(System.Xml.XmlElement,System.Xml.XmlElement,System.Collections.Hashtable,TFlex.DOCs.Model.Mail.Converters.HtmlConverter.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Converts Html ul or ol element into Xaml list element. During conversion if the ul/ol element has any children 
            that are not li elements, they are ignored and not added to the list element
            </summary>
            <param name="xamlParentElement">
            XmlElement representing Xaml parent to which the converted element should be added
            </param>
            <param name="htmlListElement">
            XmlElement representing Html ul/ol element to be converted
            </param>
            <param name="inheritedProperties">
            properties inherited from parent context
            </param>
            <param name="stylesheet"></param>
            <param name="sourceContext"></param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.AddOrphanListItems(System.Xml.XmlElement,System.Xml.XmlElement,System.Collections.Hashtable,TFlex.DOCs.Model.Mail.Converters.HtmlConverter.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            If li items are found without a parent ul/ol element in Html string, creates xamlListElement as their parent and adds
            them to it. If the previously added node to the same xamlParentElement was a List, adds the elements to that list.
            Otherwise, we create a new xamlListElement and add them to it. Elements are added as long as li elements appear sequentially.
            The first non-li or text node stops the addition.
            </summary>
            <param name="xamlParentElement">
            Parent element for the list
            </param>
            <param name="htmlLIElement">
            Start Html li element without parent list
            </param>
            <param name="inheritedProperties">
            Properties inherited from parent context
            </param>
            <returns>
            XmlNode representing the first non-li node in the input after one or more li's have been processed.
            </returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.AddListItem(System.Xml.XmlElement,System.Xml.XmlElement,System.Collections.Hashtable,TFlex.DOCs.Model.Mail.Converters.HtmlConverter.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Converts htmlLIElement into Xaml ListItem element, and appends it to the parent xamlListElement
            </summary>
            <param name="xamlListElement">
            XmlElement representing Xaml List element to which the converted td/th should be added
            </param>
            <param name="htmlLIElement">
            XmlElement representing Html li element to be converted
            </param>
            <param name="inheritedProperties">
            Properties inherited from parent context
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.AddTable(System.Xml.XmlElement,System.Xml.XmlElement,System.Collections.Hashtable,TFlex.DOCs.Model.Mail.Converters.HtmlConverter.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Converts htmlTableElement to a Xaml Table element. Adds tbody elements if they are missing so
            that a resulting Xaml Table element is properly formed.
            </summary>
            <param name="xamlParentElement">
            Parent xaml element to which a converted table must be added.
            </param>
            <param name="htmlTableElement">
            XmlElement reprsenting the Html table element to be converted
            </param>
            <param name="inheritedProperties">
            Hashtable representing properties inherited from parent context. 
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.AddColumnInformation(System.Xml.XmlElement,System.Xml.XmlElement,System.Collections.ArrayList,System.Collections.Hashtable,TFlex.DOCs.Model.Mail.Converters.HtmlConverter.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Processes the information about table columns - COLGROUP and COL html elements.
            </summary>
            <param name="htmlTableElement">
            XmlElement representing a source html table.
            </param>
            <param name="xamlTableElement">
            XmlElement repesenting a resulting xaml table.
            </param>
            <param name="columnStartsAllRows">
            Array of doubles - column start coordinates.
            Can be null, which means that column size information is not available
            and we must use source colgroup/col information.
            In case wneh it's not null, we will ignore source colgroup/col information.
            </param>
            <param name="currentProperties"></param>
            <param name="stylesheet"></param>
            <param name="sourceContext"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.AddTableColumnGroup(System.Xml.XmlElement,System.Xml.XmlElement,System.Collections.Hashtable,TFlex.DOCs.Model.Mail.Converters.HtmlConverter.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})" -->
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.AddTableColumn(System.Xml.XmlElement,System.Xml.XmlElement,System.Collections.Hashtable,TFlex.DOCs.Model.Mail.Converters.HtmlConverter.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Converts htmlColElement into Xaml TableColumn element, and appends it to the parent
            xamlTableColumnGroupElement
            </summary>
            <param name="xamlTableElement"></param>
            <param name="htmlColElement">
            XmlElement representing Html col element to be converted
            </param>
            <param name="inheritedProperties">
            properties inherited from parent context
            </param>
            <param name="stylesheet"></param>
            <param name="sourceContext"></param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.AddTableRowsToTableBody(System.Xml.XmlElement,System.Xml.XmlNode,System.Collections.Hashtable,System.Collections.ArrayList,TFlex.DOCs.Model.Mail.Converters.HtmlConverter.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Adds TableRow elements to xamlTableBodyElement. The rows are converted from Html tr elements that
            may be the children of an Html tbody element or an Html table element with tbody missing
            </summary>
            <param name="xamlTableBodyElement">
            XmlElement representing Xaml TableRowGroup element to which the converted rows should be added
            </param>
            <param name="htmlTRStartNode">
            XmlElement representing the first tr child of the tbody element to be read
            </param>
            <param name="currentProperties">
            Hashtable representing current properties of the tbody element that are generated and applied in the
            AddTable function; to be used as inheritedProperties when adding tr elements
            </param>
            <param name="columnStarts"></param>
            <param name="stylesheet"></param>
            <param name="sourceContext"></param>
            <returns>
            XmlNode representing the current position of the iterator among tr elements
            </returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.AddTableCellsToTableRow(System.Xml.XmlElement,System.Xml.XmlNode,System.Collections.Hashtable,System.Collections.ArrayList,System.Collections.ArrayList,TFlex.DOCs.Model.Mail.Converters.HtmlConverter.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Adds TableCell elements to xamlTableRowElement.
            </summary>
            <param name="xamlTableRowElement">
            XmlElement representing Xaml TableRow element to which the converted cells should be added
            </param>
            <param name="htmlTDStartNode">
            XmlElement representing the child of tr or tbody element from which we should start adding td elements
            </param>
            <param name="currentProperties">
            properties of the current html tr element to which cells are to be added
            </param>
            <returns>
            XmlElement representing the current position of the iterator among the children of the parent Html tbody/tr element
            </returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.AddDataToTableCell(System.Xml.XmlElement,System.Xml.XmlNode,System.Collections.Hashtable,TFlex.DOCs.Model.Mail.Converters.HtmlConverter.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            adds table cell data to xamlTableCellElement
            </summary>
            <param name="xamlTableCellElement">
            XmlElement representing Xaml TableCell element to which the converted data should be added
            </param>
            <param name="htmlDataStartNode">
            XmlElement representing the start element of data to be added to xamlTableCellElement
            </param>
            <param name="currentProperties">
            Current properties for the html td/th element corresponding to xamlTableCellElement
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.AnalyzeTableStructure(System.Xml.XmlElement,TFlex.DOCs.Model.Mail.Converters.HtmlConverter.CssStylesheet)">
            <summary>
            Performs a parsing pass over a table to read information about column width and rowspan attributes. This information
            is used to determine the starting point of each column. 
            </summary>
            <param name="htmlTableElement">
            XmlElement representing Html table whose structure is to be analyzed
            </param>
            <returns>
            ArrayList of type double which contains the function output. If analysis is successful, this ArrayList contains
            all the points which are the starting position of any column in the table, ordered from left to right.
            In case if analisys was impossible we return null.
            </returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.AnalyzeTbodyStructure(System.Xml.XmlElement,System.Collections.ArrayList,System.Collections.ArrayList,System.Double,TFlex.DOCs.Model.Mail.Converters.HtmlConverter.CssStylesheet)">
            <summary>
            Performs a parsing pass over a tbody to read information about column width and rowspan attributes. Information read about width
            attributes is stored in the reference ArrayList parameter columnStarts, which contains a list of all starting
            positions of all columns in the table, ordered from left to right. Row spans are taken into consideration when 
            computing column starts
            </summary>
            <param name="htmlTbodyElement">
            XmlElement representing Html tbody whose structure is to be analyzed
            </param>
            <param name="columnStarts">
            ArrayList of type double which contains the function output. If analysis fails, this parameter is set to null
            </param>
            <param name="tableWidth">
            Current width of the table. This is used to determine if a new column when added to the end of table should
            come after the last column in the table or is actually splitting the last column in two. If it is only splitting
            the last column it should inherit row span for that column
            </param>
            <returns>
            Calculated width of a tbody.
            In case of non-analizable column width structure return 0;
            </returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.AnalyzeTRStructure(System.Xml.XmlElement,System.Collections.ArrayList,System.Collections.ArrayList,System.Double,TFlex.DOCs.Model.Mail.Converters.HtmlConverter.CssStylesheet)">
            <summary>
            Performs a parsing pass over a tr element to read information about column width and rowspan attributes.  
            </summary>
            <param name="htmlTRElement">
            XmlElement representing Html tr element whose structure is to be analyzed
            </param>
            <param name="columnStarts">
            ArrayList of type double which contains the function output. If analysis is successful, this ArrayList contains
            all the points which are the starting position of any column in the tr, ordered from left to right. If analysis fails,
            the ArrayList is set to null
            </param>
            <param name="activeRowSpans">
            ArrayList representing all columns currently spanned by an earlier row span attribute. These columns should
            not be used for data in this row. The ArrayList actually contains notation for all columns in the table, if the
            active row span is set to 0 that column is not presently spanned but if it is > 0 the column is presently spanned
            </param>
            <param name="tableWidth">
            Double value representing the current width of the table.
            Return 0 if analisys was insuccessful.
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.GetRowSpan(System.Xml.XmlElement)">
            <summary>
            Gets row span attribute from htmlTDElement. Returns an integer representing the value of the rowspan attribute.
            Default value if attribute is not specified or if it is invalid is 1
            </summary>
            <param name="htmlTDElement">
            Html td element to be searched for rowspan attribute
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.GetNextColumnIndex(System.Int32,System.Double,System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            Gets index at which a column should be inseerted into the columnStarts ArrayList. This is
            decided by the value columnStart. The columnStarts ArrayList is ordered in ascending order.
            Returns an integer representing the index at which the column should be inserted
            </summary>
            <param name="columnStarts">
            Array list representing starting coordinates of all columns in the table
            </param>
            <param name="columnStart">
            Starting coordinate of column we wish to insert into columnStart
            </param>
            <param name="columnIndex">
            Int representing the current column index. This acts as a clue while finding the insertion index.
            If the value of columnStarts at columnIndex is the same as columnStart, then this position alrady exists
            in the array and we can jsut return columnIndex.
            </param>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.ClearActiveRowSpans(System.Collections.ArrayList)">
            <summary>
            Used for clearing activeRowSpans array in the beginning/end of each tbody
            </summary>
            <param name="activeRowSpans">
            ArrayList representing currently active row spans
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.InitializeActiveRowSpans(System.Collections.ArrayList,System.Int32)">
            <summary>
            Used for initializing activeRowSpans array in the before adding rows to tbody element
            </summary>
            <param name="activeRowSpans">
            ArrayList representing currently active row spans
            </param>
            <param name="count">
            Size to be give to array list
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.GetNextColumnStart(System.Xml.XmlElement,System.Double)">
            <summary>
            Calculates width of next TD element based on starting position of current element and it's width, which
            is calculated byt he function
            </summary>
            <param name="htmlTDElement">
            XmlElement representing Html td element whose width is to be read
            </param>
            <param name="columnStart">
            Starting position of current column
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.CalculateColumnSpan(System.Int32,System.Double,System.Collections.ArrayList)">
            <summary>
            Calculates column span based the column width and the widths of all other columns. Returns an integer representing 
            the column span
            </summary>
            <param name="columnIndex">
            Index of the current column
            </param>
            <param name="columnWidth">
            Width of the current column
            </param>
            <param name="columnStarts">
            ArrayList repsenting starting coordinates of all columns
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.VerifyColumnStartsAscendingOrder(System.Collections.ArrayList)">
            <summary>
            Verifies that values in columnStart, which represent starting coordinates of all columns, are arranged
            in ascending order
            </summary>
            <param name="columnStarts">
            ArrayList representing starting coordinates of all columns
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.ApplyLocalProperties(System.Xml.XmlElement,System.Collections.Hashtable,System.Boolean)">
            <summary>
            Analyzes local properties of Html element, converts them into Xaml equivalents, and applies them to xamlElement
            </summary>
            <param name="xamlElement">
            XmlElement representing Xaml element to which properties are to be applied
            </param>
            <param name="localProperties">
            Hashtable representing local properties of Html element that is converted into xamlElement
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.GetElementProperties(System.Xml.XmlElement,System.Collections.Hashtable,System.Collections.Hashtable@,TFlex.DOCs.Model.Mail.Converters.HtmlConverter.CssStylesheet,System.Collections.Generic.List{System.Xml.XmlElement})">
            <summary>
            Analyzes the tag of the htmlElement and infers its associated formatted properties.
            After that parses style attribute and adds all inline css styles.
            The resulting style attributes are collected in output parameter localProperties.
            </summary>
            <param name="htmlElement">
            </param>
            <param name="inheritedProperties">
            set of properties inherited from ancestor elements. Currently not used in the code. Reserved for the future development.
            </param>
            <param name="localProperties">
            returns all formatting properties defined by this element - implied by its tag, its attributes, or its css inline style
            </param>
            <param name="stylesheet"></param>
            <param name="sourceContext"></param>
            <returns>
            returns a combination of previous context with local set of properties.
            This value is not used in the current code - inntended for the future development.
            </returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.GetCssAttribute(System.String,System.String)">
            <summary>
            Extracts a value of css attribute from css style definition.
            </summary>
            <param name="cssStyle">
            Source csll style definition
            </param>
            <param name="attributeName">
            A name of css attribute to extract
            </param>
            <returns>
            A string rrepresentation of an attribute value if found;
            null if there is no such attribute in a given string.
            </returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.TryGetLengthValue(System.String,System.Double@)">
            <summary>
            Converts a length value from string representation to a double.
            </summary>
            <param name="lengthAsString">
            Source string value of a length.
            </param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.ApplyPropertiesToTableCellElement(System.Xml.XmlElement,System.Xml.XmlElement)">
            <summary>
            Applies properties to xamlTableCellElement based on the html td element it is converted from.
            </summary>
            <param name="htmlChildNode">
            Html td/th element to be converted to xaml
            </param>
            <param name="xamlTableCellElement">
            XmlElement representing Xaml element for which properties are to be processed
            </param>
            <remarks>
            TODO: Use the processed properties for htmlChildNode instead of using the node itself 
            </remarks>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.WriteFlowDocument(System.Xml.XmlTextReader,System.Xml.XmlTextWriter,System.Boolean)">
            <summary>
            Processes a root level element of XAML (normally it's FlowDocument element).
            </summary>
            <param name="xamlReader">
            XmlTextReader for a source xaml.
            </param>
            <param name="htmlWriter">
            XmlTextWriter producing resulting html
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.WriteFormattingProperties(System.Xml.XmlTextReader,System.Xml.XmlTextWriter,System.Text.StringBuilder)">
            <summary>
            Reads attributes of the current xaml element and converts
            them into appropriate html attributes or css styles.
            </summary>
            <param name="xamlReader">
            XmlTextReader which is expected to be at XmlNodeType.Element
            (opening element tag) position.
            The reader will remain at the same level after function complete.
            </param>
            <param name="htmlWriter">
            XmlTextWriter for output html, which is expected to be in
            after WriteStartElement state.
            </param>
            <param name="inlineStyle">
            String builder for collecting css properties for inline STYLE attribute.
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.WriteElementContent(System.Xml.XmlTextReader,System.Xml.XmlTextWriter,System.Text.StringBuilder)">
            <summary>
            Reads a content of current xaml element, converts it
            </summary>
            <param name="xamlReader">
            XmlTextReader which is expected to be at XmlNodeType.Element
            (opening element tag) position.
            </param>
            <param name="htmlWriter">
            May be null, in which case we are skipping the xaml element;
            witout producing any output to html.
            </param>
            <param name="inlineStyle">
            StringBuilder used for collecting css properties for inline STYLE attribute.
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.AddComplexProperty(System.Xml.XmlTextReader,System.Text.StringBuilder)">
            <summary>
            Conberts an element notation of complex property into
            </summary>
            <param name="xamlReader">
            On entry this XmlTextReader must be on Element start tag;
            on exit - on EndElement tag.
            </param>
            <param name="inlineStyle">
            StringBuilder containing a value for STYLE attribute.
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.WriteElement(System.Xml.XmlTextReader,System.Xml.XmlTextWriter,System.Text.StringBuilder)">
            <summary>
            Converts a xaml element into an appropriate html element.
            </summary>
            <param name="xamlReader">
            On entry this XmlTextReader must be on Element start tag;
            on exit - on EndElement tag.
            </param>
            <param name="htmlWriter">
            May be null, in which case we are skipping xaml content
            without producing any html output
            </param>
            <param name="inlineStyle">
            StringBuilder used for collecting css properties for inline STYLE attributes on every level.
            </param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Converters.HtmlConverter.ReadNextToken(System.Xml.XmlReader)">
            <summary>
            Reads several items from xamlReader skipping all non-significant stuff.
            </summary>
            <param name="xamlReader">
            XmlTextReader from tokens are being read.
            </param>
            <returns>
            True if new token is available; false if end of stream reached.
            </returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailCategoryCollection.#ctor(TFlex.DOCs.Model.Mail.MailItem,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Mail.MailCategory})">
            <summary>
            Создает новую коллекцию категорий на основании указанной коллекции, упорядоченную по ID
            </summary>
            <param name="collection">Коллекция папок</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailCategoryCollection.#ctor(TFlex.DOCs.Model.Mail.MailItem,System.Collections.Generic.IDictionary{System.Int32,TFlex.DOCs.Model.Mail.MailCategory})">
            <summary>
            Создает новую коллекцию категорий на основании указанной коллекции, упорядоченную по ключу указанной коллекции
            </summary>
            <param name="collection">Коллекция папок</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailAccessInfo.UserObjectId">
            <summary>
            Идентификатор объекта спраовчника Группы и пользователи, для которого настроен доступ. UserObjectId = 0, если настроен доступ для "Все пользователи"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.DOCsAccount">
            <summary>
            Учетная запись для работы с почтой и заданиями DOCs
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.DOCsAccount.Instance">
            <summary>
            Возвращает экземпляр учетной записи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.DOCsAccount.TaskAccess">
            <summary>
            Возращает доступ на задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.DOCsAccount.Guid">
            <summary>
            Возвращает Guid учетной записи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.DOCsAccount.Name">
            <summary>
            Возвращает наименование учетной записи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.DOCsAccount.Outbox">
            <summary>
            Возвращает папку "Исходящие"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.DOCsAccount.TaskFolders">
            <summary>
            Возвращает коллекцию папок учетной записи, содержищих задания
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.DOCsAccount.GetUnreadTaskCount">
            <summary>
            Возвращает количество непрочитанных заданий
            </summary>
            <returns>Количество непрочитанных заданий</returns>
        </member>
        <member name="E:TFlex.DOCs.Model.Mail.DOCsAccount.UnreadTaskCountChanged">
            <summary>
            Событие, возникающее при изменении количества непрочитанных заданий
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.Mail.DOCsAccount.TaskAccepted">
            <summary>
            Событие, возникающее при успешном принятии задания
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.Mail.DOCsAccount.TaskCompleted">
            <summary>
            Событие, возникающее при успешном завершении задания
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.Mail.DOCsAccount.TaskCanceled">
            <summary>
            Событие, возникающее при успешном аннулировании задания
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.Mail.DOCsAccount.TaskSuspended">
            <summary>
            Событие, возникающее, если задание было успешно приостановлено
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.Mail.DOCsAccount.TaskRestored">
            <summary>
            Событие, возникающее, если задание было успешно возобновлено
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.Mail.DOCsAccount.TaskRejected">
            <summary>
            Событие, возникающее, если задание было успешно отклонено
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.Mail.DOCsAccount.TaskSent">
            <summary>
            Событие, возникающее при успешной отправке задания
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.DOCsAccount.GetTasks(System.Int32,System.Int32)">
            <summary>
            Возвращает список заданий
            </summary>
            <param name="count">Максимальное количество загружаемых заданий</param>
            <param name="startIndex">Индекс в коллекции заданий, с которого следует начинать загрузку</param>
            <returns>Список заданий</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.DOCsAccount.GetUnreadTasks">
            <summary>
            Возвращает список непрочитанных заданий
            </summary>
            <returns>Список непрочитанных заданий</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.DOCsAccount.GetObjectMessages(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает список сообщений, связанных с указанным объектом справочника
            </summary>
            <param name="object">Объект справочника</param>
            <returns>Список сообщений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.DOCsAccount.GetObjectTasks(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает список заданий, связанных с указанным объектом справочника
            </summary>
            <param name="object">Объект справочника</param>
            <returns>Список заданий</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.DOCsAccount.GetObjectItems(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает список всех почтовых элементов, связанных с указанным объектом справочника
            </summary>
            <param name="object">Объект справочника</param>
            <returns>Список почтовых элементов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.DOCsAccount.GetSmtpServerSettings(TFlex.DOCs.Model.References.Users.User)">
            <summary>
            Возвращает настройки SMTP сервера для указанного пользователя (или для текущего пользователя, если пользователь не указан)
            </summary>
            <param name="user">Пользователь</param>
            <returns>Настройки SMTP сервера</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.EMailAddress">
            <summary>
            E-mail адрес
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.EMailAddress.#ctor(System.String)">
            <summary>
            Создает новый экземпляр класса, используя указанный адрес
            </summary>
            <param name="address">Строка, содержащая адрес электронной почты</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.EMailAddress.#ctor(System.String,System.String)">
            <summary>
            Создает новый экземпляр класса, используя указанные адрес и отображаемое имя
            </summary>
            <param name="address">Строка, содержащая адрес электронной почты</param>
            <param name="displayName">Отображаемое имя</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.EMailAddress.#ctor(System.Net.Mail.MailAddress)">
            <summary>
            Создает новый экземпляр класса, используя указанный адрес
            </summary>
            <param name="address">Адрес электронной почты</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.EMailAddress.Name">
            <summary>
            Возвращает наименование адреса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.EMailAddress.Address">
            <summary>
            Возвращает адрес в строковом формате
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.EMailAddress.NetMailAddress">
            <summary>
            Возвращает адрес в формате <see cref="T:System.Net.Mail.MailAddress"/>
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.EmailServerSettings.SmtpSettings.#ctor">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.EmailServerSettings.SmtpSettings.ServerName">
            <summary>
            Возвращает или задает имя сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.EmailServerSettings.SmtpSettings.Login">
            <summary>
            Возвращает или задает логин для подключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.EmailServerSettings.SmtpSettings.Password">
            <summary>
            Возвращает или задает пароль для подключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.EmailServerSettings.SmtpSettings.UseSSL">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли использовать безопасное соединение (SSL)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.EmailServerSettings.SmtpSettings.Port">
            <summary>
            Возвращает или задает порт
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.EmailServerSettings.SmtpSettings.IsEmpty">
            <summary>
            Возвращает значение, указывающее, являются ли настройки незаполненными
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.FileAttachment">
            <summary>
            Вложенный файл
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.FileAttachment.#ctor(System.String)">
            <summary>
            Создает новый вложенный файл на основании пути к файлу
            </summary>
            <param name="filePath">Путь к файлу</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.FileAttachment.#ctor(System.String,System.IO.Stream)">
            <summary>
            Создает новый вложенный файл на основании потока
            </summary>
            <param name="name">Наименование вложения</param>
            <param name="stream">Поток, содержащий данные для записи в файл</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.FileAttachment.#ctor(System.String,System.Byte[])">
            <summary>
            Создает новый вложенный файл на основании массива байтов
            </summary>
            <param name="name">Наименование вложения</param>
            <param name="bytes">Массив байтов, содержащий данные для записи в файл</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.FileAttachment.Dispose">
            <summary>
            Освобождает используемые ресурсы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.FileAttachment.IsFile">
            <summary>
            Возвращает значение, указывающее, является ли вложение файлом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.FileAttachment.Name">
            <summary>
            Возвращает наименование вложения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.FileAttachment.Size">
            <summary>
            Возвращает размер вложенного файла
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.FileAttachment.FilePath">
            <summary>
            Возвращает путь к вложенному файлу
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.FileAttachment.DownloadFile">
            <summary>
            Загружает вложенный файл
            </summary>
            <returns>Значение true, если файл успешно загружен, в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.FileAttachment.DeleteFile">
            <summary>
            Удаляет вложенный файл
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.FileAttachment.SetFilePath(System.Boolean)">
            <summary>
            
            </summary>
            <param name="useExistingFile">показывает, нужно ли при установки пути использовать уже существующие файлы или подбирать новое имя</param>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.HtmlImageAttachment">
            <summary>
            Вложенное изображение
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.HtmlImageAttachment.#ctor(System.String,System.Byte[])">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="name">Наименование вложения</param>
            <param name="bytes">Массив байтов, содержащий изображение</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.HtmlImageAttachment.Equals(System.String,System.Byte[],System.Boolean)">
            <summary>
            Возвращает значение, указывающее, равно ли текущее изображение указанному
            </summary>
            <param name="fileName">Имя файла изображения для сравнения</param>
            <param name="binaryData">Массив байт, содержащий изображение для сравнения</param>
            <param name="ignoreFileName">Значение true, если требуется игнорировать имя файла при сравнении; в противном случае - значение false</param>
            <returns>Значение true, если текущее изображение равно указанному; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ImapAccount.ImapPasswordAction">
            <summary>
            Позволяет задать пароль для imap сервера, если задан флаг "Всегда запрашивать пароль"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ImapAccount.SmtpPasswordAction">
            <summary>
            Позволяет задать пароль для smtp сервера, если задан флаг "Всегда запрашивать пароль" и включен режим проверки подлинности
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.CheckImapConnection(System.String,System.Int32,System.Boolean,System.String,System.String)">
            <summary>
            Проверяет, доступно ли подключение к imap-серверу с заданными параметрами
            </summary>
            <param name="serverName">адрес почтового сервера</param>
            <param name="port">порт</param>
            <param name="useSsl">использовать ssl</param>
            <param name="login">логин</param>
            <param name="password">пароль</param>
            <returns>true, если подключение доступно</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.CheckConnection">
            <summary>
            Позоляет узнать, доступно ли соединение с imap-сервером
            </summary>
            <returns>Описание ошибки, возникшей в процессе проверки соединения</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ImapAccount.IsImapSessionPasswordEntered">
            <summary>
            Показывает, введён ли пароль imap-сервера для текущей сессии, если это было необходимо
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ImapAccount.IsSmtpSessionPasswordEntered">
            <summary>
            Показывает, введён ли пароль smtp-сервера для текущей сессии, если это было необходимо
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.ChangeImapPassword(System.String,System.Boolean)">
            <summary>
            Изменяет пароль для imap-сервера, с возможностью сохранения
            </summary>
            <param name="password">пароль</param>
            <param name="save">сохранять ли пароль</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.ChangeSmtpSessionPassword(System.String,System.Boolean)">
            <summary>
            Изменяет пароль сессии для smtp-сервера, с возможностью сохранения
            </summary>
            <param name="password">пароль</param>
            <param name="save">сохранять ли пароль</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.ChangeImapSessionPassword(System.String,System.Boolean)">
            <summary>
            Изменяет пароль сессии для imap-сервера, с возможностью сохранения
            </summary>
            <param name="password">пароль</param>
            <param name="save">сохранять ли пароль</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.GetServerFolders">
            <summary>
            Возвращает названия папок imap-сервера
            </summary>
            <returns>названия папок</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.GetFolderSeparator">
            <summary>
            Возвращает разделитель имен папок imap-сервера
            </summary>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.Reconnect">
            <summary>
            Устанавливает заново подлкючение к серверам
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.GetLogFilePath">
            <summary>
            Возвращает полный путь к log файлу
            </summary>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.CreateRootFolder">
            <summary>
            Создает корневую папку
            </summary>
            <returns>созданная папка</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.CheckServerFoldersAsync(System.ComponentModel.ISynchronizeInvoke)">
            <summary>
            Синхронизирует серверный и клиентский набор папок(асинхронно)
            </summary>
            <param name="synchronizationObject">объект синхронизации при возникновении исключительной ситуации</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.CheckServerFolders">
            <summary>
            Синхронизирует серверный и клиентский набор папок
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.CheckFoldersMessagesAsync(System.ComponentModel.ISynchronizeInvoke)">
            <summary>
            Синхронизирует сообщения всех папок 
            </summary>
            <param name="synchronizationObject">объект синхронизации при возникновении исключительной ситуации</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.CheckFoldersMessages">
            <summary>
            Синхронизирует сообщения всех папок 
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.CheckFolderMessagesAsync(TFlex.DOCs.Model.Mail.MailFolder,System.Threading.CancellationToken,System.ComponentModel.ISynchronizeInvoke)">
            <summary>
            Синхронизирует сообщения указанной папки(асинхронно)
            </summary>
            <param name="folder">выбранная папка</param>
            <param name="token">условие отмены операции</param>
            <param name="synchronizationObject">объект синхронизации при возникновении исключительной ситуации</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.CheckFolderMessages(TFlex.DOCs.Model.Mail.MailFolder,System.Threading.CancellationToken)">
            <summary>
            Синхронизирует сообщения указанной папки
            </summary>
            <param name="folder">выбранная папка</param>
            <param name="token">условие отмены операции</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ImapAccount.SaveOnServer">
            <summary>
            Сохранять почту на сервере приложений
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ImapAccount.ParentId">
            <summary>
            Возращает идентификатор родительской учётной записи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.GetRootFolders">
            <summary>
            Возвращает список корневых папок
            </summary>
            <returns>список корневых папок</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ImapAccount.IsModified">
            <summary>
            Возвращает, была ли изменена учётная запись
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ImapAccount.Smtp">
            <summary>
            Возращает настройки smtp-сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ImapAccount.Imap">
            <summary>
            Возращает настройки imap-сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ImapAccount.Email">
            <summary>
            Возвращает адрес электронной почты
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ImapAccount.UserName">
            <summary>
            Возвращает или устанавливает имя пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ImapAccount.InboxFolderName">
            <summary>
            Возвращает или устанавливает название папки "Входящие"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ImapAccount.SentFolderName">
            <summary>
            Возвращает или устанавливает название папки "Отправленные"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ImapAccount.DeletedFolderName">
            <summary>
            Возвращает или устанавливает название папки "Удалённые"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ImapAccount.DraftsFolderName">
            <summary>
            Возвращает или устанавливает название папки "Черновики"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ImapAccount.Name">
            <summary>
            Возращает название
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.SetName(System.String)">
            <summary>
            Устанавливает наименование 
            </summary>
            <param name="name">наименование</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.Delete">
            <summary>
            Удаляет учётную запись
            </summary>
            <returns>true, в случае успеха</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.SendTestMessage">
            <summary>
            Отправляет тестовое сообщение
            </summary>
            <returns>true, если сообщение было успешно отправлено</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.SendMessagesAsync(System.ComponentModel.ISynchronizeInvoke)">
            <summary>
            Отправляет сообщения из папки "Исходящие"
            </summary>
            <param name="synchronizationObject">объект синхронизации при возникновении исключительной ситуации</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.SendMessages">
            <summary>
            Отправляет сообщения из папки "Исходящие"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ImapAccount.Save">
            <summary>
            Сохраняет изменения
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.Smtp">
            <summary>
            Описывает настройки smtp-сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Smtp.SessionPassword">
            <summary>
            Возвращает или задает пароль для подключения на время работы ДОКс, если установлен флаг "Всегда спрашивать пароль"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Smtp.AskPassword">
            <summary>
            Возвращает или задает значение, указывающее, всегда ли спрашивать пароль при отправке сообщения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Smtp.ServerName">
            <summary>
            Возвращает или задает имя сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Smtp.Login">
            <summary>
            Возвращает или задает логин для подключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Smtp.Password">
            <summary>
            Возвращает или задает пароль для подключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Smtp.UseSSL">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли использовать безопасное соединение (SSL)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Smtp.UseAuthentication">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли проверка подлинности
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Smtp.CopyToSent">
            <summary>
            Взвращает или задает необходимость копирования отправленного письма в папку "Отправленные"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Smtp.Port">
            <summary>
            Возвращает или задает порт
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Smtp.IsEmpty">
            <summary>
            Возвращает значение, указывающее, являются ли настройки незаполненными
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.IMap">
            <summary>
            Описывает настройки smtp-сервера
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.IMap.#ctor(TFlex.DOCs.Data.Mail.IMapSettings)">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.IMap.ServerName">
            <summary>
            Возвращает или задает имя сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.IMap.Login">
            <summary>
            Возвращает или задает логин для подключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.IMap.SessionPassword">
            <summary>
            Возвращает или задает пароль для подключения на время работы ДОКс, если установлен флаг "Всегда спрашивать пароль"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.IMap.Password">
            <summary>
            Возвращает или задает пароль для подключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.IMap.UseSSL">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли использовать безопасное соединение (SSL)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.IMap.MoveToDeleted">
            <summary>
            Возвращает или задает значение, указывающее, перемещать ли сообщение в указанную папку при удалении или удалять напрямую с сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.IMap.Port">
            <summary>
            Возвращает или задает порт
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.IMap.IsEmpty">
            <summary>
            Возвращает значение, указывающее, являются ли настройки незаполненными
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.IMap.AskPassword">
            <summary>
            Возвращает или задает значение, указывающее, всегда ли спрашивать пароль при входе в систему
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailAccessType">
            <summary>
            Тип доступа для учётной записи
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailAccessType.Messages">
            <summary>
            Доступ на сообщения для учётной записи
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailAccessType.Tasks">
            <summary>
            Доступ на задания встроенной учётной записи
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailFolderCollection">
            <summary>
            Коллекция папок, содержащих сообщения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailFolderCollection.#ctor(TFlex.DOCs.Model.ServerConnection,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Mail.MailFolder})">
            <summary>
            Создает новую коллекцию папок на основании указанной коллекции, упорядоченную по ID
            </summary>
            <param name="collection">Коллекция папок</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailFolderCollection.#ctor(TFlex.DOCs.Model.ServerConnection,System.Collections.Generic.IDictionary{System.Int32,TFlex.DOCs.Model.Mail.MailFolder})">
            <summary>
            Создает новую коллекцию папок на основании указанной коллекции, упорядоченную по ключу указанной коллекции
            </summary>
            <param name="collection">Коллекция папок</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailFolderCollection.Find(TFlex.DOCs.Model.Mail.MailFolderType)">
            <summary>
            Возвращает папку указанного типа
            </summary>
            <param name="type">Тип папки</param>
            <returns>Папка</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailFolderType">
            <summary>
            Перечисление возможных типов папок, содержащих сообщения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailFolderType.User">
            <summary>
            Пользовательская
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailFolderType.Inbox">
            <summary>
            Входящие
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailFolderType.SentItems">
            <summary>
            Отправленные
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailFolderType.DeletedItems">
            <summary>
            Удаленные
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailFolderType.Drafts">
            <summary>
            Черновики
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailFolderType.Outbox">
            <summary>
            Исходящие
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailItem">
            <summary>
            Почтовый элемент
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailItem.Dispose">
            <summary>
            Освобождает ресурсы, используемые почтовым элементом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.RealSender">
            <summary>
            Реальный отправитель почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.Account">
            <summary>
            Возвращает учетную запись, которой принадлежит почтовый элемент
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.IsMessage">
            <summary>
            Возвращает значение, указывающее, является ли почтовый элемент сообщением
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.IsTask">
            <summary>
            Возвращает значение, указывающее, является ли почтовый элемент заданием
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.Id">
            <summary>
            Возвращает Id почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.GlobalId">
            <summary>
            Возвращает глобальный Id почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.Guid">
            <summary>
            Возвращает Guid почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.From">
            <summary>
            Возвращает отправителя почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.To">
            <summary>
            Возвращает коллекцию получателей почтового элемента
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailItem.GetToEmails">
            <summary>
            Возращает список внешних адресов для поля Кому, который будут использованы для отправки элемента на внешнюю почту
            </summary>
            <returns>список адресов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailItem.GetCopyToEmails">
            <summary>
            Возращает список внешних адресов для поля Копия, который будут использованы для отправки элемента на внешнюю почту
            </summary>
            <returns>список адресов</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.SentDate">
            <summary>
            Возвращает дату и время отправки почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.ReceivedDate">
            <summary>
            Возвращает дату и время получения почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.ReadDate">
            <summary>
            Возвращает дату и время прочтения почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.Subject">
            <summary>
            Возвращает заголовок почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.BodyType">
            <summary>
            Возвращает формат текста почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.Body">
            <summary>
            Возвращает текст почтового элемента
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailItem.SetBody(System.String,TFlex.DOCs.Model.Mail.MailBodyType)">
            <summary>
            Задает текст почтового элемента
            </summary>
            <param name="body">Текст почтового элемента</param>
            <param name="type">Формат текста</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.Categories">
            <summary>
            Возращает коллекцию категорий почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.Attachments">
            <summary>
            Возвращает коллекцию вложений почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.AttachmentCount">
            <summary>
            Возвращает количество вложений почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.IsModified">
            <summary>
            Возвращает значение, указывающее, был ли почтовый элемент модифицирован
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.IsSent">
            <summary>
            Возвращает значение, указывающее, был ли почтовый элемент отправлен
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.IsRead">
            <summary>
            Возвращает значение, указывающее, был ли почтовый элемент прочитан
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.IsDraft">
            <summary>
            Возвращает значение, указывающее, является ли почтовый элемент черновиком
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItem.IsDeleted">
            <summary>
            Возвращает значение, указывающее, является ли почтовый элемент удаленным
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailItem.Reply(System.Boolean)">
            <summary>
            Создает для почтового элемента ответное сообщение
            </summary>
            <param name="copyBody">Значение true, если требуется скопировать текст текущего элемента; в противном случае - значение false</param>
            <returns>Сообщение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailItem.ReplyAll(System.Boolean)">
            <summary>
            Создает для почтового элемента ответное сообщение всем пользователям
            </summary>
            <param name="copyBody">Значение true, если требуется скопировать текст текущего элемента; в противном случае - значение false</param>
            <returns>Сообщение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailItem.Forward(System.Boolean)">
            <summary>
            Создает сообщение для пересылки почтового элемента
            </summary>
            <param name="copyBody">Значение true, если требуется скопировать текст текущего элемента; в противном случае - значение false</param>
            <returns>Сообщение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailItem.ToString">
            <summary>
            Возвращает строковое представление почтового элемента
            </summary>
            <returns>Строковое представление почтового элемента</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailItem.TryGetValue(TFlex.DOCs.Model.Mail.MailField,System.Object@)">
            <summary>
            Получает значение указанного поля почтового элемента
            </summary>
            <param name="field">Поле почтового элемента</param>
            <param name="value">Значение указанного поля</param>
            <returns>Значение true, если удалось получить значение; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailItem.TryGetStringValue(TFlex.DOCs.Model.Mail.MailField,System.String@)">
            <summary>
            Получает строковое значение указанного поля почтового элемента
            </summary>
            <param name="field">Поле почтового элемента</param>
            <param name="value">Строковое значение указанного поля</param>
            <returns>Значение true, если удалось получить значение; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailItem.Fields">
            <summary>
            Поля почтового элемента
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailItem.Fields.Guid">
            <summary>
            Возвращает поле "Guid"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailItem.Fields.Owner">
            <summary>
            Возвращает поле "Владелец"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailItem.Fields.Category">
            <summary>
            Возвращает поле "Категория"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailItem.Fields.From">
            <summary>
            Возвращает поле "От"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailItem.Fields.SentDate">
            <summary>
            Возвращает поле "Дата отправки" 
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailItem.Fields.ReceivedDate">
            <summary>
            Возвращает поле "Дата получения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailItem.Fields.ReadDate">
            <summary>
            Возвращает поле "Дата прочтения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailItem.Fields.Subject">
            <summary>
            Возвращает поле "Заголовок"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailItem.Fields.HasAttachments">
            <summary>
            Возвращает поле "Имеет вложения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailItem.Fields.To">
            <summary>
            Возвращает поле "Кому"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailBodyType">
            <summary>
            Перечисление возможных форматов текста почтового элемента
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailBodyType.Text">
            <summary>
            Простой текст
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailBodyType.Html">
            <summary>
            Формат HTML
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailBodyType.Rtf">
            <summary>
            Формат RTF
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailItemAttachment">
            <summary>
            Вложенный почтовый элемент
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailItemAttachment.#ctor(TFlex.DOCs.Model.Mail.MailItem)">
            <summary>
            Создает новый вложенный почтовый элемент
            </summary>
            <param name="item">Почтовый элемент</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItemAttachment.Item">
            <summary>
            Возвращает вложенный почтовый элемент
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItemAttachment.Name">
            <summary>
            Возвращает наименование вложения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItemAttachment.IsMessage">
            <summary>
            Возвращает значение, указывающее, является ли вложение сообщением
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItemAttachment.IsTask">
            <summary>
            Возвращает значение, указывающее, является ли вложение заданием
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.GetMailFieldValueDelegate">
            <summary>
            Делегат, представляющий метод для получения значения поля почтового элемента
            </summary>
            <param name="item">Почтовый элемент</param>
            <param name="value">Получаемое значение поля</param>
            <returns>Значение true, если значение поля получено удачно; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.GetMailFieldStringValueDelegate">
            <summary>
            Делегат, представляющий метод для получения строкового значения поля почтового элемента
            </summary>
            <param name="item">Почтовый элемент</param>
            <param name="value">Получаемое строковое значение поля</param>
            <returns>Значение true, если значение поля получено удачно; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailField">
            <summary>
            Поле почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailField.SupportsTasks">
            <summary>
            Возвращает значение, указывающее, поддерживается ли поле заданиями
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailField.SupportsMessages">
            <summary>
            Возвращает значение, указывающее, поддерживается ли поле сообщениями
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailField.Name">
            <summary>
            Возвращает имя поля
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailField.Title">
            <summary>
            Возвращает заголовок поля
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailField.Nullable">
            <summary>
            Возвращает значение, указывающее, поддерживает ли поле значение NULL
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailField.Type">
            <summary>
            Возвращает тип поля
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailField.TryGetValue(TFlex.DOCs.Model.Mail.MailItem,System.Object@)">
            <summary>
            Возвращает значение данного поля для указанного почтового элемента
            </summary>
            <param name="item">Почтовый элемент</param>
            <param name="value">Значение поля</param>
            <returns>Значение true, если значение поля успешно получено; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailField.TryGetStringValue(TFlex.DOCs.Model.Mail.MailItem,System.String@)">
            <summary>
            Возвращает строковое значение данного поля для указанного почтового элемента
            </summary>
            <param name="item">Почтовый элемент</param>
            <param name="value">Значение поля</param>
            <returns>Значение true, если значение поля успешно получено; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailField.GetComparisonOperators">
            <summary>
            Возвращает список операторов сравнения, доступных для данного поля
            </summary>
            <returns>Список операторов сравнения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailField.ConvertToString(System.Object)">
            <summary>
            Преобразует значение поля в строку
            </summary>
            <param name="value">Значение поля</param>
            <returns>Строковое представление значения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailField.Parse(TFlex.DOCs.Model.ServerConnection,System.String,System.IFormatProvider)">
            <summary>
            Преобразует строку в значение, соответствующее типу данных поля
            </summary>
            <param name="str">Исходная строка</param>
            <returns>Значение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailField.ToString">
            <summary>
            Возвращает строковое представление поля
            </summary>
            <returns>Строковое представление поля</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:TFlex.DOCs.Model.Mail.FromMailField" -->
        <!-- Badly formed XML comment ignored for member "T:TFlex.DOCs.Model.Mail.OwnerMailField" -->
        <!-- Badly formed XML comment ignored for member "T:TFlex.DOCs.Model.Mail.CategoryMailField" -->
        <member name="T:TFlex.DOCs.Model.Mail.MailMessageField">
            <summary>
            Поле сообщения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailMessageField.#ctor(System.String,System.String,TFlex.DOCs.Model.Structure.ParameterType,System.Boolean,TFlex.DOCs.Model.Mail.GetMailFieldValueDelegate)">
            <summary>
            Создает экземпляр поля сообщения
            </summary>
            <param name="name">Название поля</param>
            <param name="title">Заголовок поля</param>
            <param name="type">Тип поля</param>
            <param name="nullable">Поддержка полем значения NULL</param>
            <param name="getValueDelegate">Делегат, используемый для получении значения поля</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailMessageField.SupportsTasks">
            <summary>
            Возвращает значение, указывающее, поддерживатся ли поле заданиями
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailTaskField">
            <summary>
            Поле задания
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskField.#ctor(System.String,System.String,TFlex.DOCs.Model.Structure.ParameterType,System.Boolean,TFlex.DOCs.Model.Mail.GetMailFieldValueDelegate)">
            <summary>
            Создает экземпляр поля задания
            </summary>
            <param name="name">Название поля</param>
            <param name="title">Заголовок поля</param>
            <param name="type">Тип поля</param>
            <param name="nullable">Поддержка полем значения NULL</param>
            <param name="getValueDelegate">Делегат, используемый для получения значения поля</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskField.#ctor(System.String,System.String,TFlex.DOCs.Model.Structure.ParameterType,System.Boolean,TFlex.DOCs.Model.Mail.GetMailFieldValueDelegate,System.Type)">
            <summary>
            Создает экземпляр поля задания
            </summary>
            <param name="name">Название поля</param>
            <param name="title">Заголовок поля</param>
            <param name="type">Тип поля</param>
            <param name="nullable">Поддержка полем значения NULL</param>
            <param name="getValueDelegate">Делегат, используемый для получения значения поля</param>
            <param name="enumType">Тип перечисления в случае, если значения поля являются значениями перечисления</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskField.#ctor(System.String,System.String,TFlex.DOCs.Model.Structure.ParameterType,System.Boolean,TFlex.DOCs.Model.Mail.GetMailFieldValueDelegate,TFlex.DOCs.Model.Mail.GetMailFieldStringValueDelegate)">
            <summary>
            Создает экземпляр поля задания
            </summary>
            <param name="name">Название поля</param>
            <param name="title">Заголовок поля</param>
            <param name="type">Тип поля</param>
            <param name="nullable">Поддержка полем значения NULL</param>
            <param name="getValueDelegate">Делегат, используемый для получения значения поля</param>
            <param name="getStringValueDelegate">Делегат, используемый для получения строкового значения поля</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskField.#ctor(System.String,System.String,TFlex.DOCs.Model.Structure.ParameterType,System.Boolean,TFlex.DOCs.Model.Mail.GetMailFieldValueDelegate,TFlex.DOCs.Model.Mail.GetMailFieldStringValueDelegate,System.Type)">
            <summary>
            Создает экземпляр поля задания
            </summary>
            <param name="name">Название поля</param>
            <param name="title">Заголовок поля</param>
            <param name="type">Тип поля</param>
            <param name="nullable">Поддержка полем значения NULL</param>
            <param name="getValueDelegate">Делегат, используемый для получения значения поля</param>
            <param name="enumType">Тип перечисления в случае, если значения поля являются значениями перечисления</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTaskField.SupportsMessages">
            <summary>
            Возвращает значение, указывающее, поддерживатся ли поле сообщениями
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskField.Parse(TFlex.DOCs.Model.ServerConnection,System.String,System.IFormatProvider)">
            <summary>
            Преобразует строку в значение, соответствующее типу данных поля
            </summary>
            <param name="str">Исходная строка</param>
            <returns>Значение</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItemEventArgs.Item">
            <summary>
            Почтовый элемент
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailItemFolder">
            <summary>
            Папка, содержащая почтовые элементы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItemFolder.Account">
            <summary>
            Возвращает учетную запись, которой принадлежит папка
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItemFolder.IsModified">
            <summary>
            Возвращает значение, указывающее, была ли папка модифицирована
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItemFolder.Id">
            <summary>
            Возвращает Id папки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItemFolder.Guid">
            <summary>
            Возвращает Guid папки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItemFolder.Name">
            <summary>
            Возвращает наименование папки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItemFolder.Comment">
            <summary>
            Возвращает комментарий к папке
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItemFolder.Icon">
            <summary>
            Возвращает иконку папки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailItemFolder.IsSystem">
            <summary>
            Возвращает значение, указывающее, является ли папка системной
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailItemFolder.Save(System.Boolean)">
            <summary>
            Сохраняет изменения папки
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailItemFolder.Delete(System.Boolean,System.Boolean)">
            <summary>
            Удаляет папку
            </summary>
            <returns>Значение true, если папка была успешно удалена; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailItemFolder.ToString">
            <summary>
            Возвращает строковое представление папки
            </summary>
            <returns>Строковое представление папки</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailMessagesAccess">
            <summary>
            Доступ на сообщения учётной записи
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailMessagesAccess.Read">
            <summary>
            Просмотр
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailMessagesAccess.ReadReply">
            <summary>
            Просмотр и ответы
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailMessagesAccess.All">
            <summary>
            Полный доступ
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailMessagesAccess.Forbidden">
            <summary>
            Запрещён
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailRule.Id">
            <summary>
            Возвращает Id правила
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailRule.Guid">
            <summary>
            Возвращает Guid правила
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailRule.PriorityIndex">
            <summary>
            Возращает приоритет выполнения правила
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailRule.IsActive">
            <summary>
            Возвращает активно ли правило
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailRule.Name">
            <summary>
            Возвращает наименование правила
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailRule.IsModified">
            <summary>
            Возвращает значение, указывающее, была ли папка модифицирована
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailRule.RuleType">
            <summary>
            Возвращает тип правила
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailRuleCollection">
            <summary>
            Коллекция правил
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailRuleCollection.#ctor(TFlex.DOCs.Model.ServerConnection,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Mail.MailRule})">
            <summary>
            Создает новую коллекцию правил на основании указанной коллекции, упорядоченную по ID
            </summary>
            <param name="collection">Коллекция папок</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailRuleCollection.#ctor(TFlex.DOCs.Model.ServerConnection,System.Collections.Generic.IDictionary{System.Int32,TFlex.DOCs.Model.Mail.MailRule})">
            <summary>
            Создает новую коллекцию правил на основании указанной коллекции, упорядоченную по ключу указанной коллекции
            </summary>
            <param name="collection">Коллекция папок</param>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailTasksAccess">
            <summary>
            Доступ на задания встроенной учётной записи
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTasksAccess.Read">
            <summary>
            Просмотр
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTasksAccess.ReadExecute">
            <summary>
            Просмотр и исполнение
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTasksAccess.All">
            <summary>
            Полный доступ
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTasksAccess.Forbidden">
            <summary>
            Запрещён
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailTaskToCollection">
            <summary>
            Коллекция адресов получателей почтовых элементов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskToCollection.ToString">
            <summary>
            Возвращает строковое представление коллекции адресов
            </summary>
            <returns>Строковое представление коллекции адресов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskToCollection.IndexOf(TFlex.DOCs.Model.Mail.MailUser)">
            <summary>
            Возвращает индекс указанного адреса в коллекции
            </summary>
            <param name="item">Адрес пользователя DOCs</param>
            <returns>Индекс указанного адреса в коллекции</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTaskToCollection.Item(System.Int32)">
            <summary>
            Возвращает адрес пользователя по его индексу в коллекции
            </summary>
            <param name="index">Индекс адреса в коллекции</param>
            <returns>Адрес пользователя DOCs</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskToCollection.Contains(TFlex.DOCs.Model.Mail.MailUser)">
            <summary>
            Возвращает значение, указывающее, содержится ли указанный адрес в коллекции
            </summary>
            <param name="item">Адрес пользователя DOCs</param>
            <returns>Значение true, если указанный адрес содержится в коллекции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskToCollection.CopyTo(TFlex.DOCs.Model.Mail.MailUser[],System.Int32)">
            <summary>
            Копирует коллекцию в указанный массив начиная с заданного индекса массива
            </summary>
            <param name="array">Массив адресов пользователей</param>
            <param name="arrayIndex">Индекс в массиве, с которого необходимо начинать копирование</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTaskToCollection.Count">
            <summary>
            Возвращает количество элементов в коллекции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskToCollection.GetEnumerator">
            <summary>
            Возвращает перечислитель адресов в коллекции
            </summary>
            <returns>Перечислитель адресов в коллекции</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailUpdateProvider">
            <summary>
            Позволяет обновить свойства сообщений
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailUpdateProvider.Update(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Mail.MailMessage})">
            <summary>
            Обновляет свойства указанных сообщений
            </summary>
            <param name="messages">Коллекция сообщений</param>
            <returns>Коллекция элементов, которые были изменены</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailReadDateUpdateProvider.#ctor(System.Int32[],System.Boolean)">
            <summary>
            конструктор
            </summary>
            <param name="uids">список uid сообщений, которые необходимо обновить</param>
            <param name="alreadyUpdated">если true, то сообщения в модели уже обновлены</param>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailTask">
            <summary>
            Задание
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.#ctor">
            <summary>
            Создает экземпляр задания
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает экземпляр задания
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.#ctor(TFlex.DOCs.Model.Mail.MailTask)">
            <summary>
            Создаёт экземпляр задания на основе существующего
            </summary>
            <param name="source">Задание, данные которого необходимо скопировать</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.Account">
            <summary>
            Возвращает учетную запись, которой принадлежит задание
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.IsTask">
            <summary>
            Возвращает значение, указывающее, является ли почтовый элемент заданием
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.From">
            <summary>
            Возвращает адрес отправителя задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.OnBehalf">
            <summary>
            Возвращает адрес пользователя, от имени которого создано задание
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.Controller">
            <summary>
            Возвращает адрес контролера задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.CanChangeController">
            <summary>
            Возвращает значение, указывающее, можно ли изменить контролера задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.Executors">
            <summary>
            Возвращает коллекцию исполнителей задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.To">
            <summary>
            Возвращает коллекцию получателей почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.Emails">
            <summary>
            Список адресов внешней электронной почты. Используется только при отправке задания. Всем адресатам будет отправлена копия задания в виде сообщения.
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.StartDate">
            <summary>
            Возвращает дату и время начала задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.EndDate">
            <summary>
            Возвращает срок завершения задания 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.CanChangeEndDate">
            <summary>
            Возвращает значение, указывающее, можно ли изменить контролера задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.CheckDate">
            <summary>
            Возвращает контрольный срок задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.CanChangeCheckDate">
            <summary>
            Возвращает значение, указывающее, можно ли изменить контрольный срок задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.PercentComplete">
            <summary>
            Возвращает процент завершения задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.Priority">
            <summary>
            Возвращает важность задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.Status">
            <summary>
            Возавращает статус задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.ParentTask">
            <summary>
            Возвращает родительское задание
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.IsAttachment">
            <summary>
            Показывает, загружено ли данное задание как вложение или как обычное задание учетной записи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.Save">
            <summary>
            Сохраняет задание
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.Send">
            <summary>
            Отправляет задание
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.CanAddExecutor(TFlex.DOCs.Model.Mail.MailTaskExecutor)">
            <summary>
            Возвращает значение, указывающее, возможно ли добавление указанного исполнителя в коллекцию исполнителей задания 
            </summary>
            <param name="item">Исполнитель задания</param>
            <returns>Значение true, если возможно добавление указанного исполнителя; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.AcceptType">
            <summary>
            Возвращает тип принятия задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.CanAccept">
            <summary>
            Возвращает значение, указывающее, можно ли принять задание
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.Accept">
            <summary>
            Принимает задание
            </summary>
            <returns>Значение true, если задание успешно принято; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.CanReject">
            <summary>
            Возвращает значение, указывающее, можно ли отклонить задание
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.Reject(System.String)">
            <summary>
            Отклоняет задание
            </summary>
            <param name="comment">Комментарий исполнителя</param>
            <returns>Значение true, если задание было успешно отклонено; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.CanComplete">
            <summary>
            Возвращает значение, указывающее, можно ли завершить задание
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.Complete(System.String,System.Object)">
            <summary>
            Завершает задание
            </summary>
            <param name="comment">Комментарий исполнителя</param>
            <param name="state">Параметры завершения</param>
            <returns>Значение true, если задание было успешно завершено; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.CanCancel">
            <summary>
            Возвращает значение, указывающее, можно ли аннулировать заданиие
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.Cancel">
            <summary>
            Аннулирует задание
            </summary>
            <returns>Значение true, если задание успешно аннулировано; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.CanSuspend">
            <summary>
            Возвращает значение, указывающее, можно ли приостановить задание
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.Suspend">
            <summary>
            Приостанавливает задание
            </summary>
            <returns>Значение true, если задание было успешно приостановлено; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.CanRestore">
            <summary>
            Возвращает значение, указывающее, можно ли возобновить приостановленное задание
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.Restore">
            <summary>
            Возобновляет приостановленное задание
            </summary>
            <returns>Значение true, если задание было успешно возобновлено; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.CanUpdatePercentComplete">
            <summary>
            Возвращает значение, указывающее, возможно ли обновить процент завершения задания
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.UpdatePercentComplete(System.Int32)">
            <summary>
            Обновляет процент завершения задания
            </summary>
            <param name="percentComplete">Процент завершения задания</param>
            <returns>Значение true, если процент завершения задания успешно обновлен; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.SetRead">
            <summary>
            Помечает задание как прочитанное
            </summary>
            <returns>Значение true, если задание успешно помечено как прочитанное; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.SetUnread">
            <summary>
            Помечает задание как непрочитанное
            </summary>
            <returns>Значение true, если задание успешно помечено как непрочитанное; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.SetRead(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Mail.MailTask})">
            <summary>
            Помечает указанные задания как прочитанные
            </summary>
            <param name="messages">Коллекция заданий</param>
            <returns>Значение true, если задания успешно помечены как прочитанные; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.SetUnread(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Mail.MailTask})">
            <summary>
            Помечает указанные задания как непрочитанные
            </summary>
            <param name="messages">Коллекция заданий</param>
            <returns>Значение true, если задания успешно помечены как непрочитанные; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.CanDelete">
            <summary>
            Возвращает значение, указывающее, возможно ли удаление задания
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.Delete">
            <summary>
            Удаляет задание
            </summary>
            <returns>Значение true, если задание успешно удалено; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.Delete(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Mail.MailTask})">
            <summary>
            Удаляет указанные задания
            </summary>
            <param name="tasks">Коллекция заданий</param>
            <returns>Значение true, если задания успешно удалены; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTask.CanDelegate">
            <summary>
            Возвращает значение, указывающее, возможно ли создание вложенного задания
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTask.Delegate">
            <summary>
            Создает вложенное задание
            </summary>
            <returns>Созданное задание</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailTask.Fields">
            <summary>
            Поля задания
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTask.Fields.OnBehalf">
            <summary>
            Возвращает поле "От имени"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTask.Fields.Controller">
            <summary>
            Возвращает поле "Котролер"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTask.Fields.StartDate">
            <summary>
            Возвращает поле "Дата начала"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTask.Fields.EndDate">
            <summary>
            Возвращает поле "Срок окончания"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTask.Fields.CheckDate">
            <summary>
            Возвращает поле "Контрольный срок"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTask.Fields.PercentComplete">
            <summary>
            Возвращает поле "Процент завершения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTask.Fields.Status">
            <summary>
            Возвращает поле "Статус"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTask.Fields.Priority">
            <summary>
            Возвращает поле "Важность"
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:TFlex.DOCs.Model.Mail.ControllerMailField" -->
        <member name="T:TFlex.DOCs.Model.Mail.MailTaskPriority">
            <summary>
            Перечисление возможных значений важности задания
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTaskPriority.Low">
            <summary>
            Низкая
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTaskPriority.Normal">
            <summary>
            Обычная
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTaskPriority.Hight">
            <summary>
            Высокая
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailTaskStatus">
            <summary>
            Перечисление возможных статусов задания
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTaskStatus.New">
            <summary>
            Новое
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTaskStatus.InProgress">
            <summary>
            В процессе выполнения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTaskStatus.Completed">
            <summary>
            Завершено
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTaskStatus.Rejected">
            <summary>
            Отклонено
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTaskStatus.Canceled">
            <summary>
            Аннулировано
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTaskStatus.Suspended">
            <summary>
            Приостановлено
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailTaskAcceptType">
            <summary>
            Перечисление возможных типов принятия задания
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTaskAcceptType.AllExecutors">
            <summary>
            Все исполнители
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTaskAcceptType.FirstExecutor">
            <summary>
            Первый исполнитель
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailTaskAcceptType.Auto">
            <summary>
            Автоматически
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailTaskStatusConverter">
            <summary>
            Преобразователь типа <see cref="T:TFlex.DOCs.Model.Mail.MailTaskStatus"/> в строковое представление
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailTaskPriorityConverter">
            <summary>
            Преобразователь типа <see cref="T:TFlex.DOCs.Model.Mail.MailTaskPriority"/> в строковое представление
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailTaskExtensions">
            <summary>
            Методы расширения для заданий
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskExtensions.GetCaption(TFlex.DOCs.Model.Mail.MailTaskPriority)">
            <summary>
            Возвращает заголовок для приоритета задания
            </summary>
            <param name="priority">Приоритет задания</param>
            <returns>Строковое представление приоритета задания</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskExtensions.GetCaption(TFlex.DOCs.Model.Mail.MailTaskStatus)">
            <summary>
            Возвращает заголовок для статуса задания
            </summary>
            <param name="status">Статус задания</param>
            <returns>Строковое представление статуса задания</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailTaskExecutor">
            <summary>
            Исполнитель задания
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskExecutor.#ctor(TFlex.DOCs.Model.References.Users.User)">
            <summary>
            Создает новый экземпляр класса для указанного пользователя
            </summary>
            <param name="user">Пользователь</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTaskExecutor.Name">
            <summary>
            Возвращает имя пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTaskExecutor.User">
            <summary>
            Возвращает пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTaskExecutor.UserId">
            <summary>
            Возвращает Id пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTaskExecutor.ReceivedDate">
            <summary>
            Возвращает дату и время получения задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTaskExecutor.ReadDate">
            <summary>
            Возвращает дату и время прочтения задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTaskExecutor.AcceptDate">
            <summary>
            Возвращает дату и время принятия задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTaskExecutor.CompleteDate">
            <summary>
            Возвращает дату и время завершения задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTaskExecutor.PercentComplete">
            <summary>
            Возвращает процент завершения задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTaskExecutor.Status">
            <summary>
            Возвращает статус задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTaskExecutor.Comment">
            <summary>
            Возвращает комментарий к заданию
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskExecutor.ToString">
            <summary>
            Возвращает строковое представление исполнителя задания
            </summary>
            <returns>Строковое представление исполнителя задания</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailTaskExecutorCollection">
            <summary>
            Коллекция исполнителей задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTaskExecutorCollection.Task">
            <summary>
            Возвращает задание для текущей коллекции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskExecutorCollection.ToString">
            <summary>
            Возвращает строковое представление коллекции исполнителей
            </summary>
            <returns>Строковое представление коллекции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskExecutorCollection.IndexOf(TFlex.DOCs.Model.Mail.MailTaskExecutor)">
            <summary>
            Возвращает индекс указанного исполнителя в коллекции
            </summary>
            <param name="item">Исполнитель</param>
            <returns>Индекс указанного исполнителя в коллекции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskExecutorCollection.RemoveAt(System.Int32)">
            <summary>
            Удаляет исполнителя по указанному индексу
            </summary>
            <param name="index">Индекс удаляемого исполнителя</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTaskExecutorCollection.Item(System.Int32)">
            <summary>
            Возвращает исполнителя по указанному индексу
            </summary>
            <param name="index">Индекс исполнителя в коллекции</param>
            <returns>Исполнитель</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskExecutorCollection.Add(TFlex.DOCs.Model.Mail.MailTaskExecutor)">
            <summary>
            Добавляет указанного исполнителя в коллекцию
            </summary>
            <param name="item">Исполнитель</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskExecutorCollection.Clear">
            <summary>
            Удаляет всех исполнителей из коллекции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskExecutorCollection.Contains(TFlex.DOCs.Model.Mail.MailTaskExecutor)">
            <summary>
            Возвращает значение, указывающее, содержится ли в коллекции заданный исполнитель
            </summary>
            <param name="item">Исполнитель</param>
            <returns>Значение true, если заданный исполнитель содержится в коллекции; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskExecutorCollection.CopyTo(TFlex.DOCs.Model.Mail.MailTaskExecutor[],System.Int32)">
            <summary>
            Копирует коллекцию исполнителей в массив начиная с указанного индекса массива
            </summary>
            <param name="array">Массив для копирования элементов коллекции</param>
            <param name="arrayIndex">Индекс массива</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTaskExecutorCollection.Count">
            <summary>
            Возвращает количество исполнителей в коллекции
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTaskExecutorCollection.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли коллекция доступной только для чтения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskExecutorCollection.Remove(TFlex.DOCs.Model.Mail.MailTaskExecutor)">
            <summary>
            Удаляет указанного исполнителя из коллекции
            </summary>
            <param name="item">Исполнитель</param>
            <returns>Значение true, если исполнитель успешно удален из коллекции; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTaskExecutorCollection.GetEnumerator">
            <summary>
            Возвращает перечислитель, который выполняет итерацию по элементам коллекции
            </summary>
            <returns>Перечислитель исполнителей коллекции</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTaskEventArgs.Item">
            <summary>
            Задание
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.TaskFolder">
            <summary>
            Папка, содержащая задания
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.TaskFolder.#ctor">
            <summary>
            Создает новый экземпляр папки, содержащей задания
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.TaskFolder.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает новый экземпляр папки, содержащей задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.TaskFolder.LoadSharedTasks">
            <summary>
            Дополнительно загружать в папку задания учётных записей до доступу
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.TaskFolder.GetFilter">
            <summary>
            Возвращает фильтр папки
            </summary>
            <returns>Фильтр</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.TaskFolder.SetFilter(TFlex.DOCs.Model.Search.Filter)">
            <summary>
            Задает фильтр папки
            </summary>
            <param name="filter">Фильтр</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.TaskFolder.GetTasks">
            <summary>
            Получает список заданий, входящих в папку
            </summary>
            <returns>Список заданий</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.NewMailItemEventArgs">
            <summary>
            Аргументы события, возникающего при получении нового почтового элемента 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.NewMailItemEventArgs.From">
            <summary>
            Возвращает адрес отправителя почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.NewMailItemEventArgs.Subject">
            <summary>
            Возвращает заголовок почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.NewMailItemEventArgs.SentDate">
            <summary>
            Возвращает дату и время отправки почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.NewMailItemEventArgs.IsRead">
            <summary>
            Возвращает, было ли прочитано сообщение
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.NewMailItemEventArgs.AttachmentCount">
            <summary>
            Возвращает количество вложений почтового элемента
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.NewTaskEventArgs">
            <summary>
            Аргументы события, возникающего при получении нового задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.NewTaskEventArgs.From">
            <summary>
            Возвращает почтовый адрес отправителя задания
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.NewTaskEventArgs.GetTask">
            <summary>
            Возвращает задание
            </summary>
            <returns>Задание</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.NewMessageEventArgs">
            <summary>
            Аргументы события, возникающего при получении нового сообщения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.NewMessageEventArgs.From">
            <summary>
            Возвращает адрес отправителя сообщения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.NewMessageEventArgs.FolderId">
            <summary>
            Возвращает Id папки, содержащей сообщение
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.NewMessageEventArgs.AccountId">
            <summary>
            Возвращает Id учётной записи, содержащей сообщение
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.NewMessageEventArgs.GetMessage">
            <summary>
            Возвращает сообщение
            </summary>
            <returns>Сообщение</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.ObjectAttachment">
            <summary>
            Вложенный объект
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.ObjectAttachment.#ctor(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает новый вложенный объект
            </summary>
            <param name="object">Объект справочника</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ObjectAttachment.Connection">
            <summary>
            Соединение с сервером
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ObjectAttachment.Reference">
            <summary>
            Возвращает описание справочника вложенного объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ObjectAttachment.Class">
            <summary>
            Возвращает тип вложенного объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ObjectAttachment.Object">
            <summary>
            Возвращает вложенный объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ObjectAttachment.Name">
            <summary>
            Возвращает наименование вложения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ObjectAttachment.ReferenceName">
            <summary>
            Возвращает название справочника вложенного объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ObjectAttachment.ReferenceId">
            <summary>
            Возвращает Id справочника вложенного объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ObjectAttachment.ObjectId">
            <summary>
            Возвращает Id вложенного объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ObjectAttachment.ClassId">
            <summary>
            Возвращает Id типа вложенного объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.ObjectAttachment.IsObject">
            <summary>
            Возвращает значение, указывающее, является ли вложение объектом
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.AttachmentCollection">
            <summary>
            Коллекция вложений почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.AttachmentCollection.Owner">
            <summary>
            Возвращает почтовый элемент
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.AttachmentCollection.IndexOf(TFlex.DOCs.Model.Mail.Attachment)">
            <summary>
            Возвращает индекс указанного вложения в коллекции
            </summary>
            <param name="item">Вложение, индекс которого требуется найти</param>
            <returns>Индекс указанного вложения, если оно найдено в коллекции; в противном случае возвращается значение -1</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.AttachmentCollection.Insert(System.Int32,TFlex.DOCs.Model.Mail.Attachment)">
            <summary>
            Вставляет вложение в список по указанному индексу
            </summary>
            <param name="index">Индекс, по которому следует вставить вложение</param>
            <param name="item">Вложение, вставляемое в коллекцию вложений</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.AttachmentCollection.RemoveAt(System.Int32)">
            <summary>
            Удаляет вложение по указанному индексу
            </summary>
            <param name="index">Индекс удаляемого элемента</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.AttachmentCollection.Item(System.Int32)">
            <summary>
            Возвращает или задает вложение по указанному индексу
            </summary>
            <param name="index">Индекс элемента в коллекции</param>
            <returns>Вложение с указанным индексом</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.AttachmentCollection.ToString">
            <summary>
            Возвращает строковое представление коллекции вложений
            </summary>
            <returns>Строковое представление коллекции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.AttachmentCollection.Add(TFlex.DOCs.Model.Mail.Attachment)">
            <summary>
            Добавляет вложение в коллекцию
            </summary>
            <param name="item">Добавляемое вложение</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.AttachmentCollection.Clear">
            <summary>
            Удаляет все вложения из коллекции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.AttachmentCollection.Contains(TFlex.DOCs.Model.Mail.Attachment)">
            <summary>
            Возвращает значение, указывающее, содержится ли в коллекции заданное вложение
            </summary>
            <param name="item">Вложение</param>
            <returns>Значение true, если вложение содержится в коллекции; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.AttachmentCollection.CopyTo(TFlex.DOCs.Model.Mail.Attachment[],System.Int32)">
            <summary>
            Копирует коллекцию в указанный массив начиная с заданного индекса массива
            </summary>
            <param name="array">Массив для копирования элементов коллекции</param>
            <param name="arrayIndex">Индекс массива</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.AttachmentCollection.Count">
            <summary>
            Возвращает количество элементов в коллекции
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.AttachmentCollection.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли коллекция доступной только для чтения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.AttachmentCollection.Remove(TFlex.DOCs.Model.Mail.Attachment)">
            <summary>
            Удаляет из коллекции указанное вложение
            </summary>
            <param name="item">Вложение</param>
            <returns>Значение true, если вложение успешно удалено из коллекции; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.AttachmentCollection.GetEnumerator">
            <summary>
            Возвращает перечислитель, который выполняет итерацию по элементам коллекции
            </summary>
            <returns>Перечислитель вложений коллекции</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.Attachment">
            <summary>
            Вложение почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Attachment.Name">
            <summary>
            Возвращает наименование вложения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Attachment.IsFile">
            <summary>
            Возвращает значение, указывающее, является ли вложение файлом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Attachment.IsObject">
            <summary>
            Возвращает значение, указывающее, является ли вложение объектом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Attachment.IsMessage">
            <summary>
            Возвращает значение, указывающее, является ли вложение сообщением
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.Attachment.IsTask">
            <summary>
            Возвращает значение, указывающее, является ли вложение заданием
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.Attachment.ToString">
            <summary>
            Возвращает строковое представление вложения
            </summary>
            <returns>Строковое представление вложения</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailAddress">
            <summary>
            Почтовый адрес
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailAddress.Name">
            <summary>
            Возвращает наименование адреса
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailAddress.ToString">
            <summary>
            Возвращает строковое представление адреса
            </summary>
            <returns>Строковое представление адреса</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailAddressCollection">
            <summary>
            Коллекция почтовых адресов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailAddressCollection.Message">
            <summary>
            Возвращает сообщение, которому принадлежит коллекция адресов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailAddressCollection.AddUser(TFlex.DOCs.Model.References.Users.User)">
            <summary>
            Добавляет адрес указанного пользователя в коллекцию адресов
            </summary>
            <param name="user">Пользователь</param>
            <returns>Адрес пользователя</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailAddressCollection.Contains(TFlex.DOCs.Model.References.Users.User)">
            <summary>
            Возвращает значение, указывающее, содержится ли в коллекции адресов адрес указанного пользователя
            </summary>
            <param name="user">Пользователь</param>
            <returns>Значение true, если в коллекции адресов содержится адрес пользователя; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailAddressCollection.ToString">
            <summary>
            Возвращает строковое представление коллекции адресов
            </summary>
            <returns>Строковое представление коллекции адресов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailAddressCollection.IndexOf(TFlex.DOCs.Model.Mail.MailAddress)">
            <summary>
            Возвращает индекс указанного адреса в коллекции
            </summary>
            <param name="item">Почтовый адрес</param>
            <returns>Индекс указанного адреса в коллекции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailAddressCollection.Insert(System.Int32,TFlex.DOCs.Model.Mail.MailAddress)">
            <summary>
            Вставляет адрес в список по указанному индексу
            </summary>
            <param name="index">Индекс, по которому следует вставить адрес</param>
            <param name="item">Адрес, вставляемый в коллекцию адресов</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailAddressCollection.RemoveAt(System.Int32)">
            <summary>
            Удаляет адрес по указанному индексу
            </summary>
            <param name="index">Индекс удаляемого элемента</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailAddressCollection.Item(System.Int32)">
            <summary>
            Получает или задает адрес по указанному индексу
            </summary>
            <param name="index">Индекс элемента в коллекции</param>
            <returns>Адрес с указанным индексом</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailAddressCollection.Add(TFlex.DOCs.Model.Mail.MailAddress)">
            <summary>
            Добавляет адрес в коллекцию
            </summary>
            <param name="item">Добавляемый адрес</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailAddressCollection.Clear">
            <summary>
            Удаляет все адреса из коллекции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailAddressCollection.Contains(TFlex.DOCs.Model.Mail.MailAddress)">
            <summary>
            Возвращает значение, указывающее, содержится ли заданный адрес в коллекции
            </summary>
            <param name="item">Адрес</param>
            <returns>Значение true, если адрес содержится в коллекции; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailAddressCollection.CopyTo(TFlex.DOCs.Model.Mail.MailAddress[],System.Int32)">
            <summary>
            Копирует коллекцию в указанный массив начиная с заданного индекса массива
            </summary>
            <param name="array">Массив для копирования элементов коллекции</param>
            <param name="arrayIndex">Индекс массива</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailAddressCollection.Count">
            <summary>
            Возвращает количество адресов в коллекции
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailAddressCollection.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли коллекция доступной только для чтения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailAddressCollection.Remove(TFlex.DOCs.Model.Mail.MailAddress)">
            <summary>
            Удаляет из коллекции указанный адрес
            </summary>
            <param name="item">Адрес</param>
            <returns>Значение true, если адрес успешно удален из коллекции; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailAddressCollection.GetEnumerator">
            <summary>
            Возвращает перечислитель, который выполняет итерацию по элементам коллекции
            </summary>
            <returns>Перечислитель адресов коллекции</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailFolder">
            <summary>
            Папка, содержащая сообщения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailFolder.#ctor(TFlex.DOCs.Model.Mail.MailFolder)">
            <summary>
            Создает новый экземпляр папки, содержащей сообщения
            </summary>
            <param name="parentFolder">Родительская папка</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailFolder.MessageCount">
            <summary>
            Возвращает количество сообщений в папке
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.Mail.MailFolder.MessageCountChanged">
            <summary>
            Событие, возникающее при изменении количества сообщений в папке
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailFolder.UnreadMessageCount">
            <summary>
            Возвращает количество непрочитанных сообщений в папке
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.Mail.MailFolder.UnreadMessageCountChanged">
            <summary>
            Событие, возникающее при изменении количества непрочитанных сообщений в папке
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailFolder.Type">
            <summary>
            Возвращает тип папки
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailFolder.GetParent">
            <summary>
            Возвращает родительскую папку
            </summary>
            <returns>Родительская папка</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailFolder.GetSubfolders">
            <summary>
            Возвращает дочерние папки
            </summary>
            <returns>Список дочерних папок</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailFolder.HasSubfolders">
            <summary>
            Возвращает значение, указывающее, содержит ли папка дочерние папки 
            </summary>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailFolder.MoveTo(TFlex.DOCs.Model.Mail.MailFolder)">
            <summary>
            Перемещает папку в указанную родительскую папку
            </summary>
            <param name="newParentFolder">Новая родительская папка</param>
            <returns>Значение true, если текущая папка успешно перемещена в новую родительскую папку; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailFolder.GetMessages(System.Int32,System.Int32)">
            <summary>
            Загружает сообщения, входящие в папку, начиная с указанного индекса <paramref name="startIndex"/> в количестве не более <paramref name="count"/>
            </summary>
            <param name="count">Максимальное количество сообщений для загрузки (значение 0 для загрузки всех сообщений)</param>
            <param name="startIndex">Индекс, с которого требуется начать загрузку</param>
            <returns>Список загруженных сообщений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailFolder.GetUnreadMessages">
            <summary>
            Возвращает список непрочитанных сообщений для текущей папки
            </summary>
            <returns>Список непрочитанных сообщений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailFolder.AddMessages(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Mail.MailMessage})">
            <summary>
            Добавляет указанные сообщения в папку
            </summary>
            <param name="messages">Коллекция сообщений для добавления</param>
            <returns>Значение true, если сообщения успешно добавлены; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailFolder.DeleteCacheMessages(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Mail.MailMessage})">
            <summary>
            Удаляет сообщения из кэша
            </summary>
            <param name="messages"></param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailFolder.ToString">
            <summary>
            Возвращает строковое представление папки
            </summary>
            <returns>Строковое представление папки</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MessageCountChangedHandler">
            <summary>
            Делегат, представляющий метод для обработки события изменения количества сообщений в папке
            </summary>
            <param name="folder">Папка</param>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailMessage">
            <summary>
            Сообщение
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailMessage.#ctor">
            <summary>
            Создает экземпляр сообщения DOCs
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailMessage.#ctor(TFlex.DOCs.Model.Mail.MailMessage)">
            <summary>
            Создаёт экземпляр сообщения на основе существующего
            </summary>
            <param name="source">Сообщение, данные которого необходимо скопировать</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailMessage.#ctor(TFlex.DOCs.Model.Mail.Account)">
            <summary>
            Создает экземпляр сообщения для указанной учетной записи
            </summary>
            <param name="account">Учетная запись для работы с почтой</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailMessage.Account">
            <summary>
            Возвращает учетную запись, которой принадлежит сообщение
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailMessage.IsMessage">
            <summary>
            Возвращает значение, указывающее, является ли почтовый элемент сообщением
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailMessage.To">
            <summary>
            Возвращает коллекцию адресов получателей сообщения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailMessage.Copy">
            <summary>
            Возвращает коллекцию адресов получателей копии сообщения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailMessage.Folder">
            <summary>
            Возвращает папку, содержащую сообщение
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailMessage.Uid">
            <summary>
            Возвращает UID сообщения на Imap-сервере
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailMessage.AccountId">
            <summary>
            Возращает идентификатор учётной записи сообщения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailMessage.Save">
            <summary>
            Сохраняет сообщение
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailMessage.Send">
            <summary>
            Отправляет сообщение
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailMessage.ToString">
            <summary>
            Возвращает строковое представление сообщения
            </summary>
            <returns>Строковое представление сообщения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailMessage.MoveTo(TFlex.DOCs.Model.Mail.MailFolder)">
            <summary>
            Перемещает сообщение в указанную папку
            </summary>
            <param name="folder">Папка, в которую требуется поместить сообщение</param>
            <returns>Значение true, если сообщение было успешно перемещено; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailMessage.SetRead">
            <summary>
            Помечает сообщение как прочитанное
            </summary>
            <returns>Значение true, если сообщение успешно помечено как прочитанное; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailMessage.SetUnread">
            <summary>
            Помечает сообщение как непрочитанное
            </summary>
            <returns>Значение true, если сообщение успешно помечено как непрочитанное; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailMessage.SetRead(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Mail.MailMessage})">
            <summary>
            Помечает указанные сообщения как прочитанные
            </summary>
            <param name="messages">Коллекция сообщений</param>
            <returns>Значение true, если сообщения успешно помечены как прочитанные; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailMessage.SetUnread(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Mail.MailMessage})">
            <summary>
            Помечает указанные сообщения как непрочитанные
            </summary>
            <param name="messages">Коллекция сообщений</param>
            <returns>Значение true, если сообщения успешно помечены как непрочитанные; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailMessage.Delete">
            <summary>
            Удаляет сообщение
            </summary>
            <returns>Значение true, если сообщение успешно удалено; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailMessage.Delete(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Mail.MailMessage})">
            <summary>
            Удаляет указанные сообщения
            </summary>
            <param name="messages">Коллекция сообщений</param>
            <returns>Значение true, если сообщения успешно удалены; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailMessage.Fields">
            <summary>
            Поля сообщения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.MailMessage.Fields.Folder">
            <summary>
            Возвращает поле "Папка"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailService">
            <summary>
            Почтовая служба
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailService.Accounts">
            <summary>
            Возвращает коллекцию учетных записей для работы с почтой и заданиями
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailService.AccountTemplates">
            <summary>
            Возвращает коллекцию шаблонов учетных записей для работы с внешней почтой 
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.Mail.MailService.AccountCreated">
            <summary>
            Событие, возникающее при создании новой учетной записи
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.Mail.MailService.AccountDeleted">
            <summary>
            Событие, возникающее при удалении учетной записи
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.Mail.MailService.NewMessageReceived">
            <summary>
            Событие, возникающее при получении нового сообщения
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.Mail.MailService.NewTaskReceived">
            <summary>
            Событие, возникающее при получении нового задания
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailService.RegisterMailField(TFlex.DOCs.Model.Mail.MailField)">
            <summary>
            Регистрирует поле почтового элемента
            </summary>
            <param name="field">Поле почтового элемента</param>
            <returns>Значение true, если поле успешно зарегистрировано; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailService.GetMailField(System.String)">
            <summary>
            Возвращает поле почтового элемента по его имени
            </summary>
            <param name="name">Имя поля</param>
            <returns>Поле почтового элемента</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailService.GetMailFields">
            <summary>
            Возвращает коллекцию полей почтовых элементов
            </summary>
            <returns>Коллекция полей почтовых элементов</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailUser">
            <summary>
            Почтовый адрес пользователя DOCs
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailUser.#ctor(TFlex.DOCs.Model.References.Users.User)">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="user">Пользователь DOCs</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailUser.Name">
            <summary>
            Возвращает наименование адреса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailUser.User">
            <summary>
            Возвращает пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailUser.UserId">
            <summary>
            Возвращает Id пользователя
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.MailTerm">
            <summary>
            Условие для поиска почтовых элементов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTerm.#ctor">
            <summary>
            Создает новое условие
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTerm.#ctor(TFlex.DOCs.Model.Mail.MailField,TFlex.DOCs.Model.Search.ComparisonOperator,System.Object)">
            <summary>
            Создает новое условие
            </summary>
            <param name="field">Поле почтового элемента</param>
            <param name="operator">Оператор сравнения</param>
            <param name="value">Значение для сравнения</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTerm.#ctor(TFlex.DOCs.Model.Search.LogicalOperator)">
            <summary>
            Создает новое условие
            </summary>
            <param name="logicalOperator">Логический оператор для соединения с предыдущим условием</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTerm.#ctor(TFlex.DOCs.Model.Search.TermGroup)">
            <summary>
            Создает новое условие в указанной группе условий
            </summary>
            <param name="owner">Группа условий</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTerm.#ctor(TFlex.DOCs.Model.Search.TermGroup,TFlex.DOCs.Model.Search.LogicalOperator)">
            <summary>
            Создает новое условие в указанной группе условий
            </summary>
            <param name="owner">Группа условий</param>
            <param name="logicalOperator">Логический оператор для соединения с предыдущим условием в группе</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTerm.#ctor(TFlex.DOCs.Model.Mail.MailTerm,TFlex.DOCs.Model.Search.TermGroup)">
            <summary>
            Создает условие в указанной группе условий на основании уже существующего условия 
            </summary>
            <param name="source">Условие</param>
            <param name="owner">Группа условий</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTerm.Field">
            <summary>
            Возвращает или задает поле почтового элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Mail.MailTerm.ParameterName">
            <summary>
            Возвращает название параметра условия
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTerm.GetValue">
            <summary>
            Возвращает значение для сравнения
            </summary>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTerm.SetValue(System.Object)">
            <summary>
            Задает значение для сравнения
            </summary>
            <param name="value">Новое значение</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTerm.Match(System.Object,TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Проверка выполнения условия для почтового элемента
            </summary>
            <param name="obj">Почтовый элемент</param>
            <returns>Значение true, если условие верно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.MailTerm.Clone(TFlex.DOCs.Model.Search.TermGroup)">
            <summary>
            Копирует условие в указанную группу условий
            </summary>
            <param name="owner">Группа условий</param>
            <returns>Новый элемент группы условий</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Mail.TaskFolderCollection">
            <summary>
            Коллекция папок, содержащих задания
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.TaskFolderCollection.#ctor(TFlex.DOCs.Model.ServerConnection,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Mail.TaskFolder})">
            <summary>
            Создает новую коллекцию папок на основании указанной коллекции, упорядоченную по ID
            </summary>
            <param name="collection">Коллекция папок</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Mail.TaskFolderCollection.#ctor(TFlex.DOCs.Model.ServerConnection,System.Collections.Generic.IDictionary{System.Int32,TFlex.DOCs.Model.Mail.TaskFolder})">
            <summary>
            Создает новую коллекцию папок на основании указанной коллекции, упорядоченную по ключу указанной коллекции
            </summary>
            <param name="collection">Коллекция папок</param>
        </member>
        <member name="F:TFlex.DOCs.Model.Mail.Reminders.MailItemReminder._mailItemOwnerId">
            <summary>
            владелец сообщения
            т.к. может быть создано напоминание на сообщение по доступу
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.RecordControlCards.Mail.ResolutionStatusEnum.NoControl">
            <summary>
            не контролируется
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.RecordControlCards.Mail.ResolutionStatusEnum.OnControl">
            <summary>
            поручение находится на контроле
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.RecordControlCards.Mail.ResolutionStatusEnum.Compeleted">
            <summary>
            поручение снято с контроля
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.RecordControlCards.Mail.MailResolution.Fields.Responsible">
            <summary>
            Возвращает поле "Ответственный"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.RecordControlCards.Mail.MailResolution.Fields.CheckStatus">
            <summary>
            Возвращает поле "Статус"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.RecordControlCards.Mail.MailResolution.Fields.UncheckComment">
            <summary>
            Возвращает поле "Комментарий"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectFormat">
            <summary>
            Формат отображения объекта
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectParameterFormat">
            <summary>
            Формат отображения параметра объекта
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportMacro.Flowchart.Classes.ContextVariables">
            <summary>
            Типы текущих свойств макроконтекста для отчёта
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Reporting.ReportMacro.Flowchart.Classes.ContextVariables.CurrentSignature">
            <summary>
            Переменная "Текущая подпись"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportMacro.Flowchart.Classes.CurrentReportingSignatureContextVariableItemInfo">
            <summary>
            Переменная "Текущая подпись"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportMacro.Flowchart.Extensions.ActivityContextExtensions.GetReportMacroContext(System.Activities.ActivityContext)">
            <summary>
            Возвращает ReportMacroContext
            </summary>
            <param name="context">Контекст действия</param>
            <returns>ReportMacroContext</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportMacro.Flowchart.Extensions.ActivityContextExtensions.GetReportMacroProvider(System.Activities.ActivityContext)">
            <summary>
            Возвращает ReportMacroProvider
            </summary>
            <param name="context">Контекст действия</param>
            <returns>ReportMacroProvider</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacro">
            <summary>
            Макрос для выполнения формулы в отчете
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacro.#ctor">
            <summary>
            Создает новый экземпляр макроса
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacro.#ctor(TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacro)">
            <summary>
            Создает новый экземпляр макроса на основании указанного экземпляра
            </summary>
            <param name="source">Макрос отчета для копирования свойств</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacro.#ctor(System.String)">
            <summary>
            Создает новый экземпляр макроса с указанной формулой
            </summary>
            <param name="formula">Формула</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroParameterAccessor">
            <summary>
            Класс для доступа к параметрам комплекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroParameterAccessor.Item(System.String)">
            <summary>
            Возвращает или задает значение параметра с указанным именем
            </summary>
            <param name="name">Имя параметра</param>
            <returns>Значение параметра</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroProvider">
            <summary>
            Базовый тип макроса отчета
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroProvider.#ctor(TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext)">
            <summary>
            Создает новый экземпляр класса для указанного контекста
            </summary>
            <param name="context">Контекст генерации отчета</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroProvider.Context">
            <summary>
            Возвращает контекст выполнения макроса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroProvider.ТекущаяПодпись">
            <summary>
            Возвращает текущую подпись объект справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroProvider.ПараметрКомплекта">
            <summary>
            Возвращает экземпляр класса для доступа к параметрам комплекта
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportFormulaMacro">
            <summary>
            Макрос для вычисления наименования отчета
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportFormulaMacro.#ctor(System.String)">
            <summary>
            Создает новый экземпляр макроса для вычисления указанной формулы
            </summary>
            <param name="formula">Формула</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext">
            <summary>
            Контекст выполнения макроса отчета
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.#ctor(TFlex.DOCs.Model.References.Reporting.ReportGenerationContext)">
            <summary>
            Создает контекст выполнения макроса на основании контекста генерации отчета
            </summary>
            <param name="generationContext">Контекст генерации отчета</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.#ctor(TFlex.DOCs.Model.References.Reporting.ReportGenerationContext,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ComplexHierarchyLink,TFlex.DOCs.Model.Signatures.Signature)">
            <summary>
            Создает контекст выполнения макроса на основании контекста генерации отчета
            </summary>
            <param name="generationContext">Контекст генерации отчета</param>
            <param name="referenceObject">Текущий объект</param>
            <param name="hierarchyLink">Текущее подключение</param>
            <param name="signature">Текущая подпись</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.Signature">
            <summary>
            Возвращает текущую подпись объекта справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.GetValue(System.Int32,System.String)">
            <summary>
            Возвращает значение указанного параметра объекта с заданным Id
            </summary>
            <param name="objectId">Id объекта</param>
            <param name="parameter">Наименование параметра</param>
            <returns>Значение параметра</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.GetString(System.Int32,System.String)">
            <summary>
            Возвращает строковое представление указанного параметра объекта с заданным Id
            </summary>
            <param name="objectId">Id объекта</param>
            <param name="parameter">Наименование параметра</param>
            <returns>Строковое представление параметра</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.GetKitParameters">
            <summary>
            Возвращает параметры комплекта отчета
            </summary>
            <returns>Список параметров комплекта</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.ObjectsIds">
            <summary>
            Возвращает массив идентификаторов объектов, входящих в отчет
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.ReferenceId">
            <summary>
            Возвращает Id справочника, для которого генерируется отчет
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.ContentType">
            <summary>
            Возвращает тип состава отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.ReportFilePath">
            <summary>
            Возвращает путь к файлу отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.TemplateFilePath">
            <summary>
            Возвращает путь к файлу шаблона отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.AuthorFullName">
            <summary>
            Возвращает полное имя автора отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.AuthorFirstName">
            <summary>
            Возвращает имя автора отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.AuthorLastName">
            <summary>
            Возвращает фамилию автора отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.AuthorPatronymic">
            <summary>
            Возвращает отчетство автора отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.AuthorShortName">
            <summary>
            Возвращает сокращенное имя автора отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.UserName">
            <summary>
            Возвращает логин текущего пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.Server">
            <summary>
            Возвращает имя сервера для текущего подключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.WindowsAuthentication">
            <summary>
            Возвращает значение, указывающее, выполнено ли текущее подключение с авторизацией Windows
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacro.ReportMacroContext.RefreshPositons">
            <summary>
            Возвращает значение, указывающее, поддерживается ли назначение позиций
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportsKit.ReportKitDocument">
            <summary>
            Объект типа "Документ комплекта" списка объектов "Документы комплекта"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportsKit.ReportKitDocument.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportsKit.ReportKitDocument.FilterXml">
            <summary>
            Возвращает параметр "Фильтр"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportsKit.ReportKitDocument.GetFilter">
            <summary>
            Возвращает фильтр для содержимого отчета
            </summary>
            <returns>Фильтр</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportsKit.ReportKitDocument.Report">
            <summary>
            Возвращает объект по связи "Отчёт"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Reporting.ReportsKit.ReportKitDocument.Fields.Name">
            <summary>
            Guid параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Reporting.ReportsKit.ReportKitDocument.Fields.FilterXml">
            <summary>
            Guid параметра "Фильтр"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Reporting.ReportsKit.ReportKitDocument.Groups.Report">
            <summary>
            Guid группы параметров "Отчёт"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportsKit.ReportKitDocuments">
            <summary>
            Список объектов "Документы комплекта" типа "Комплект документов"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportsKit.SetOfReportsParameter">
            <summary>
            Объект типа "Параметр комплекта" списка объектов "Параметры комплекта"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportsKit.SetOfReportsParameter.CreateContextParameter">
            <summary>
            Создает параметр комплекта для передачи в контекст генерации отчета
            </summary>
            <returns>Параметр комплекта</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportsKit.SetOfReportsParameter.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportsKit.SetOfReportsParameter.Type">
            <summary>
            Возвращает параметр "Тип"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportsKit.SetOfReportsParameter.IsConstant">
            <summary>
            Возвращает параметр "Является константой"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportsKit.SetOfReportsParameter.Value">
            <summary>
            Возвращает параметр "Значение"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportsKit.SetOfReportsParameter.FieldKeys">
            <summary>
            Идентификаторы полей
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Reporting.ReportsKit.SetOfReportsParameter.FieldKeys.Name">
            <summary>
            Guid параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Reporting.ReportsKit.SetOfReportsParameter.FieldKeys.Type">
            <summary>
            Guid параметра "Тип"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Reporting.ReportsKit.SetOfReportsParameter.FieldKeys.IsConstant">
            <summary>
            Guid параметра "Является константой"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Reporting.ReportsKit.SetOfReportsParameter.FieldKeys.Value">
            <summary>
            Guid параметра "Значение"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportsKit.SetOfReportsParameters">
            <summary>
            Список объектов "Параметры комплекта" типа "Комплект документов"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportsKit.SetOfReportsParameters.CreateReferenceObjectForClass(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект списка указанного типа
            </summary>
            <param name="classObject">Тип объекта списка</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportsKit.SetOfReportsParameters.Factory">
            <summary>
            Класс для создания экземпляров списка объектов "Параметры комплекта"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportsKit.SetOfReportsParameters.Factory.CreateReference(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает экземпляр справочника списка объектов 
            </summary>
            <param name="masterGroup">Основная группа параметров списка</param>
            <returns>Список объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportsKit.SetOfReportsParameters.Factory.CreateClassTree(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает дерево типов списка объектов
            </summary>
            <param name="masterGroup">Основная группа параметров списка</param>
            <returns>Дерево типов списка объектов</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.SetOfReports">
            <summary>
            Объект типа "Комплект документов" в справочнике "Отчеты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.SetOfReports.CanExecute">
            <summary>
            Возвращает значение, указывающее, возможно ли сгенерировать документ
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.SetOfReports.Generate(TFlex.DOCs.Model.References.Reporting.ReportGenerationContext)">
            <summary>
            Генерирует комплект документов с указанным контекстом
            </summary>
            <param name="context">Контекст генерации отчетов</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.SetOfReports.InitializeContext(TFlex.DOCs.Model.References.Reporting.ReportGenerationContext,System.Boolean)">
            <summary>
            Инициализирует контекст генерации отчета
            </summary>
            <param name="context">Контекст генерации отчета</param>
            <param name="generating">Значение true, если контекст инициализируется для генерации отчета; в противном случае - значение false</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.SetOfReports.GetReportParameters">
            <summary>
            Возвращает список параметров комплекта
            </summary>
            <returns>Список параметров комплекта</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.Report">
            <summary>
            Объект типа "Отчет" справочника "Отчеты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.Report.ReportFileName">
            <summary>
            Возвращает параметр "Имя файла отчета"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.Report.OutputFileFormat">
            <summary>
            Возвращает параметр "Формат выходного файла"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.Report.DefaultFolder">
            <summary>
            Возвращает папку по умолчанию отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.Report.AutoAttachLink">
            <summary>
            Возвращает Guid автоматически подключаемой связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.Report.HasTemplateProperties">
            <summary>
            Возвращает значение, указывающее, содержит ли отчет параметры шаблона
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.Report.TemplateProperties">
            <summary>
            Возвращает параметр "Параметры шаблона"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.Report.AllowCustomizeDesign">
            <summary>
            Возвращает значение, указывающее, поддерживает ли отчет настройку внешнего вида
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.Report.CustomizeDesign(System.Windows.Forms.IWin32Window)">
            <summary>
            Вызывает диалог настройки внешнего вида отчета (если)
            </summary>
            <param name="owner">Окно владелец</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.Report.Generate(TFlex.DOCs.Model.References.Reporting.ReportGenerationContext)">
            <summary>
            Генерирует отчет с заданным контекстом
            </summary>
            <param name="context">Контекст генерации отчета</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.Report.Generate(TFlex.DOCs.Model.References.Reference,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Генерирует отчет для указанного справочника
            </summary>
            <param name="reference">Справочник</param>
            <param name="resultFileOwner">Папка, в которую требуется поместить сгенерированный файл отчета</param>
            <param name="fileLink">Группа параметров справочника, к которой требуется подключить сгенерированный файл отчета</param>
            <returns>Контекст генерации отчета</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.Report.Generate(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ComplexHierarchyLink,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Генерирует отчет для указанного объекта справочника
            </summary>
            <param name="obj">Объект справочника, для которого генерируется отчет</param>
            <param name="link">Подключение объекта справочника</param>
            <param name="resultFileOwner">Папка, в которую требуется поместить сгенерированный файл отчета</param>
            <param name="fileLink">Группа параметров справочника, к которой требуется подключить сгенерированный файл отчета</param>
            <returns>Контекст генерации отчета</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.Report.Generate(System.Collections.Generic.List{TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink},TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Генерирует отчет для указанного списка объектов справочника с подключениями
            </summary>
            <param name="objects">Список объектов справочника с подключениями</param>
            <param name="resultFileOwner">Папка, в которую требуется поместить сгенерированный файл отчета</param>
            <param name="fileLink">Группа параметров справочника, к которой требуется подключить сгенерированный файл отчета</param>
            <returns>Контекст генерации отчета</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.Report.Generate(System.Collections.Generic.List{TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink},TFlex.Reporting.ReportContentType,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Генерирует отчет для указанного списка объектов справочника с подключениями
            </summary>
            <param name="objects">Список объектов справочника с подключениями</param>
            <param name="contentType">Тип состава отчета</param>
            <param name="resultFileOwner">Папка, в которую требуется поместить сгенерированный файл отчета</param>
            <param name="fileLink">Группа параметров справочника, к которой требуется подключить сгенерированный файл отчета</param>
            <returns>Контекст генерации отчета</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.Report.Generate(TFlex.DOCs.Model.References.Reporting.ReportGenerationContext,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Генерирует отчет с заданным контекстом
            </summary>
            <param name="context">Контекст генерации отчета</param>
            <param name="resultFileOwner">Папка, в которую требуется поместить сгенерированный файл отчета</param>
            <param name="fileLink">Группа параметров справочника, к которой требуется подключить сгенерированный файл отчета</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.Report.InitializeContext(TFlex.DOCs.Model.References.Reporting.ReportGenerationContext,System.Boolean)">
            <summary>
            Инициализирует контекст генерации отчета
            </summary>
            <param name="context">Контекст генерации отчета</param>
            <param name="generating">Значение true, если контекст инициализируется для генерации отчета; в противном случае - значение false</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.Report.Fields">
            <summary>
            Идентификаторы параметров
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Reporting.Report.Fields.ReportFileName">
            <summary>
            Guid параметра "Имя файла отчета"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Reporting.Report.Fields.TemplateProperties">
            <summary>
            Guid параметра "Параметры шаблона"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Reporting.Report.Fields.AutoAttachLink">
            <summary>
            Guid параметра "Автоматически подключаемая связь"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Reporting.Report.Fields.DefaultFolderLink">
            <summary>
            Guid связи "Папка по умолчанию"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Reporting.Report.Fields.ReportGenerationCode">
            <summary>
            Guid параметра "Код формирования"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Reporting.Report.Fields.ReportGenerationCodeReferences">
            <summary>
            Guid параметра "Ссылки"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Reporting.Report.Fields.FileFormat">
            <summary>
            Guid параметра "Формат выходного файла"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportDataSetReader.LoadObjectRelations(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject},System.Data.DataTable)">
            <summary>
            Предварительная загрузка используемых связей и параметров объекта.
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportDataSetReader.ResourceManager.TimeMerger.GetIntervalsInHours(System.DateTime,System.DateTime)">
            <summary>
            Получить временные интервалы в часах
            </summary>
            <param name="intervals">Исходные интервалы</param>
            <returns>Интервалы в часах</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportDataSetReader.ResourceManager.TimeMerger.GetIntervalsInDays(System.DateTime,System.DateTime)">
            <summary>
            Получить временные интервалы в днях
            </summary>
            <param name="intervals">Исходные интервалы</param>
            <returns>Интервалы в неделях</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportDataSetReader.ResourceManager.TimeMerger.GetIntervalsInWeeks(System.DateTime,System.DateTime)">
            <summary>
            Получить временные интервалы в неделях
            </summary>
            <param name="intervals">Исходные интервалы</param>
            <returns>Интервалы в неделях</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportDataSetReader.ResourceManager.TimeMerger.GetIntervalsInMounths(System.DateTime,System.DateTime)">
            <summary>
            Получить временные интервалы в месяцах
            </summary>
            <param name="intervals">Исходные интервалы</param>
            <returns>Интервалы в месяцах</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportDataSetReader.ResourceManager.TimeMerger.GetIntervalsInYears(System.DateTime,System.DateTime)">
            <summary>
            Получить временные интервалы в годах
            </summary>
            <param name="intervals">Исходные интервалы</param>
            <returns>Интервалы в годах</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.OutputDocument">
            <summary>
            Объект типа "Выходной документ" справочника "Отчеты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.OutputDocument.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.OutputDocument.ContentType">
            <summary>
            Возвращает значение параметра "Состав отчета"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.OutputDocument.OpenFile">
            <summary>
            Возврщает значение параметра "Открывать документы после создания" 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.OutputDocument.OverwriteReportFile">
            <summary>
            Возвращает значение параметра "Перезаписывать существующие файлы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.OutputDocument.ContentReference">
            <summary>
            Возвращает параметр "Справочник"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.OutputDocument.ContentReferenceGuid">
            <summary>
            Возвращает Guid справочника, для которого генерируется отчет
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.OutputDocument.ObjectList">
            <summary>
            Возвращает параметр "Список объектов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.OutputDocument.ContentReferencePath">
            <summary>
            Возвращает путь по структуре справочника к источнику данных для отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.OutputDocument.MenuName">
            <summary>
            Возвращает параметр "Имя выпадающего меню"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.OutputDocument.FilterXml">
            <summary>
            Возвращает параметр "Фильтр"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.OutputDocument.OpenType">
            <summary>
            Возвращает значение параметра "Тип окна"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.OutputDocument.HasTemplateProperties">
            <summary>
            Возвращает значение, указывающее, содержит ли выходной документ параметры шаблона
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.OutputDocument.AllowCustomizeDesign">
            <summary>
            Возвращает значение, указывающее, допускается ли для документа настройка внешнего вида отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.OutputDocument.CanExecute">
            <summary>
            Возвращает значение, указывающее, возможно ли сгенерировать документ
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.OutputDocument.EditTemplateProperties(System.Windows.Forms.IWin32Window)">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.OutputDocument.CustomizeDesign(System.Windows.Forms.IWin32Window)">
            <summary>
            Вызывает диалог настройки внешнего вида отчета (если)
            </summary>
            <param name="owner">Окно владелец</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.OutputDocument.ContentReferenceObjectClassGuids">
            <summary>
            Возвращает массив Guid'ов типов объектов справочника, для которых может генерироваться документ 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.OutputDocument.ContentReferenceReportClassGuids">
            <summary>
            Возвращает массив Guid'ов типов отчетов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.OutputDocument.TemplateFile">
            <summary>
            Возвращает файл шаблона отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.OutputDocument.Generator">
            <summary>
            Возвращает генератор отчета
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.OutputDocument.GetFilter">
            <summary>
            Возвращает фильтр для содержимого отчета
            </summary>
            <returns>Фильтр</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.OutputDocument.SetFilter(TFlex.DOCs.Model.Search.Filter)">
            <summary>
            Задает фильтр для содержимого отчета
            </summary>
            <param name="filter">Фильтр</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.OutputDocument.Generate">
            <summary>
            Генерирует отчет
            </summary>
            <returns>Контекст генерации отчета</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.OutputDocument.Generate(TFlex.DOCs.Model.References.Reference)">
            <summary>
            Генерирует отчет для указанного справочника
            </summary>
            <param name="reference">Справочник</param>
            <returns>Контекст генерации отчета</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.OutputDocument.Generate(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ComplexHierarchyLink)">
            <summary>
            Генерирует отчет для указанного объекта справочника с заданным подключением
            </summary>
            <param name="obj">Объект справочника</param>
            <param name="link">Подключение</param>
            <returns>Контекст генерации отчета</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.OutputDocument.Generate(System.Collections.Generic.List{TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink},TFlex.Reporting.ReportContentType)">
            <summary>
            Генерирует отчет для указанного списка объектов со связями, с возможностью указать тип состава отчета
            </summary>
            <param name="objects">Список объектов со связями</param>
            <param name="contentType">Тип состава отчета</param>
            <returns>Контекст генерации отчета</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.OutputDocument.ValidateLicense(System.Boolean)">
            <summary>
            Проверяет лицензию на генерацию отчёта
            </summary>
            <param name="throwOnError">Указывает, необходимо ли бросить исключение при отсутствии лицензии</param>
            <returns>true, если есть лицензия на генерацию отчёта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.OutputDocument.Generate(TFlex.DOCs.Model.References.Reporting.ReportGenerationContext)">
            <summary>
            Генерирует отчет с указанным контекстом
            </summary>
            <param name="context">Контекст генерации отчета</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.OutputDocument.InitializeContext(TFlex.DOCs.Model.References.Reporting.ReportGenerationContext,System.Boolean)">
            <summary>
            Инициализирует контекст генерации отчета
            </summary>
            <param name="context">Контекст генерации отчета</param>
            <param name="generating">Значение true, если контекст инициализируется для генерации отчета; в противном случае - значение false</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.OutputDocument.FileReference">
            <summary>
            Возвращает справочник файлов
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext">
            <summary>
            Контекст генерации отчета
            </summary>        
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.PathToParameterGroup">
            <summary>
            Возвращает или задает путь к группе параметров, для которой генерируется отчет
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.RootObjectId">
            <summary>
            Возвращает Id корневого объекта отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.ParameterGroup">
            <summary>
            Возвращает группу параметров, для которой генерируется отчет
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.Reference">
            <summary>
            Возвращает справочник, для которого генерируется отчет
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.Objects">
            <summary>
            Возвращает список объектов с подключениями, для которых генерируется отчет
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.ContentFilter">
            <summary>
            Возвращает или задает фильтр содержимого отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.ReportFolderPath">
            <summary>
            Возвращает или задает путь к папке, содержащей отчет
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.ReportFileName">
            <summary>
            Возвращает или задает имя файла отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.ReportGenerationCode">
            <summary>
            Возвращает или задает код формирования отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.ReportGenerationCodeReferences">
            <summary>
            Возвращает или задает ссылки на библиотеки для кода формирования
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.GenerationErrors">
            <summary>
            Возвращает или задает описание ошибок, возникших при генерации отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.SetOfReportFilePaths">
            <summary>
            Возвращает или задает пути к файлам отчетов набора отчетов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.OverwriteReportFile">
            <summary>
            Возвращает или задает значение, указывающее, можно ли перезаписывать существующие файлы отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.OpenFile">
            <summary>
            Возвращает значение, указывающее, требуется ли открывать файл отчета после создания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.MacroContext">
            <summary>
            Возвращает контекст выполнения макроса при генерации отчета
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.MacroError">
            <summary>
            Событие, возникающее при возникновении ошибки в макросе
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Model.Search.Path.ReferencePath)">
            <summary>
            Создает новый экземпляр контекста генерации отчета
            </summary>
            <param name="parameterGroup">Группа параметров, для которой генерируется отчет</param>
            <param name="referencePath">Путь по структуре справочника к группе параметров</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.#ctor(TFlex.DOCs.Model.References.Reference)">
            <summary>
            Создает новый экземпляр контекста генерации отчета
            </summary>
            <param name="reference">Справочник, для которого генерируется отчет</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.#ctor(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ComplexHierarchyLink,TFlex.Reporting.ReportContentType)">
            <summary>
            Создает новый экземлпяр контекста генерации отчета
            </summary>
            <param name="obj">Объект справочника, для которого генерируется отчет</param>
            <param name="link">Подключение объекта</param>
            <param name="contentType">Тип состава отчета</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.#ctor(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink},TFlex.Reporting.ReportContentType)">
            <summary>
            Создает новый экземпляр контекста генерации отчета
            </summary>
            <param name="objects">Список объектов с подключениями</param>
            <param name="contentType">Тип состава отчета</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.ReferenceId">
            <summary>
            Возвращает или задает Id справочника, для которого генерируется отчет
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.ObjectsInfo">
            <summary>
            Возвращает или задает список объектов, содержащих информацию об объектах отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.ObjectPositions">
            <summary>
            Возвращает или задает список объектов, содержащих информацию об объектах отчета и простановке позиций
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.RefreshPositons">
            <summary>
            Возвращает или задает значение, указывающее, поддерживается ли назначение позиций
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.ContentType">
            <summary>
            Возвращает или задает тип состава отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.AuthorInfo">
            <summary>
            Возвращает информацию об авторе отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.ReportFilePath">
            <summary>
            Возвращает или задает путь к файлу отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.TemplateFilePath">
            <summary>
            Возвращает или задает путь к файлу шаблона отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.DefaultFolderObject">
            <summary>
            Возвращает или задает папку в справочнике файлов для сохранения отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.DefaultFolder">
            <summary>
            Возвращает или задает путь к папке по умолчанию отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.UserName">
            <summary>
            Возвращает логин текущего пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.Password">
            <summary>
            Возврщает хэш пароля текущего пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.Server">
            <summary>
            Возвращает имя сервера для текущего подключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.WindowsAuthentication">
            <summary>
            Возвращает значение, указывающее, выполнено ли текущее подключение с авторизацией Windows
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.ConnectionParametersData">
            <summary>
            Возвращает параметры подключения с сервером
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.TemplateProperties">
            <summary>
            Возврщает параметры шаблона отчета 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.ProductStructureId">
            <summary>
            Id структуры, заполняется в случае генерации отчёта на объект номеклатуры в контектсе структуры изделия
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.GeneratorProgramFilePath">
            <summary>
            Возвращает или задает путь к программе, сгенерировавшей файл отчёта 
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.CopyTemplateFile">
            <summary>
            Копирует файл шаблона отчета в файл отчета
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.CopyFrom(TFlex.Reporting.IReportGenerationContext)">
            <summary>
            Копирует параметры указанного контекста генерации отчета в текущий контекст
            </summary>
            <param name="context">Контекст генерации отчета для копирования свойств</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.Serialize(TFlex.Reporting.IReportGenerationContext)">
            <summary>
            Сериализует контекст генерации отчета в массив байтов
            </summary>
            <param name="context">Контекст генерации отчета</param>
            <returns>Массив байтов, содержащий сериализованный контекст</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.Deserialize(System.Byte[])">
            <summary>
            Десериализует контекст генерации отчета из массива байтов
            </summary>
            <param name="contextData">Массив байтов, содержащий сериализованный контекст</param>
            <returns>Контекст генерации отчета</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.SetOfReportsParameters">
            <summary>
            Возвращает или задает список параметров комплекта
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.ContextSerializer">
            <summary>
            Класс для сериализации контекста генерации отчета
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.ContextSerializer.Serialize(TFlex.DOCs.Model.References.Reporting.ReportGenerationContext)">
            <summary>
            Сериализует контекст генерации отчета в массив байтов
            </summary>
            <param name="context">Контекст генерации отчета</param>
            <returns>Массив байтов, содержащий сериализованный контекст</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.ContextSerializer.Deserialize(System.Byte[])">
            <summary>
            Десериализует контекст генерации отчета из массива байтов
            </summary>
            <param name="data">Массив байтов, содержащий сериализованный контекст</param>
            <returns>Контекст генерации отчета</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.AuthorInfo">
            <summary>
            Информация об авторе отчета
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.AuthorInfo.AuthorFullName">
            <summary>
            Возвращает полное имя автора
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.AuthorInfo.AuthorFirstName">
            <summary>
            Возвращает имя автора
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.AuthorInfo.AuthorLastName">
            <summary>
            Возвращает фамилию автора
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.AuthorInfo.AuthorPatronymic">
            <summary>
            Возвращает отчество автора
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.AuthorInfo.AuthorShortName">
            <summary>
            Возвращает короткое имя автора
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink">
            <summary>
            Объект справочника с информацией о его подключении к родительскому объекту
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink.#ctor(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает новый экземпляр класса для объекта справочника
            </summary>
            <param name="referenceObject">Объект справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink.#ctor(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ComplexHierarchyLink)">
            <summary>
            Создает новый экземпляр класса для объекта справочника и его подключения
            </summary>
            <param name="referenceObject">Объект справочника</param>
            <param name="link">Подключение объекта к родителю</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink.#ctor(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Signatures.Signature)">
            <summary>
            Создает новый экземпляр класса для объекта справочника и его подписи
            </summary>
            <param name="referenceObject">Объект справочника</param>
            <param name="signature">Подпись объекта</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink.ReferenceObject">
            <summary>
            Возвращает объект справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink.Link">
            <summary>
            Возвращает подключение объекта справочника к родительскому объекту
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink.Signature">
            <summary>
            Возвращает подпись объекта справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект справочника для сравнения</param>
            <returns>Значение true, если заданный объект равен текущему; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink.GetHashCode">
            <summary>
            Возвращает хэш-код объекта
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink.op_Equality(TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink,TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink)">
            <summary>
            Определяет, равны ли указанные объекты
            </summary>
            <param name="obj1">Первый объект для сравнения</param>
            <param name="obj2">Второй объект для сравнения</param>
            <returns>Значение true, если указанные объекты равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink.op_Inequality(TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink,TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink)">
            <summary>
            Определяет, различаются ли указанные объекты
            </summary>
            <param name="obj1">Первый объект для сравнения</param>
            <param name="obj2">Второй объект для сравнения</param>
            <returns>Значение true, если указанные объекты различны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReferenceObjectWithLink.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns>Строковое представление объекта</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportMacroErrorEventArgs">
            <summary>
            Аргументы события <see cref="E:TFlex.DOCs.Model.References.Reporting.ReportGenerationContext.MacroError"/> 
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportMacroErrorEventArgs.#ctor(System.Exception,TFlex.DOCs.Model.References.ReferenceObject,System.String,System.String)">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="error">Исключение</param>
            <param name="object">Объект справочника</param>
            <param name="macroCode">Код макроса</param>
            <param name="columnName">Имя столбца отчета</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacroErrorEventArgs.Error">
            <summary>
            Возвращает исключение
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacroErrorEventArgs.Object">
            <summary>
            Возвращает объект справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacroErrorEventArgs.MacroCode">
            <summary>
            Возвращает код макроса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportMacroErrorEventArgs.ColumnName">
            <summary>
            Возвращает имя столбца отчета
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportGenerator">
            <summary>
            Объект "Генератор отчетов" справочника "Генераторы отчетов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerator.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerator.ModuleName">
            <summary>
            Возвращает параметр "Имя модуля"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerator.GeneratorClassName">
            <summary>
            Возвращает параметр "Имя класса генератора"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerator.SupportsTemplateProperties">
            <summary>
            Возвращает параметр "Редактирование параметров шаблона"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerator.CustomizableDesign">
            <summary>
            Возвращает параметр "Настройка внешнего вида отчета"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerator.StandAlone">
            <summary>
            Возвращает параметр "Выполнение в отдельном процессе"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerator.RefreshPositions">
            <summary>
            Возвращает параметр "Поддержка назначения позиций"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGenerator.OperationTimeout">
            <summary>
            Возвращает параметр "Максимальное время генерации"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportGenerator.GetCommands">
            <summary>
            Возвращает объекты списка "Команды отчета"
            </summary>
            <returns>Коллекция объектов "Команда отчета"</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportGenerator.CreateGenerator(System.Boolean)">
            <summary>
            Создает генератор отчета
            </summary>
            <param name="forGeneration">Значение true, если генератор создается для генерации отчета; в противном случае - значение false</param>
            <returns>Созданный генератор отчета</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportGeneratorCommand">
            <summary>
            Объект типа "Команда отчета" списка объектов "Команды отчета"
            </summary> 
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGeneratorCommand.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGeneratorCommand.Identifier">
            <summary>
            Возвращает параметр "Идентификатор команды"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportGeneratorCommand.Icon">
            <summary>
            Возвращает параметр "Иконка"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportGeneratorCommands">
            <summary>
            Список объектов "Команды отчета" справочника "Генераторы отчетов"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportGeneratorCommands.CreateReferenceObjectForClass(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает новый объект в списке объектов
            </summary>
            <param name="classObject">Тип создаваемого объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportGeneratorReference">
            <summary>
            Справочник "Генераторы отчетов"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportGeneratorReference.CreateReferenceObjectForClass(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект справочника
            </summary>
            <param name="classObject">Тип создаваемого объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportReference">
            <summary>
            Справочник "Отчеты"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportReference.CreateReferenceObjectForClass(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект справочника
            </summary>
            <param name="classObject">Тип создаваемого объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportType">
            <summary>
            Тип объектов справочника "Отчеты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportType.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportType.IsReport">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Отчет"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reporting.ReportType.IsSetOfReports">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Комплект документов"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportTypes">
            <summary>
            Дерево типов справочника "Отчеты"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reporting.ReportTypes.CreateClassObject(System.Guid)">
            <summary>
            Создает объект типа с указанным Guid
            </summary>
            <param name="classGuid">Guid типа</param>
            <returns>Тип объектов</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reporting.ReportTypes.Keys">
            <summary>
            Идентификаторы типов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Reporting.ReportTypes.Keys.OutputDocument">
            <summary>
            Guid типа "Выходной документ"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Reporting.ReportTypes.Keys.Report">
            <summary>
            Guid типа "Отчёт"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Reporting.ReportTypes.Keys.SetOfReports">
            <summary>
            Guid типа "Комплект документов"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Reporting.ReportTypes.Keys.TechnologyDocument">
            <summary>
            Guid типа "Технологический документ"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Users.WorkflowRole">
            <summary>
            Объект типа "Роль бизнес-процесса" справочника "Группы и пользователи"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.WorkflowRole.Author">
            <summary>
            Guid роли "Автор бизнес-процесса"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Users.DomainUserExistsException">
            <summary>
            Исключение, которое вызывается при попытке повторного добавления пользователя с указанным SID
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Users.DomainUserExistsException.#ctor(System.String)">
            <summary>
            Создает новый экземпляр исключения
            </summary>
            <param name="sid">SID добавляемого пользователя</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.DomainUserExistsException.Sid">
            <summary>
            Возвращает SID пользователя
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Users.PasswordParameter">
            <summary>
            Параметр типа "Пароль" 
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Users.PasswordParameter.GetString">
            <summary>
            Возвращает строковое представление параметра
            </summary>
            <returns>Строковое представление</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.PasswordParameter.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли параметр доступным только для чтения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.PasswordParameter.EmptyValue">
            <summary>
            Возвращает пустое значение параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.PasswordParameter.IsEmpty">
            <summary>
            Возвращает значение, указывающее, является ли параметр пустым
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Users.PasswordParameter.GetTypeCode">
            <summary>
            Возвращает код типа значения параметра
            </summary>
            <returns>Код типа</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Users.ProductionUnit">
            <summary>
            Объект типа "Производственное подразделение" справочника "Группы и пользователи"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.ProductionUnit.Number">
            <summary>
            Возвращает параметр "Номер"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.ProductionUnit.Code">
            <summary>
            Возвращает параметр "Код"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.ProductionUnit.ShortName">
            <summary>
            Возвращает параметр "Сокращённое название"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.ProductionUnit.FunctionType">
            <summary>
            Возвращает параметр "Тип функциональности"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.ProductionUnit.AreaFixingType">
            <summary>
            Возвращает параметр "Тип закрепления площади"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.ProductionUnit.PurposeType">
            <summary>
            Возвращает параметр "Тип назначения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.ProductionUnit.LinkedEquipmentReference">
            <summary>
            Возвращает справочник, содержащий объекты по связи "Оборудование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.ProductionUnit.Fields.Number">
            <summary>
            Номер
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.ProductionUnit.Fields.Code">
            <summary>
            Код
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.ProductionUnit.Fields.ShortName">
            <summary>
            Сокращенное наименование
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.ProductionUnit.Fields.FunctionType">
            <summary>
            Тип функциональности
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.ProductionUnit.Fields.AreaFixingType">
            <summary>
            Тип закрепления площади
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.ProductionUnit.Fields.PurposeType">
            <summary>
            Тип назначения
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Users.UserType">
            <summary>
            Тип объектов справочника "Группы и пользователи"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserType.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserType.IsGroup">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Группа пользователей"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserType.IsSubdivision">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Подразделение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserType.IsEnterprise">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Предприятие"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserType.IsDivision">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Отдел"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserType.IsUser">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Пользователь"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserType.IsEmployee">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Сотрудник"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserType.IsDisconnectedUser">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Отключенный пользователь"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserType.IsOutsideUser">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Внешний пользователь"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserType.IsAdministrator">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Администратор"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserType.IsPost">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Должность"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserType.IsProductionUnit">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Производственное подразделение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserType.IsShop">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Цех"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserType.IsArea">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Участок"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserType.IsWorkplace">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Рабочее место"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserType.IsWorkcenter">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Рабочий центр"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserType.IsWorkflowRole">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Роль бизнес-процесса"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Users.UserTypes">
            <summary>
            Дерево типов справочника "Группы и пользователи"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserTypes.GroupBaseType">
            <summary>
            Возвращает тип "Группа пользователей"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserTypes.SubdivisionType">
            <summary>
            Возвращает тип "Подразделение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserTypes.EnterpriseType">
            <summary>
            Возвращает тип "Предприятие"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserTypes.DivisionType">
            <summary>
            Возвращает тип "Отдел"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserTypes.UserBaseType">
            <summary>
            Возвращает тип "Пользователь"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserTypes.EmployerType">
            <summary>
            Возвращает тип "Сотрудник"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserTypes.DisconnectedUserType">
            <summary>
            Возвращает тип "Отключенный пользователь"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserTypes.OutsideUserType">
            <summary>
            Возвращает тип "Внешний пользователь"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserTypes.AdministratorType">
            <summary>
            Возвращает тип "Администратор"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserTypes.PostBaseType">
            <summary>
            Возвращает тип "Должность"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserTypes.ProductionUnitType">
            <summary>
            Возвращает тип "Производственное подразделение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserTypes.ShopType">
            <summary>
            Возвращает тип "Цех"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserTypes.AreaType">
            <summary>
            Возвращает тип "Участок"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserTypes.WorkplaceType">
            <summary>
            Возвращает тип "Рабочее место"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserTypes.WorkflowRoleType">
            <summary>
            Возвращает тип "Роль бизнес-процесса"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Users.UserTypes.Keys">
            <summary>
            Идентификаторы
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.UserTypes.Keys.ProductionParameters">
            <summary>
            Идентификатор группы параметров "Параметры производственных подразделений"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Users.UserReferenceObject">
            <summary>
            Объект справочника "Группы и пользователи"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserReferenceObject.Class">
            <summary>
            Возвращает тип объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserReferenceObject.IsUser">
            <summary>
            Возвращает значение, указывающее, является ли текущий объект объектом типа "Пользователь"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserReferenceObject.IsGroup">
            <summary>
            Возвращает значение, указывающее, может ли текущий объект содержать дочерние объекты
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserReferenceObject.FullName">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserReferenceObject.Description">
            <summary>
            Возвращает параметр "Комментарий"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Users.UserReferenceObject.GetAllInternalUsers">
            <summary>
            Возвращает список всех пользователей, входящих в текущую группу
            </summary>
            <returns>Список пользователей</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Users.UserReferenceObject.GetAllInternalUsersAndGroups">
            <summary>
            Возвращает список всех пользователей и групп, входящих в текущую группу
            </summary>
            <returns>Список пользователей</returns>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.UserReferenceObject.Fields.Description">
            <summary>
            Идентификатор параметра "Комментарий"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.UserReferenceObject.Fields.FullName">
            <summary>
            Идентификатор параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.UserReferenceObject.RelationKeys.UsersToCalendarLink">
            <summary>
            Идентификатор связи "Календарь"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.UserReferenceObject.RelationKeys.UsersToWorkingTimeLink">
            <summary>
            Идентификатор связи "Изменения в календаре"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Users.UsersGroup">
            <summary>
            Объект типа "Группа пользователей" справочника "Группы и пользователи"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UsersGroup.PostAddress">
            <summary>
            Возвращает параметр "Почтовый адрес"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UsersGroup.ContactPhone">
            <summary>
            Возвращает параметр "Контактный телефон"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UsersGroup.Email">
            <summary>
            Возвращает параметр "Электронная почта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.UsersGroup.MailResponsible">
            <summary>
            Идентификатор связи "Ответственный за получение почты"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.UsersGroup.Fields.GroupManager">
            <summary>
            Руководитель группы
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.UsersGroup.Fields.PostAddress">
            <summary>
            Почтовый адрес
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.UsersGroup.Fields.Email">
            <summary>
            Адрес электронной почты
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.UsersGroup.Fields.ContactPhone">
            <summary>
            Контактный телефон
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Users.User">
            <summary>
            Объект типа "Пользователь" справочника "Группы и пользователи"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.SystemUser">
            <summary>
            Guid пользователя "Система"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.FirstName">
            <summary>
            Возвращает параметр "Имя"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.LastName">
            <summary>
            Возвращает параметр "Фамилия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.Patronymic">
            <summary>
            Возвращает параметр "Отчество"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.ShortName">
            <summary>
            Возвращает параметр "Короткое имя"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.Login">
            <summary>
            Возвращает параметр "Логин"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.Password">
            <summary>
            Возвращает параметр "Пароль"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.PasswordExpirationDate">
            <summary>
            Возвращает параметр "Срок действия пароля"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.Sex">
            <summary>
            Возвращает параметр "Пол"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.Birthday">
            <summary>
            Возвращает параметр "День рождения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.Email">
            <summary>
            Возвращает параметр "Электронная почта"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.MailSendType">
            <summary>
            Возвращает параметр "Отправка почты"
            <para>0 - только на внутреннюю </para>
            <para>1 - только на внешнюю</para>
            <para>2 - на внутреннюю и на внешнюю</para>
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.MailSendMode">
            <summary>
            Режим отправки почты
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.BusinessPhone">
            <summary>
            Возвращает параметр "Телефон служебный"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.InternalPhone">
            <summary>
            Возвращает параметр "Телефон внутренний"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.MobilePhone">
            <summary>
            Возвращает параметр "Телефон мобильный"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.HomePhone">
            <summary>
            Возвращает параметр "Телефон домашний"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.Fax">
            <summary>
            Возвращает параметр "Факс"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.BlockingDate">
            <summary>
            Возвращает параметр "Дата блокировки доступа"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.BlockingReason">
            <summary>
            Возвращает параметр "Причина блокировки доступа"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.Sid">
            <summary>
            Возвращает параметр "Учетная запись Windows"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.SidOnly">
            <summary>
            Возвращает параметр "Только авторизация Windows"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.Photo">
            <summary>
            Возвращает параметр "Фотография"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.FirstWorkDay">
            <summary>
            Возвращает параметр "Дата поступления на работу"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.MailSettings">
            <summary>
            Возвращает параметр "Настройки внешней почты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.Signature">
            <summary>
            Возвращает параметр "Изображение подписи"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.IsCurrent">
            <summary>
            Возвращает значение, указывающее, является ли пользователь текущим
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.User.IsSystem">
            <summary>
            Возвращает значение, указывающее, является ли данный пользователь пользователем "Система"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Users.User.ChangePassword(System.String,System.String,System.Boolean)">
            <summary>
            Изменяет пароль пользователя
            </summary>
            <param name="oldPassword">Старый пароль</param>
            <param name="newPassword">Новый пароль</param>
            <returns>Значение true, если пароль успешно изменен; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Users.User.ToStringBase">
            <summary>
            Возвращает строковое представление пользователя
            </summary>
            <returns>Строковое представление пользователя</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Users.User.RestoreSettings">
            <summary>
            Восстанавливает настройки пользователя по умолчанию
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Users.User.Fields">
            <summary>
            Идентификаторы параметров
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.FirstName">
            <summary>
            Идентификатор параметра "Имя"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.LastName">
            <summary>
            Идентификатор параметра "Фамилия"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.Patronymic">
            <summary>
            Идентификатор параметра "Отчество"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.ShortName">
            <summary>
            Идентификатор параметра "Короткое имя"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.Password">
            <summary>
            Идентификатор параметра "Пароль"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.PasswordExpirationDate">
            <summary>
            Идентификатор параметра "Срок действия пароля"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.Login">
            <summary>
            Идентификатор параметра "Логин"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.Sex">
            <summary>
            Идентификатор параметра "Пол"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.Photo">
            <summary>
            Идентификатор параметра "Фотография"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.Birthday">
            <summary>
            Идентификатор параметра "День рождения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.SID">
            <summary>
            Идентификатор параметра "Учетная запись Windows"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.SIDOnly">
            <summary>
            Идентификатор параметра "Только авторизация Windows"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.EMail">
            <summary>
            Идентификатор параметра "Электронная почта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.MailSendType">
            <summary>
            Идентификатор параметра "Отправка почты"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.BusinessPhone">
            <summary>
            Идентификатор параметра "Телефон служебный"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.InternalPhone">
            <summary>
            Идентификатор параметра "Телефон внутренний"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.MobilePhone">
            <summary>
            Идентификатор параметра "Телефон мобильный"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.HomePhone">
            <summary>
            Идентификатор параметра "Телефон домашний"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.Fax">
            <summary>
            Идентификатор параметра "Факс"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.FirstWorkDay">
            <summary>
            Идентификатор параметра "Дата поступления на работу"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.StartAbsentDate">
            <summary>
            Идентификатор параметра "Дата начала отсутствия"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.AbsentDate">
            <summary>
            Идентификатор параметра "Дата завершения отсутствия"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.AbsenceReason">
            <summary>
            Идентификатор параметра "Причина отсутствия"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.BlockingDate">
            <summary>
            Идентификатор параметра "Дата блокировки доступа"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.BlockingReason">
            <summary>
            Идентификатор параметра "Причина блокировки доступа"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.User.Fields.MailSettings">
            <summary>
            Идентификатор параметра "Настройки внешней почты"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Users.MailSendMode">
            <summary>
            Режим отправки почты
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.MailSendMode.Internal">
            <summary>
            На внутреннюю
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.MailSendMode.EMail">
            <summary>
            На внешнюю
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.MailSendMode.All">
            <summary>
            На внутреннюю и на внешнюю
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Users.MailSendMode.Default">
            <summary>
            По умолчанию
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Users.UserReference">
            <summary>
            Справочник "Группы и пользователи"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Users.UserReference.#ctor">
            <summary>
            Создает новый экземпляр справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Users.UserReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает новый экземпляр справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserReference.Instance">
            <summary>
            Возвращает экземпляр справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Users.UserReference.CreateReferenceObjectForClass(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект справочника указанного типа
            </summary>
            <param name="classObject">Тип создаваемого объекта справочника</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Users.UserReference.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Users.UserReference.GetAllUsersGroup">
            <summary>
            Возвращает список всех групп пользователей
            </summary>
            <returns>Список групп пользователей</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Users.UserReference.GetAllUsers">
            <summary>
            Возвращает список всех пользователей
            </summary>
            <returns>Список пользователей</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Users.UserReference.FindUsersAndGroups(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject})">
            <summary>
            Возвращает коллекцию пользователей, групп пользователей и производственных подразделений, входящий в указанную коллекцию объектов
            </summary>
            <param name="objects">Коллекция объектов справочников</param>
            <returns>Коллекция объектов, являющихся пользователями, группами пользователей или производственными подразделениями</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Users.UserReference.CanDeleteHierarchyLink(TFlex.DOCs.Model.References.ComplexHierarchyLink)">
            <summary>
            Возвращает значение, указывающее, возможно ли удаление указанного подключения
            </summary>
            <param name="link">Подключение</param>
            <returns>Значение true, если удаление подключения возможно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Users.UserReference.FindUser(System.String)">
            <summary>
            Производит поиск пользователя по его полному имени
            </summary>
            <param name="fullName">Полное имя пользователя</param>
            <returns>Пользователь</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Catalogs.ClassCatalog">
            <summary>
            Каталог "Типы"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Catalogs.ClassCatalogFolder">
            <summary>
            Папка каталога "Типы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.ClassCatalogFolder.Class">
            <summary>
            Возвращает тип объектов, отображаемых в текущей папке
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.FolderGroup.AsFolderGroup">
            <summary>
            Приводит текущую папку каталога к типу <see cref="T:TFlex.DOCs.Model.References.Catalogs.FolderGroup"/> 
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Catalogs.Catalog">
            <summary>
            Каталог справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.Catalog.#ctor(TFlex.DOCs.Model.References.Catalogs.CatalogManager)">
            <summary>
            Создает новый каталог в коллекции каталогов
            </summary>
            <param name="manager"></param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.Catalog.Manager">
            <summary>
            Возвращает коллекцию каталогов, к которой относится текущий каталог
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.Catalog.Reload">
            <summary>
            Перезагружает папки в каталоге
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.Catalog.RootFolders">
            <summary>
            Возвращает коллекцию корневых папок в каталоге
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.Catalog.Id">
            <summary>
            Возвращает Id каталога
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.Catalog.Guid">
            <summary>
            Возвращает Guid каталога
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.Catalog.Name">
            <summary>
            Возвращает или задает наименование каталога
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.Catalog.IsPrivate">
            <summary>
            Возвращает или задает значение, указывающее, является ли каталог личным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.Catalog.IsAdded">
            <summary>
            Возвращает значение, указывающее, является ли каталог добавленным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.Catalog.IsModified">
            <summary>
            Возвращает значение, указывающее, является ли каталог модифицированным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.Catalog.IsSystem">
            <summary>
            Возвращает значение, указывающее, является ли каталог системным
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.Catalog.Save">
            <summary>
            Сохраняет изменения каталога
            </summary>
            <returns>Значение true, если изменения успешно сохранены; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.Catalog.Delete">
            <summary>
            Удаляет каталог
            </summary>
            <returns>Значение true, если каталог успешно удален; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.Catalog.CreateLoader(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.Catalogs.CatalogFolder},TFlex.DOCs.Model.Search.Filter,TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Создает загрузчик объектов справочника для указанных папок каталога
            </summary>
            <param name="folders">Коллекция папок текущего каталога</param>
            <param name="filter">Фильтр справочника</param>
            <param name="formulaContext">Контекст выполнения</param>
            <returns>Загружаемая коллекция объектов справочника</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.Catalog.AccessUsersUseType">
            <summary>
            Возвращает или задает тип использования списка пользователей
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.Catalog.GetAccessUsers">
            <summary>
            Возвращает список пользователей конфигурации 
            </summary>
            <returns>Список пользователей конфигурации</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.Catalog.SetAccessUsers(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.Users.UserReferenceObject})">
            <summary>
            Устанавливает указанную коллекцию пользователей в качестве списка пользователей конфигурации
            </summary>
            <param name="references">Коллекция пользователей</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.Catalog.ToString">
            <summary>
            Возвращает строковое представление каталога
            </summary>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.Catalog.IndexOf(TFlex.DOCs.Model.References.Catalogs.CatalogFolder)">
            <summary>
            Возвращает индекс указанной папки в коллекции папок каталога
            </summary>
            <param name="item">Папка каталога</param>
            <returns>Индекс папки в коллекции папок каталога</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.Catalog.Item(System.Int32)">
            <summary>
            Возвращает папку каталога по ее индексу в коллекции папок
            </summary>
            <param name="index">Индекс папки в коллекции папок каталога</param>
            <returns>Папка каталога с указанным индексом</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.Catalog.Contains(TFlex.DOCs.Model.References.Catalogs.CatalogFolder)">
            <summary>
            Возвращает значение, указывающее, содержится ли заданная папка в коллекции папок каталога
            </summary>
            <param name="item">Папка каталога</param>
            <returns>Значение true, если папка содержится в коллекции папок каталога; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.Catalog.CopyTo(TFlex.DOCs.Model.References.Catalogs.CatalogFolder[],System.Int32)">
            <summary>
            Копирует коллекцию папок каталога в указанный массив папок, начиная с заданного индекса массива
            </summary>
            <param name="array">Массив папок каталога</param>
            <param name="arrayIndex">Индекс массива, с которого следует начинать копирование</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.Catalog.Count">
            <summary>
            Возвращает количество папок в каталоге
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.Catalog.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли коллекция папок каталога доступной только для чтения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.Catalog.GetEnumerator">
            <summary>
            Возвращает перечислитель папок для каталога
            </summary>
            <returns>Перечислитель папок каталога</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.Catalog.CompareTo(TFlex.DOCs.Model.References.Catalogs.Catalog)">
            <summary>
            Сравнивает текущий каталог с указанным
            </summary>
            <param name="other">Каталог для сравнения</param>
            <returns>Значение равное нулю, если каталоги равны; значение большее нуля, если текущий каталог больше указанного; значение меньшее нуля, если текущий каталог меньше указанного</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Catalogs.CatalogFolder">
            <summary>
            Папка каталога справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.Catalog">
            <summary>
            Возвращает каталог, в который входит папка
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.Id">
            <summary>
            Возвращает Id папки каталога
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.Guid">
            <summary>
            Возвращает Guid папки каталога
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.Name">
            <summary>
            Возвращает или задает наименование папки каталога
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.Icon">
            <summary>
            Возвращает или задает иконку папки каталога
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.ShowObjects">
            <summary>
            Возвращает или задает значение, указывающее, нужно ли для данной папки отображать вложенные объекты
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.Parent">
            <summary>
            Возврщает родительскую папку для текущей папки каталога
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.Subfolders">
            <summary>
            Возвращает коллекцию дочерних папок для текущей папки каталога
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.GetAllSubfolders">
            <summary>
            Возвращает список всех папок, входящих в текущую папку каталога
            </summary>
            <returns>Список папок каталога</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.IsAdded">
            <summary>
            Возвращает значение, указывающее, является ли папка каталога добавленной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.IsModified">
            <summary>
            Возвращает значение, указывающее, является ли папка каталога модифицированной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.IsSystem">
            <summary>
            Возвращает значение, указывающее, является ли папка каталога системной
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.Save">
            <summary>
            Сохраняет изменения папки каталога
            </summary>
            <returns>Значение true, если изменения успешно сохранены; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.Delete">
            <summary>
            Удаляет папку каталога
            </summary>
            <returns>Значение true, если папка успешно удалена; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.Objects">
            <summary>
            Возвращает коллекцию объектов, входящих в текущую папку каталога
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.AsUserFolder">
            <summary>
            Приводит текущую папку каталога к типу <see cref="T:TFlex.DOCs.Model.References.Catalogs.UserFolder"/> 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.AsSearchFolder">
            <summary>
            Приводит текущую папку каталога к типу <see cref="T:TFlex.DOCs.Model.References.Catalogs.SearchFolder"/>
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.AsFolderGroup">
            <summary>
            Приводит текущую папку каталога к типу <see cref="T:TFlex.DOCs.Model.References.Catalogs.FolderGroup"/>
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.ToString">
            <summary>
            Возвращает строковое представление папки каталога
            </summary>
            <returns>Строковое представление папки</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.CatalogFolder.CompareTo(TFlex.DOCs.Model.References.Catalogs.CatalogFolder)">
            <summary>
            Возвращает значение, указывающее, равна ли текущая папка каталога указанной
            </summary>
            <param name="other">Папка каталога для сравнения</param>
            <returns>Значение равное нулю, если папки равны; значение большее нуля, если текущая папка больше указанной; значение меньшее нуля, если текущая папка меньше указанной</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Catalogs.CatalogManager">
            <summary>
            Менеджер каталогов справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.CatalogManager.#ctor(TFlex.DOCs.Model.ReferenceInfo)">
            <summary>
            Создает новый экземпляр класса для указанного справочника
            </summary>
            <param name="reference">Описание справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.CatalogManager.#ctor(TFlex.DOCs.Model.References.Reference)">
            <summary>
            Создает новый экземпляр класса для указанного справочника
            </summary>
            <param name="reference">Справочник</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogManager.ReferenceInfo">
            <summary>
            Возвращает описание справочника, которому принадлежит менеджер каталогов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogManager.Reference">
            <summary>
            Возвращает справочник, которому принадлежит менеджер каталогов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogManager.SearchQueries">
            <summary>
            Возвращает справочник "Поисковые запросы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.CatalogManager.Reload">
            <summary>
            Перезагружает коллекцию каталогов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.CatalogManager.ToString">
            <summary>
            Возвращает строковое представление менеджера каталогов
            </summary>
            <returns>Строковое представление менеджера каталогов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.CatalogManager.IndexOf(TFlex.DOCs.Model.References.Catalogs.Catalog)">
            <summary>
            Возвращает индекс указанного каталога в коллекции каталогов справочника
            </summary>
            <param name="item">Каталог</param>
            <returns>Индекс каталога в коллекции</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogManager.Item(System.Int32)">
            <summary>
            Возвращает каталог по его индексу в коллекции каталогов справочника
            </summary>
            <param name="index">Индекст каталога в коллекции</param>
            <returns>Каталог с указанным индексом</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.CatalogManager.Contains(TFlex.DOCs.Model.References.Catalogs.Catalog)">
            <summary>
            Возвращает значение, указывающее, содержится ли заданный каталог в коллекции каталогов справочника
            </summary>
            <param name="item">Каталог</param>
            <returns>Значение true, если указанный каталог содержится в коллекции каталогов; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.CatalogManager.CopyTo(TFlex.DOCs.Model.References.Catalogs.Catalog[],System.Int32)">
            <summary>
            Копирует коллекцию каталогов в указанный массив каталогов начиная с заданного индекса
            </summary>
            <param name="array">Массив каталогов</param>
            <param name="arrayIndex">Индекс в массиве, с которого следует начинать копирование</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogManager.Count">
            <summary>
            Возвращает количество каталогов в коллекции каталогов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.CatalogManager.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли коллекция каталогов доступной только для чтения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.CatalogManager.GetEnumerator">
            <summary>
            Возвращает перечислитель каталогов в коллекции
            </summary>
            <returns></returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Catalogs.SearchFolder">
            <summary>
            Папка поиска
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.SearchFolder.#ctor(TFlex.DOCs.Model.References.Catalogs.Catalog)">
            <summary>
            Создает новую папку поиска в указанном каталоге
            </summary>
            <param name="catalog">Каталог справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.SearchFolder.#ctor(TFlex.DOCs.Model.References.Catalogs.CatalogFolder)">
            <summary>
            Создает новую папку поиска в указанной папке каталога
            </summary>
            <param name="parentFolder">Папка каталога</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.SearchFolder.GetFilter">
            <summary>
            Возвращает фильтр папки поиска
            </summary>
            <returns>Фильтр</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.SearchFolder.SetFilter(TFlex.DOCs.Model.Search.Filter)">
            <summary>
            Задает фильтр папки поиска
            </summary>
            <param name="filter">Фильтр</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.SearchFolder.GetSearchFilter">
            <summary>
            Возвращает фильтр папки поиска с учетом фильтров родительских папок
            </summary>
            <returns>Фильтр</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.SearchFolder.AsSearchFolder">
            <summary>
            Приводит текущую папку каталога к типу <see cref="T:TFlex.DOCs.Model.References.Catalogs.SearchFolder"/>
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.SearchFolder.ParameterSearchFolder">
            <summary>
            Параметр папки поиска
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.SearchFolder.IsCreatedByParameter">
            <summary>
            Возвращает или задает значение, указывающее, была ли создана папка с помощью подбора значений параметра
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Catalogs.UserFolder">
            <summary>
            Папка с ручным наполнением
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.UserFolder.#ctor(TFlex.DOCs.Model.References.Catalogs.Catalog)">
            <summary>
            Создает новую папку в указанном каталоге
            </summary>
            <param name="catalog">Каталог справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.UserFolder.#ctor(TFlex.DOCs.Model.References.Catalogs.CatalogFolder)">
            <summary>
            Создает новую папку в указанной папке каталога
            </summary>
            <param name="parentFolder">Папка каталога</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Catalogs.UserFolder.AsUserFolder">
            <summary>
            Приводит текущую папку каталога к типу <see cref="T:TFlex.DOCs.Model.References.Catalogs.UserFolder"/> 
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.UserFolder.Add(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Добавляет в папку указанный объект справочника
            </summary>
            <param name="referenceObject">Объект справочника</param>
            <returns>Значение true, если объект справочника успешно добавлен; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.UserFolder.Add(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject})">
            <summary>
            Добавляет в папку указанную коллекцию объектов справочника
            </summary>
            <param name="objects">Коллекция объектов справочника</param>
            <returns>Список объектов, добавленных в папку в результате данной операции; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.UserFolder.Remove(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Удаляет из папки указанный объект справочника
            </summary>
            <param name="referenceObject">Объект справочника</param>
            <returns>Значение true, если объект справочника успешно удален; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Catalogs.UserFolder.Remove(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject})">
            <summary>
            Удаляет из папки указанную коллекцию объектов справочника
            </summary>
            <param name="objects">Коллекция объектов справочника</param>
            <returns>Список объектов, удаленных из папки в результате данной операции; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Certificate.Certificate">
            <summary>
            Объект справочника "Сертификаты"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.Certificate.#ctor(TFlex.DOCs.Model.References.Certificate.CertificateReference)">
            <summary>
            Создать экземпляр объекта
            </summary>
            <param name="reference">Справочник "Сертификаты"</param>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Certificate.Certificate.isReallyNewCertificate">
            <summary>
            Таки он действительно новый?
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Certificate.Certificate.Class">
            <summary>
            Возвращет описание типа объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Certificate.Certificate.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Certificate.Certificate.IsExpired">
            <summary>
            Истёк ли срок действия сертификата
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Certificate.Certificate.ExpirationDate">
            <summary>
            Возвращает параметр "Окончание срока действия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Certificate.Certificate.Algorithm">
            <summary>
            Возвращает параметр "Алгоритм шифрования"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Certificate.Certificate.Hash">
            <summary>
            Возвращает параметр "Пароль"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Certificate.Certificate.Note">
            <summary>
            Возвращает параметр "Примечание"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Certificate.Certificate.BeginningOfExpiration">
            <summary>
            Возвращает параметр "Начало срока действия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Certificate.Certificate.UseTrustedUsersList">
            <summary>
            Возвращает параметр "Использовать список доверенных пользователей"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Certificate.Certificate.EncryptedText">
            <summary>
            Зашифрованный текст
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.Certificate.GetSymmetricKeyName">
            <summary>
            Получить имя симметричного ключа, связанного с сертификатом
            </summary>
            <returns>Имя симметричного ключа, связанного с сертификатом</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.Certificate.GetAsymmetricKeyName">
            <summary>
            Получить имя асимметричного ключа, связанного с сертификатом
            </summary>
            <returns>Имя асимметричного ключа, связанного с сертификатом</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.Certificate.OpenCloseSymmetricKey(System.String)">
            <summary>
            Попробовать открыть и закрыть ключ с помощью указанного пароля
            </summary>
            <param name="phKeyPassword">Первичный хэш ключа</param>
            <returns>true - пароль был подобран успешно</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.Certificate.AlterAsymmetricKey(System.String,System.String)">
            <summary>
            Изменить пароль для асимметричного ключа
            </summary>
            <param name="oldPasswordHash">Старый пароль (первичный хэш) - [PH]</param>
            <param name="newPasswordHash">Новый пароль (первичный хэш) - [PH]</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.Certificate.AlterAsymmetricKey">
            <summary>
            Изменить пароль для асимметричного ключа
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.Certificate.CreateKeysPair(System.String)">
            <summary>
            Создать (или отыскать существующую) пару ключей шифрования, связанных с сертификатом
            </summary>
            <param name="sourcePasswordHash">Первичный хэш пароля для шифрования - [PH]</param>
            <returns>Имя симметричного ключа шифрования / имя асимметричного ключа шифрования</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.Certificate.CreateKeysPair">
            <summary>
            Создать (или отыскать существующую) пару ключей шифрования, связанных с сертификатом
            </summary>
            <returns>Имя симметричного ключа шифрования / имя асимметричного ключа шифрования</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.Certificate.IsCertificateAvailable">
            <summary>
            Проверить, доступен ли сертификат для текущего пользователя
            </summary>
            <returns>true - текущий сертификат может быть открыт текущим пользователем</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.Certificate.CreateFilter(TFlex.DOCs.Model.ServerConnection,System.Boolean)">
            <summary>
            Создать фильтр для объектов типа "Сертификаты" с учётом списка доверенных пользователей
            </summary>
            <param name="connection">Соединение с сервером приложений</param>
            <param name="showExpired">Показывать сертификаты с истёкшим сроком действия</param>
            <returns>Фильтр для объектов типа "Сертификаты" с учётом списка доверенных пользователей</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Certificate.Certificate.CertificateParameters">
            <summary>
            Параметры сертификата
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.Certificate.CertificateParameters.#ctor(TFlex.DOCs.Model.References.Certificate.Certificate)">
            <summary>
            Создать коллекцию параметров сертификата
            </summary>
            <param name="owner">Объект-владелец</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TFlex.DOCs.Model.References.Certificate.Certificate.CertificateParameters.IsReadOnly(TFlex.DOCs.Model.Structure.ParameterInfo)" -->
        <member name="P:TFlex.DOCs.Model.References.Certificate.Certificate.CertificateParameters.Object">
            <summary>
            Объект-владелец
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.Certificate.CreateParameters">
            <summary>
            Создать коллекцию параметров
            </summary>
            <returns>Коллекция параметров</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Certificate.Certificate.IsNewCertificate">
            <summary>
            Новый ли сертификат
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.Certificate.CheckHashCode(System.Boolean,System.Boolean)">
            <summary>
            Проверить корректность кода доступа, при необходимости вывалить исключение
            </summary>
            <param name="throwException">true - вместо возврата ошибки сгенерировать исключение</param>
            <param name="quickCheck">true - проверка выполняется только для существующего сертификата, без генерации исключения, без очистки полей</param>
            <returns>true - проверка успешна, false - ошибка</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.Certificate.OnSaving">
            <summary>
            Сохранение объекта
            </summary>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.Certificate.OnDeleting">
            <summary>
            Метод вызывается перед удалением объекта
            </summary>
            <returns>true - объект можно удалять</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.Certificate.OnDelete">
            <summary>
            Вызывается при удалении объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.Certificate.OnSave(System.Boolean)">
            <summary>
            Вызывается после сохранения объекта
            </summary>
            <param name="isAdded">true - объект был добавлен</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Certificate.Certificate.UserCertificates">
            <summary>
            Возвращает связанные объекты справочника "Группы и пользователи" по связи "Доверенные пользователи"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.Certificate.AddUserCertificates(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект справочника "Группы и пользователи" по связи "Доверенные пользователи"
            </summary>
            <param name="newLinkedObject">Подключаемый объект</param>
            <returns>Подключённый объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.Certificate.RemoveUserCertificates(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Отключает объект справочника "Группы и пользователи" по связи "Доверенные пользователи"
            </summary>
            <param name="linkedObject">Связанный объект</param>
            <returns>true, если объект был отключен</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Certificate.Certificate.FieldKeys">
            <summary>
            Уникальные идентификаторы (GUID) параметров справочника "Сертификаты"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Certificate.Certificate.FieldKeys.Name">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Certificate.Certificate.FieldKeys.ExpirationDate">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Окончание срока действия"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Certificate.Certificate.FieldKeys.Algorithm">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Алгоритм шифрования"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Certificate.Certificate.FieldKeys.Hash">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Хэш ключа"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Certificate.Certificate.FieldKeys.Note">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Примечание"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Certificate.Certificate.FieldKeys.BeginningOfExpiration">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Начало срока действия"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Certificate.Certificate.FieldKeys.UseTrustedUsersList">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Использовать список доверенных пользователей"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Certificate.Certificate.FieldKeys.EncryptedText">
            <summary>
            Зашифрованный текст
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Certificate.Certificate.RelationKeys">
            <summary>
            Уникальные идентификаторы (GUID) связей и списков объектов справочника "Сертификаты"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Certificate.Certificate.RelationKeys.UserCertificates">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Доверенные пользователи"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Certificate.CertificateReference">
            <summary>
            Справочник "Сертификаты"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Certificate.CertificateReference.ReferenceId">
            <summary>
            Представляет уникальный идентификатор (GUID) справочника "Сертификаты"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.CertificateReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Инициализирует новый экземпляр CertificateReference для работы с объектами справочника "Сертификаты"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.CertificateReference.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Инициализирует новый экземпляр CertificateReference для работы с объектами справочника "Сертификаты"
            </summary>
            <param name="masterGroup">Группа параметров</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Certificate.CertificateReference.Classes">
            <summary>
            Возвращает типы объектов справочника "Сертификаты"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.CertificateReference.CreateReferenceObjectForClass(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создать экземпляр объекта из справочника "Сертификаты"
            </summary>
            <param name="classObject">Описание типа объекта</param>
            <returns>Экземпляр объекта из справочника "Сертификаты"</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Certificate.CertificateReference.Factory">
            <summary>
            Фабрика по созданию экземпляров справочника "Сертификаты"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.CertificateReference.Factory.#ctor">
            <summary>
            Что нам стоит дом построить? Или фабрику, маленькую такую, но очень полезную?
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.CertificateReference.Factory.CreateReference(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создать экземпляр справочника "Сертификаты" по группе параметров
            </summary>
            <param name="masterGroup">Группа параметров</param>
            <returns>Экземпляр справочника "Сертификаты"</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.CertificateReference.Factory.CreateClassTree(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создать дерево типов справочника "Сертификаты"
            </summary>
            <param name="masterGroup">Группа параметров</param>
            <returns>Экземпляр дерева типов справочника "Сертификаты"</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Certificate.CertificateType">
            <summary>
            Тип объекта справочника "Сертификаты"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.CertificateType.#ctor(TFlex.DOCs.Model.References.Certificate.CertificateTypes)">
            <summary>
            Создать описание типа
            </summary>
            <param name="owner">Дерево типов справочника "Сертификаты"</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Certificate.CertificateType.IsCertificate">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Сертификаты" или порождён от него
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Certificate.CertificateType.Classes">
            <summary>
            Возвращает типы объектов справочника "Сертификаты"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.CertificateType.GetCertificates">
            <summary>
            Возвращает список сертификатов
            </summary>
            <returns>Список сертификатов</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Certificate.CertificateTypes">
            <summary>
            Дерево типов объектов справочника "Сертификаты"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.CertificateTypes.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создать дерево типов объектов справочника "Сертификаты"
            </summary>
            <param name="group"></param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Certificate.CertificateTypes.Certificate">
            <summary>
            Возвращает описание типа объектов "Сертификаты"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Certificate.CertificateTypes.CreateClassObject(System.Guid)">
            <summary>
            Создать экземпляр описания типа объектов справочника "Сертификаты"
            </summary>
            <param name="classGuid">Guid описания типа объектов</param>
            <returns>Экземпляр описания типа объектов справочника "Сертификаты"</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Certificate.CertificateTypes.Keys">
            <summary>
            Уникальные идентификаторы (GUID) типов объектов справочника "Сертификаты"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Certificate.CertificateTypes.Keys.Certificate">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Сертификаты"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Events.IEntryPointProvider">
            <summary>
            Интерфейс для представления класса, содержащего коллекцию точек входа обработчиков события
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.IEntryPointProvider.GetEntryPoints">
            <summary>
            Возвращает коллекцию точек входа
            </summary>
            <returns>Коллекция точек входа</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Events.IEntryPoint">
            <summary>
            Интерфес для представления точки входа обработчика события
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.IEntryPoint.Name">
            <summary>
            Возвращает наименование точки входа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.IEntryPoint.Title">
            <summary>
            Возвращает заголовок точки входа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.IEntryPoint.ReturnType">
            <summary>
            Возвращает тип возвращаемого значения точки входа
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.IEntryPoint.GetParameters">
            <summary>
            Возврщает набор параметров точки входа
            </summary>
            <returns>Массив параметров точки входа</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Events.IEntryPointParameter">
            <summary>
            Интерфейс для представления параметра точки входа обработчика 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.IEntryPointParameter.Name">
            <summary>
            Возвращает наименование параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.IEntryPointParameter.Title">
            <summary>
            Возвращает заголовок параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.IEntryPointParameter.Type">
            <summary>
            Возвращает тип параметра
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Events.EntryPoint">
            <summary>
            Точка входа обработчика события
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EntryPoint.#ctor(System.String,System.Type,TFlex.DOCs.Model.References.Events.EntryPoint.Parameter[])">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="name">Наименование метода</param>
            <param name="returnType">Тип возвращаемого значения метода</param>
            <param name="parameters">Список аргументов метода</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EntryPoint.#ctor(System.String,System.String,System.Type,TFlex.DOCs.Model.References.Events.EntryPoint.Parameter[])">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="name">Наименование метода</param>
            <param name="title">Заголовок обработчика</param>
            <param name="returnType">Тип возвращаемого значения метода</param>
            <param name="parameters">Список аргументов метода</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EntryPoint.#ctor(System.Reflection.MethodInfo)">
            <summary>
            Создает новый экземпляр класса 
            </summary>
            <param name="method">Метод</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EntryPoint.ToString">
            <summary>
            Возвращает строковое представление точки входа обработчика
            </summary>
            <returns>Строковое представление точки входа обработчика</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.EntryPoint.Name">
            <summary>
            Возвращает наименование метода точки входа обработчика
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.EntryPoint.Title">
            <summary>
            Возвращает заголовок точки входа обработчика
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.EntryPoint.ReturnType">
            <summary>
            Возвращает тип возвращаемого значения точки входа
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EntryPoint.GetParameters">
            <summary>
            Возвращает аргументы точки входа
            </summary>
            <returns>Массив аргументов точки входа</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Events.EntryPoint.Parameter">
            <summary>
            Параметр точки входа
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EntryPoint.Parameter.#ctor(System.Reflection.ParameterInfo)">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="parameter">Параметр метода</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EntryPoint.Parameter.ToString">
            <summary>
            Возвращает строковое представление параметра
            </summary>
            <returns>Строковое представление параметра</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.EntryPoint.Parameter.Name">
            <summary>
            Возвращает наименование параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.EntryPoint.Parameter.Title">
            <summary>
            Возвращает заголовок параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.EntryPoint.Parameter.Type">
            <summary>
            Возвращает тип параметра
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Events.SystemEventHandler">
            <summary>
            Системный обработчик события группы параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.SystemEventHandler.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Model.References.Events.ParameterGroupEvent,TFlex.DOCs.Model.References.Events.ISystemEventHandlerProvider)">
            <summary>
            Создает новый экземпляр обработчика
            </summary>
            <param name="group">Группа параметров</param>
            <param name="event">Событие группы параметров</param>
            <param name="provider">Системный обработчик событий</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.SystemEventHandler.#ctor(TFlex.DOCs.Model.Classes.ClassObject,TFlex.DOCs.Model.References.Events.ParameterGroupEvent,TFlex.DOCs.Model.References.Events.ISystemEventHandlerProvider)">
            <summary>
            Создает новый экземпляр обработчика
            </summary>
            <param name="classObject">Тип объектов справочника</param>
            <param name="event">Событие группы параметров</param>
            <param name="provider">Системный обработчик событий</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.SystemEventHandler.Provider">
            <summary>
            Возвращает или задает системный обработчик событий
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.SystemEventHandler.HandlerName">
            <summary>
            Возвращает наименование обработчика
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.SystemEventHandler.IsSystem">
            <summary>
            Возвращает значение, указывающее, является ли обработчик системным
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Events.ISystemEventHandlerProvider">
            <summary>
            Интерфейс для представления системного обработчика событий
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.ISystemEventHandlerProvider.Guid">
            <summary>
            Возвращает Guid обработчика
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.ISystemEventHandlerProvider.HandlerName">
            <summary>
            Возвращает наименование обработчика
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.ISystemEventHandlerProvider.Run(TFlex.DOCs.Model.Macros.MacroContext,System.String,System.Object[])">
            <summary>
            Запускает обработчик
            </summary>
            <param name="context">Контекст выполнения</param>
            <param name="entryPoint">Точка входа обработчика</param>
            <param name="args">Массив входных параметров</param>
            <returns>Значение, возвращаемое методом обработчика</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.ISystemEventHandlerProvider.SupportsParameterGroup(System.Guid)">
            <summary>
            Возвращает значение, указывающее, поддерживает ли обработчик указанную группу параметров
            </summary>
            <param name="parameterGroupGuid">Guid группы параметров</param>
            <returns>Значение true, если указанная группа параметров поддерживается обработчиком; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Events.UIEvent">
            <summary>
            Событие группы параметров в пользовательском интерфейсе
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Events.EventCollection">
            <summary>
            Коллекция событий
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.EventCollection.Handlers">
            <summary>
            Возвращает коллекцию обработчиков событий
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventCollection.GetSystemEvents">
            <summary>
            Возвращает список системных событий
            </summary>
            <returns>Список системных событий</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventCollection.GetUserEvents">
            <summary>
            Возвращает список пользовательских событий
            </summary>
            <returns>Список пользовательских событий</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventCollection.GetUserEvent(System.String)">
            <summary>
            Возвращает пользовательское событие с заданным наименованием или Guid
            </summary>
            <param name="event">Наименование или Guid события</param>
            <returns>Пользовательское событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventCollection.Find(System.String)">
            <summary>
            Возвращает событие с заданным наименованием или Guid
            </summary>
            <param name="event">Наименование или Guid события</param>
            <returns>Событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventCollection.IndexOf(TFlex.DOCs.Model.References.Events.ParameterGroupEvent)">
            <summary>
            Возвращает индекс указанного события в коллекции
            </summary>
            <param name="item">Событие</param>
            <returns>Индекс события в коллекции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventCollection.Insert(System.Int32,TFlex.DOCs.Model.References.Events.ParameterGroupEvent)">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventCollection.RemoveAt(System.Int32)">
            <summary>
            Удаляет из коллекции событие с заданным индексом
            </summary>
            <param name="index">Индекс события в коллекции</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.EventCollection.Item(System.Int32)">
            <summary>
            Возвращает событие по его индексу в коллекции
            </summary>
            <param name="index">Индекс события в коллекции</param>
            <returns>Событие с заданным индексом</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventCollection.Add(TFlex.DOCs.Model.References.Events.ParameterGroupEvent)">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventCollection.Clear">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventCollection.Contains(TFlex.DOCs.Model.References.Events.ParameterGroupEvent)">
            <summary>
            Возвращает значение, указывающее, содержится ли заданное событие в коллекции
            </summary>
            <param name="item">Событие</param>
            <returns>Значение true, если указанное событие содержится в коллекции; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventCollection.CopyTo(TFlex.DOCs.Model.References.Events.ParameterGroupEvent[],System.Int32)">
            <summary>
            Копирует коллекцию событий в заданный массив событий начиная с указанного индекса
            </summary>
            <param name="array">Массив событий для копирования</param>
            <param name="arrayIndex">Индекс в массиве событий</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.EventCollection.Count">
            <summary>
            Возвращает количество событий в коллекции
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.EventCollection.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли коллекция доступной только для чтения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventCollection.Remove(TFlex.DOCs.Model.References.Events.ParameterGroupEvent)">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventCollection.GetEnumerator">
            <summary>
            Возвращает перечислитель событий коллекции
            </summary>
            <returns>Перечислитель событий</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Events.GroupEventRaiseEventArgs">
            <summary>
            Класс, содержащий данные о событии <see cref="E:TFlex.DOCs.Model.References.Reference.EventRaised"/>
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.GroupEventRaiseEventArgs.#ctor">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.GroupEventRaiseEventArgs.Event">
            <summary>
            Возвращает или задает событие группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.GroupEventRaiseEventArgs.Context">
            <summary>
            Возвращает или задает контекст выполнения события
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Events.GroupEventRaisingEventArgs">
            <summary>
            Класс, содержащий данные о событии <see cref="E:TFlex.DOCs.Model.References.Reference.EventRaising"/> 
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.GroupEventRaisingEventArgs.#ctor">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.GroupEventRaisingEventArgs.Cancel">
            <summary>
            Возвращает или задает значение, указывающее, должно ли событие быть отменено
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler">
            <summary>
            Обработчик события группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler.Owner">
            <summary>
            Коллекция обработчиков событий, в которую входит текущий обработчик
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler.Id">
            <summary>
            Возвращает Id обработчика
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler.Class">
            <summary>
            Возвращает тип объектов справочника, для которого задан обработчик события
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler.Event">
            <summary>
            Возвращает событие, для которого задан обработчик
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler.HandlerId">
            <summary>
            Возвращает Guid обработчика
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler.IsModified">
            <summary>
            Возвращает значение, указывающее, является ли обработчик модифицированным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler.HandlerName">
            <summary>
            Возвращает наименование обработчика
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler.EntryPoint">
            <summary>
            Возвращает точку входа обработчика
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler.IsMacro">
            <summary>
            Возвращает значение, указывающее, является ли обработчик макросом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler.IsSystem">
            <summary>
            Возвращает значение, указывающее, является ли обработчик системным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler.Priority">
            <summary>
            Возвращает приоритет обработчика
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler.Save">
            <summary>
            Сохраняет изменения обработчика
            </summary>
            <returns>Значение true, если изменения успешно сохранены; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если заданный объект равен текущему; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler.GetHashCode">
            <summary>
            Возвращает хэш-код обработчика
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler.ToString">
            <summary>
            Возвращает строковое представление обработчика
            </summary>
            <returns>Строковое представление обработчика</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler.CompareTo(TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler)">
            <summary>
            Сравнивает указанный обработчик с текущим
            </summary>
            <param name="other">Обработчик для сравнения</param>
            <returns>Значение равное нулю, если обработчики равны; значение большее нуля, если текущий обработчик больше указанного; значение меньшее нуля, если текущий обработчик меньше указанного</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Events.ParameterGroupEvent">
            <summary>
            Событие группы параметров
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.ReferenceObjectCreating">
            <summary>
            Возвращает событие "Создание объекта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.ReferenceObjectSaving">
            <summary>
            Возвращает событие "Сохранение объекта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.ReferenceObjectDeleting">
            <summary>
            Возвращает событие "Удаление объекта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.ReferenceObjectParameterChanged">
            <summary>
            Возвращает событие "Завершение изменения параметра объекта" 
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.ReferenceObjectLinkChanged">
            <summary>
            Возвращает событие "Завершение изменения связи объекта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.ReferenceUIObjectBeginEdit">
            <summary>
            Возвращает событие "Начало редактирования свойств объекта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.ReferenceUIObjectEndEdit">
            <summary>
            Возвращает событие "Завершение редактирования свойств объекта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.ReferenceObjectStageChanged">
            <summary>
            Возвращает событие "Завершение изменения стадии объекта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.ReferenceObjectSignatureChanged">
            <summary>
            Возвращает событие "Изменение подписи объекта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.HierarchyLinkCreating">
            <summary>
            Возвращает событие "Создание подключения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.HierarchyLinkSaving">
            <summary>
            Возвращает событие "Сохранение подключения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.HierarchyLinkDeleting">
            <summary>
            Возвращает событие "Удаление подключения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.ReferenceObjectCheckingIn">
            <summary>
            Возвращает событие "Применение изменений"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.ReferenceObjectUndoCheckOut">
            <summary>
            Возвращает событие "Отмена изменений"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.ReferenceObjectCheckingOut">
            <summary>
            Возвращает событие "Взятие на редактирование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.CreateCommandCollection">
            <summary>
            Возвращает событие "Создание коллекции команд для объекта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.NomenclatureCreateVersion">
            <summary>
            Возвращает событие "Создание исполнения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.NomenclatureCreateVariant">
            <summary>
            Возвращает событие "Создание варианта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.NomenclatureUpdateByVariant">
            <summary>
            Возвращает событие "Обновление на основе варианта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.ReferenceObjectOrderChanged">
            <summary>
            Возвращает событие "Изменение порядкового номера объекта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.ReferenceObjectSaved">
            <summary>
            Возвращает событие "Завершение сохранения объекта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.ReferenceObjectStageChanging">
            <summary>
            Возвращает событие "Изменение стадии объекта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.TechnologyGenerateParameterValue">
            <summary>
            Возвращает событие "Генерация значения параметра"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.AccessChanged">
            <summary>
            Возвращает событие "Изменение доступа"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.RestoreObjectChanged">
            <summary>
            Возвращает событие "Завершение восстановления объекта из корзины"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.ReferenceObjectLinkChanging">
            <summary>
            Возвращает событие "Изменение связи объекта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.ReferenceObjectParameterChanging">
            <summary>
            Возвращает событие "Изменение параметра объекта" 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.Id">
            <summary>
            Возвращает Id события
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.Guid">
            <summary>
            Возвращает Guid события
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.Name">
            <summary>
            Возвращает наименование события
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.IsSystem">
            <summary>
            Возвращает значение, указывающее, является ли событие системным
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.op_Equality(TFlex.DOCs.Model.References.Events.ParameterGroupEvent,TFlex.DOCs.Model.References.Events.ParameterGroupEvent)">
            <summary>
            Определяет, равны ли два указанных события
            </summary>
            <param name="event1">Первое событие для сравнения</param>
            <param name="event2">Второе событие для сравнения</param>
            <returns>Значение true, если указанные события равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.op_Inequality(TFlex.DOCs.Model.References.Events.ParameterGroupEvent,TFlex.DOCs.Model.References.Events.ParameterGroupEvent)">
            <summary>
            Определяет, различаются ли два указанных события
            </summary>
            <param name="event1">Первое событие для сравнения</param>
            <param name="event2">Второе событие для сравнения</param>
            <returns>Значение true, если указанные события различаются; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если заданный объект равен текущему; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.GetHashCode">
            <summary>
            Возвращает хэш-код текущего события
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.ToString">
            <summary>
            Возвращает строковое представление события
            </summary>
            <returns>Строковое представление события</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.ParameterGroupEvent.CompareTo(TFlex.DOCs.Model.References.Events.ParameterGroupEvent)">
            <summary>
            Сравнивает текущее событие с указанным
            </summary>
            <param name="other">Событие для сравнения</param>
            <returns>Значение равное нулю, если события равны; значение большее нуля, если текущее событие больше указанного; значение меньшее нуля, если текущее событие меньше указанного</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Events.MacroEventHandler">
            <summary>
            Обработчик-макрос события группы параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.MacroEventHandler.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Model.References.Events.ParameterGroupEvent,TFlex.DOCs.Model.References.Macros.Macro)">
            <summary>
            Создает новый экземпляр обработчика
            </summary>
            <param name="group">Группа параметров</param>
            <param name="event">Событие группы параметров</param>
            <param name="macro">Макрос</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.MacroEventHandler.#ctor(TFlex.DOCs.Model.Classes.ClassObject,TFlex.DOCs.Model.References.Events.ParameterGroupEvent,TFlex.DOCs.Model.References.Macros.Macro)">
            <summary>
            Создает новый экземпляр обработчика
            </summary>
            <param name="classObject">Тип объектов справочника</param>
            <param name="event">Событие группы параметров</param>
            <param name="macro">Макрос</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.MacroEventHandler.Macro">
            <summary>
            Возвращает или задает макрос
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.MacroEventHandler.HandlerName">
            <summary>
            Возвращает наименование обработчика
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.MacroEventHandler.IsMacro">
            <summary>
            Возвращает значение, указывающее, является ли обработчик макросом
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Events.UserEvent">
            <summary>
            Пользовательское событие группы параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.UserEvent.#ctor(TFlex.DOCs.Model.References.Events.EventCollection)">
            <summary>
            Создает новый экземпляр события
            </summary>
            <param name="events">Коллекция событий, в которую входит текущее событие</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEvent.Events">
            <summary>
            Возвращает коллекцию событий, в которую входит текущее событие
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEvent.Name">
            <summary>
            Возвращает или задает наименование события
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEvent.Button">
            <summary>
            Возвращает или задает описание кнопки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEvent.IsAdded">
            <summary>
            Возвращает значение, указывающее, является ли группа параметров добавленной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEvent.IsModified">
            <summary>
            Возвращает значение, указывающее, является ли группа параметров модифицированной
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.UserEvent.Save">
            <summary>
            Сохраняет изменения группы параметров
            </summary>
            <returns>Значение true, если изменения успешно сохранены; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.UserEvent.Delete">
            <summary>
            Удаляет событие
            </summary>
            <returns>Значение true, если событие успешно удалено; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Events.UserEventButtonInfo">
            <summary>
            Описание кнопки панели инструментов для пользовательского события группы параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.#ctor">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.#ctor(TFlex.DOCs.Model.References.Events.UserEventButtonInfo)">
            <summary>
            Создает новый экземпляр класса на основании указанного экземпляра
            </summary>
            <param name="source">Описание кнопки для копирования свойств</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.Event">
            <summary>
            Возвращает событие
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.Text">
            <summary>
            Возвращает или задает текст на кнопке
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.MenuCaption">
            <summary>
            Возвращает или задает имя выпадающего меню 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.Hint">
            <summary>
            Возвращает или задает подсказку к кнопке
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.ValidateMethod">
            <summary>
            Возвращает или задает метод валидации состояния кнопки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.FilterEnable">
            <summary>
            Возвращает или задает фильтр, при выполнении условий которого кнопка блокируется
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.FilterVisible">
            <summary>
            Возвращает или задает фильтр, при выполнении условий которого кнопка скрывается
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.Position">
            <summary>
            Возвращает или задает позицию в меню, в которой должна отображаться кнопка
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.EditObject">
            <summary>
            Возвращает или задает значение, указывающее, следует ли редактировать объект при выполнении события
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.AllowedForUsers">
            <summary>
            Возвращает или задает значение, указывающее, доступна ли кнопка для пользователей исключая указанных в списке Users
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.Users">
            <summary>
            Возвращает или задаёт список пользвателей, для которых доступна или нет кнопка
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.ExecuteForEachObject">
            <summary>
            Возвращает или задает значение, указывающее, следует ли выполнять событие для каждого выделенного объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.Icon">
            <summary>
            Возвращает или задает иконку кнопки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.PopupIcon">
            <summary>
            Возвращает или задает иконку выпадающего меню
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.IconBytes">
            <summary>
            Возвращает или задает массив байтов, содержащий иконку кнопки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.PopupIconBytes">
            <summary>
            Возвращает или задает массив байтов, содержащий иконку выпадающего меню
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.GetHashCode">
            <summary>
            Возвращает хэш-код объекта
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если заданный объект равен текущему; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.AllowedForUser(System.Int32)">
            <summary>
            Возращает, доступна ли кнопка для пользователя с указанным Id
            </summary>
            <param name="userId">Id пользователя</param>
            <returns></returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.PositionInMenu">
            <summary>
            Позиция в меню
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.PositionInMenu.BeforeOperationCommands">
            <summary>
            В начале подменю "Операции"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.PositionInMenu.AfterOperationCommands">
            <summary>
            В конце подменю "Операции"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.PositionInMenu.BeforeCommands">
            <summary>
            В начале панели и контекстном меню
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.PositionInMenu.AfterCommands">
            <summary>
            В конце панели и контекстном меню
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.PositionInMenu.PropertyDialogBeforeCommands">
            <summary>
            Слева в диалоге свойств объекта
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.PositionInMenu.PropertyDialogAfterCommands">
            <summary>
            Справа в диалоге свойств объекта
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.PositionInMenu.PropertyPanelBeforeCommands">
            <summary>
            Слева в панели свойств объекта (режим редактирования)
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.PositionInMenu.PropertyPanelAfterCommands">
            <summary>
            Справа в панели свойств объекта (режим редактирования)
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.PositionInMenu.AfterAdditionalCommands">
            <summary>
            В подменю "Операции->Дополнительно"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.PositionInMenu.ToolbarBeforeCommands">
            <summary>
            В начале панели
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.PositionInMenu.TooolbarAfterCommands">
            <summary>
            В конце панели
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.UserEventButtonInfo.Clone">
            <summary>
            Создает копию текущего объекта
            </summary>
            <returns>Новый объект - копия текущего</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Events.EventHandlerCollection">
            <summary>
            Коллекция обработчиков событий
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.EventHandlerCollection.Events">
            <summary>
            Возвращает коллекцию событий
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventHandlerCollection.RaiseEvent(TFlex.DOCs.Model.References.Events.UserEvent,TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Вызывает указанное пользовательское событие с заданным контекстом
            </summary>
            <param name="userEvent">Вызываемое событие</param>
            <param name="context">Контекст вызова</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventHandlerCollection.RaiseEvent(TFlex.DOCs.Model.References.Events.UIEvent,TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Вызывает указанное событие пользовательского интерфейса с заданным контекстом
            </summary>
            <param name="uiEvent">Событие пользовательского интерфейса</param>
            <param name="context">Контекст вызова</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.EventHandlerCollection.ParameterGroup">
            <summary>
            Возвращает группу параметров, к которой относится коллекция обработчиков
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventHandlerCollection.AddHandler(TFlex.DOCs.Model.References.Events.ParameterGroupEvent,TFlex.DOCs.Model.References.Macros.Macro)">
            <summary>
            Добавляет обработчик-макрос для указанного события
            </summary>
            <param name="groupEvent">Событие</param>
            <param name="macro">Макрос</param>
            <returns>Обработчик события</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventHandlerCollection.AddHandler(TFlex.DOCs.Model.References.Events.ParameterGroupEvent,TFlex.DOCs.Model.References.Macros.Macro,System.Int32)">
            <summary>
            Добавляет обработчик-макрос для указанного события
            </summary>
            <param name="groupEvent">Событие</param>
            <param name="macro">Макрос</param>
            <param name="priority">Приоритет обработчика</param>
            <returns>Обработчик события</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventHandlerCollection.AddHandler(TFlex.DOCs.Model.References.Events.ParameterGroupEvent,TFlex.DOCs.Model.References.Macros.Macro,System.String,System.Int32)">
            <summary>
            Добавляет обработчик-макрос для указанного события
            </summary>
            <param name="groupEvent">Событие</param>
            <param name="macro">Макрос</param>
            <param name="entryPoint">Метод макроса</param>
            <param name="priority">Приоритет обработчика</param>
            <returns>Обработчик события</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventHandlerCollection.AddHandler(TFlex.DOCs.Model.References.Events.ParameterGroupEvent,TFlex.DOCs.Model.References.Events.ISystemEventHandlerProvider,System.String,System.Int32)">
            <summary>
            Добавляет системный обработчик для указанного события
            </summary>
            <param name="groupEvent">Событие</param>
            <param name="provider">Системный обработчик</param>
            <param name="entryPoint">Метод обработчика</param>
            <param name="priority">Приоритет обработчика</param>
            <returns>Системный обработчик события</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventHandlerCollection.IndexOf(TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler)">
            <summary>
            Возвращает индекс указанного обработчика в коллекции
            </summary>
            <param name="item">Обработчик</param>
            <returns>Индекс обработчика в коллекции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventHandlerCollection.Insert(System.Int32,TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler)">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventHandlerCollection.RemoveAt(System.Int32)">
            <summary>
            Удаляет из коллекции обработчик с указанным индексом
            </summary>
            <param name="index">Индекс обработчика в коллекции</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.EventHandlerCollection.Item(System.Int32)">
            <summary>
            Возвращает обработчик события по его индексу в коллекции
            </summary>
            <param name="index">Индекс обработчика в коллекции</param>
            <returns>Обработчик события</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventHandlerCollection.Add(TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler)">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventHandlerCollection.Clear">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventHandlerCollection.Contains(TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler)">
            <summary>
            Возвращает значение, указывающее, содержится ли указанный обработчик в коллекции
            </summary>
            <param name="item">Обработчик</param>
            <returns>Значение true, если обработчик содержится в коллекции; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventHandlerCollection.CopyTo(TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler[],System.Int32)">
            <summary>
            Копирует коллекцию обработчиков в указанный массив начиная с заданного индекса
            </summary>
            <param name="array">Массив обработчиков</param>
            <param name="arrayIndex">Индекс в массиве</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.EventHandlerCollection.Count">
            <summary>
            Возвращает количество обработчиков в коллекции
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Events.EventHandlerCollection.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли коллекция доступной только для чтения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventHandlerCollection.Remove(TFlex.DOCs.Model.References.Events.ParameterGroupEventHandler)">
            <summary>
            Удаляет указанный обработчик из коллекции
            </summary>
            <param name="item">Обработчик</param>
            <returns>Значение true, если обработчик успешно удален из коллекции; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Events.EventHandlerCollection.GetEnumerator">
            <summary>
            Возвращает перечислитель обработчиков в коллекции
            </summary>
            <returns>Перечислитель обработчиков</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.TFlexCadContext">
            <summary>
            Контекст подключения файла T-FLEX CAD к документу
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.TFlexCadContext.#ctor">
            <summary>
            Создаёт новый экземпляр контекста с пустым списком переменных
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.TFlexCadContext.#ctor(System.Byte[])">
            <summary>
            Создаёт новый экземпляр контекста на основе данных контекста подключения файла к документу
            </summary>
            <param name="data">Данные контекста подключения подключения файла T-FLEX CAD к документу</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.TFlexCadContext.GetData">
            <summary>
            Возвращает данные контекста подключения файла T-FLEX CAD к документу
            </summary>
            <returns>Данные контекста подключения файла T-FLEX CAD к документу</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.TFlexCadContext.TryGetReal(System.String,System.Double@)">
            <summary>
            Получает действительное значение переменной
            </summary>
            <param name="name">Имя переменной</param>
            <param name="real">Действительное значение переменной</param>
            <returns>Значение true, если переменная с указанным именем существует; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.TFlexCadContext.TryGetText(System.String,System.String@)">
            <summary>
            Получае текстовое значение переменной
            </summary>
            <param name="name">Имя переменной</param>
            <param name="text">Текстовое значение переменной</param>
            <returns>Значение true, если переменная с указанным именем существует; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.TFlexCadContext.SetReal(System.String,System.Double)">
            <summary>
            Задаёт действительное значение переменной
            </summary>
            <param name="name">Имя переменной</param>
            <param name="real">Действительное значение</param>
            <remarks>Если переменной с указанным именем не существует, она будет добавлена</remarks>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.TFlexCadContext.SetText(System.String,System.String)">
            <summary>
            Задаёт текстовое значение переменной
            </summary>
            <param name="name">Имя переменной</param>
            <param name="text">Текстовое значение</param>
            <remarks>Если переменной с указанным именем не существует, она будет добавлена</remarks>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.TFlexCadContext.Add(System.String,TFlex.DOCs.Model.References.Files.TFlexCadVariableValue)">
            <summary>
            Добавляет переменную с указанным именем и заданным значением
            </summary>
            <param name="name">Наименование переменной</param>
            <param name="variable">Значение переменной</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.TFlexCadContext.ContainsKey(System.String)">
            <summary>
            Возвращает значение, указывающее, содержится ли в контексте переменная с указанным именем
            </summary>
            <param name="name">Наименование переменной</param>
            <returns>Значение true, если переменная с указанным именем содержится в данном контексте; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.TFlexCadContext.Keys">
            <summary>
            Не реализовано
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.TFlexCadContext.Remove(System.String)">
            <summary>
            Удаляет из контекста переменную с указанным именем
            </summary>
            <param name="name">Наименование переменной</param>
            <returns>Значение true, если переменная успешно удалена из контекста; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.TFlexCadContext.TryGetValue(System.String,TFlex.DOCs.Model.References.Files.TFlexCadVariableValue@)">
            <summary>
            Получает значение переменной с указанным именем
            </summary>
            <param name="name">Наименование переменной</param>
            <param name="variable">Значение переменной</param>
            <returns>Значение true, если значение переменной успешно получено; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.TFlexCadContext.Values">
            <summary>
            Возвращает коллекцию значений переменных
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.TFlexCadContext.Item(System.String)">
            <summary>
            Возвращает или задает значение переменной с указанным именем
            </summary>
            <param name="name">Наименование переменной</param>
            <returns>Значение переменной</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.TFlexCadContext.Clear">
            <summary>
            Очищает список переменных контекста
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.TFlexCadContext.Count">
            <summary>
            Возвращает количество переменных в контексте
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.TFlexCadContext.GetEnumerator">
            <summary>
            Возвращает перечислитель переменных контекста
            </summary>
            <returns>Перечислитель переменных</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.TFlexCadVariableValue">
            <summary>
            Значение переменной T-FLEX CAD
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.TFlexCadVariableValue.#ctor">
            <summary>
            Создает новый экземпляр значения переменной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.TFlexCadVariableValue.Text">
            <summary>
            Возвращает или задает текстовое значение переменной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.TFlexCadVariableValue.Real">
            <summary>
            Возвращает или задает действительное значение переменной
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.IFileLinkAdditionalSettingsOwner">
            <summary>
            Интерфейс, описывающий владельца дополнительных настроек связи на справочник "Файлы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.IFileLinkAdditionalSettingsOwner.ParameterGroup">
            <summary>
            Возвращает группу параметров, описывающую связь
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.IFileLinkAdditionalSettingsOwner.ClassOfGroup">
            <summary>
            Возаращает тип объектов справочника, содержащий связь
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettings">
            <summary>
            Дополнительные настройки связи на справочник "Файлы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettings.#ctor(TFlex.DOCs.Model.References.Files.IFileLinkAdditionalSettingsOwner)">
            <summary>
            Создает новый экземпляр настройки
            </summary>
            <param name="owner">Владелец настройки</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettings.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Конструктор
            </summary>
            <param name="linkGroup">Группа параметров связи</param>
            <param name="linkClass">Тип объектов справочника</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettings.Data">
            <summary>
            Возвращает или задает данные настройки связи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettings.Reload">
            <summary>
            Перезагружает данные настройки связи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettings.Save">
            <summary>
            Сохраняет данные настройки связи
            </summary>
            <returns>Значение true, если данные успешно сохранены; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettings.Remove">
            <summary>
            Удаляет данные настройки связи
            </summary>
            <returns>Значение true, если данные удалены; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettings.IsValid">
            <summary>
            Возвращает значение, указывающее, являются ли корректными данные о связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettings.IsLoaded">
            <summary>
            Возвращает значение, указывающее, загружены ли данные связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettings.LinkGroup">
            <summary>
            Возвращает группу параметров, описывающую связь
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettings.LinkClass">
            <summary>
            Возвращает тип объектов справочника, содержащий связь
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData">
            <summary>
            Данные дополнительных настроек связи на справочник "Файлы"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData.Id">
            <summary>
            GUID настроек связи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData.#ctor">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData.DefaultPath">
            <summary>
            Возвращает или задает относительный путь для новых файлов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData.DefaultFileName">
            <summary>
            Возвращает или задает имя файла по умолчанию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData.CreateUserSubfolder">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли создавать ли подпапку для каждого пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData.ShowSelectFolderDialog">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли показывать диалог выбора папки при добавлении файлов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData.ForbidSelectionFromOtherFolders">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли запретить выбор из других папок
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData.PathIsMacro">
            <summary>
            Возвращает или задает значение, указывающее, является ли путь к папке макросом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData.FileNameIsMacro">
            <summary>
            Возвращает или задает значение, указывающее, является ли имя файла макросом
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если заданный объект равен текущему; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData.GetHashCode">
            <summary>
            Возвращает хэш-код настроек
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData.op_Equality(TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData,TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData)">
            <summary>
            Определяет, равны ли два указанных объекта настроек
            </summary>
            <param name="x">Первый объект для сравнения</param>
            <param name="y">Второй объект для сравнения</param>
            <returns>Значение true, если объекты равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData.op_Inequality(TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData,TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData)">
            <summary>
            Определяет, различаются ли два указанных объекта настроек
            </summary>
            <param name="x">Первый объект для сравнения</param>
            <param name="y">Второй объект для сравнения</param>
            <returns>Значение true, если объекты различаются; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData.Serialize">
            <summary>
            Сериализует объект в строку
            </summary>
            <returns>Строка, представляющая текущий объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileLinkAdditionalSettingsData.Deserialize(System.String)">
            <summary>
            Десериализует объект из указанной строки
            </summary>
            <param name="data">Строка, представляющая объект</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FileType">
            <summary>
            Тип объектов справочника "Файлы"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Files.FileType.ExtensionAttributeName">
            <summary>
            Наименование атрибута, содержащего расширение файлов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Files.FileType.DefaultFilePreviewerAttributeName">
            <summary>
            Наименование атрибута, содержащего Guid средства просмотра для всех пользователей
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Files.FileType.DefaultFilePreviewerTypeAttributeName">
            <summary>
            Наименование атрибута, содержащего тип использования средства просмотра для всех пользователей
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileType.Name">
            <summary>
            Возвращает наименование типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileType.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileType.IsFolder">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Папка"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileType.IsFile">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Файл"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileType.CanContainChildren">
            <summary>
            Возвращает значение, указывающее, может ли объект текущего типа содержать дочерние объекты
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileType.Attributes">
            <summary>
            Возвращает атрибуты типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileType.Extension">
            <summary>
            Возвращает расширение файлов текущего типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileType.Icon">
            <summary>
            Возвращает иконку типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileType.DefaultFilePreviewerGuid">
            <summary>
            Возвращает Guid средства просмотра для всех пользователей
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileType.CustomFilePreviewerGuid">
            <summary>
            Возвращает или задает Guid средства просмотра для текущего пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileType.DefaultFilePreviewerType">
            <summary>
            Возвращает тип использования средства просмотра для всех пользователей
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileType.CustomFilePreviewerType">
            <summary>
            Возвращает или задает тип использования средства просмотра для текущего пользователя
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FileType.FilePreviewerTypes">
            <summary>
            Тип использования средства просмотра 
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Files.FileType.FilePreviewerTypes.NotSet">
            <summary>
            Не установлен
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Files.FileType.FilePreviewerTypes.ExternalProgram">
            <summary>
            Внешнее приложение
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Files.FileType.FilePreviewerTypes.FilePreviewMDIWindow">
            <summary>
            Окно препросмотра
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FileTypeAttributes">
            <summary>
            Коллекция атрибутов типа объектов справочника "Файлы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileTypeAttributes.Extension">
            <summary>
            Возвращает атрибут, содержащий расширение файлов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileTypeAttributes.DefaultFilePreviewer">
            <summary>
            Возвращает атрибут, содержащий Guid средства просмотра для всех пользователей
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileTypeAttributes.DefaultFilePreviewerType">
            <summary>
            Возвращает атрибут, содержащий тип использования средства просмотра для всех пользователей
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FileExtensionAttribute">
            <summary>
            Атрибут типа объектов справочника "Файлы", содержащий расширение файлов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileExtensionAttribute.CanChangeCaption">
            <summary>
            Возвращает значение, указывающее, можно ли изменить наименование атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileExtensionAttribute.IsSystem">
            <summary>
            Возвращает значение, указывающее, является ли атрибут системным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileExtensionAttribute.Caption">
            <summary>
            Возвращает или задает наименование атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileExtensionAttribute.Value">
            <summary>
            Возвращает или задает значение атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileExtensionAttribute.CanRemove">
            <summary>
            Возвращает значение, указвающее, возможно ли удаление атрибута
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileExtensionAttribute.Clone">
            <summary>
            Создает копию текущего атрибута
            </summary>
            <returns>Новый атрибут</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FilePreviewerAttribute">
            <summary>
            Атрибут типа объектов справочника "Файлы", содержащий Guid средства просмотра для всех пользователей
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FilePreviewerAttribute.CanChangeCaption">
            <summary>
            Возвращает значение, указывающее, можно ли изменить наименование атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FilePreviewerAttribute.IsSystem">
            <summary>
            Возвращает значение, указывающее, является ли атрибут системным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FilePreviewerAttribute.Caption">
            <summary>
            Возвращает или задает наименование атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FilePreviewerAttribute.Value">
            <summary>
            Возвращает или задает значение атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FilePreviewerAttribute.CanRemove">
            <summary>
            Возвращает значение, указвающее, возможно ли удаление атрибута
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FilePreviewerAttribute.Clone">
            <summary>
            Создает копию текущего атрибута
            </summary>
            <returns>Новый атрибут</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FilePreviewerTypeAttribute">
            <summary>
            Атрибут типа объектов справочника "Файлы", содержащий тип использования средства просмотра для всех пользователей
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FilePreviewerTypeAttribute.CanChangeCaption">
            <summary>
            Возвращает значение, указывающее, можно ли изменить наименование атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FilePreviewerTypeAttribute.Caption">
            <summary>
            Возвращает или задает наименование атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FilePreviewerTypeAttribute.IsSystem">
            <summary>
            Возвращает значение, указывающее, является ли атрибут системным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FilePreviewerTypeAttribute.Value">
            <summary>
            Возвращает или задает значение атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FilePreviewerTypeAttribute.CanRemove">
            <summary>
            Возвращает значение, указвающее, возможно ли удаление атрибута
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FilePreviewerTypeAttribute.Clone">
            <summary>
            Создает копию текущего атрибута
            </summary>
            <returns>Новый атрибут</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.ImportFileCallback">
            <summary>
            Делегат функции обратного вызова при импорте файлов
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.ImportParameters">
            <summary>
            Параметры импорта файлов в справочник "Файлы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.ImportParameters.#ctor">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.ImportParameters.DestinationFolder">
            <summary>
            Возвращает или задает папку назначения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.ImportParameters.Recursive">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли выполнять операцию рекурсивно для всех входящих папок
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.ImportParameters.CreateClasses">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли создавать новые типы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.ImportParameters.AutoCheckIn">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли автоматическое применение изменений
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.ImportParameters.UpdateExistingFiles">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли обновлять существующие файлы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.ImportParameters.ImportedObjects">
            <summary>
            Возвращает список импортированных объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.ImportParameters.ImportFileCallback">
            <summary>
            Возвращает делегат процедуры обратного вызова
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.ImportParameters.FileExistsCallback">
            <summary>
            Возвращает делегат процедуры обратного вызова
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.References.Files.ImportParameters.ImportFile">
            <summary>
            Событие, возникающее при импорте файла
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.References.Files.ImportParameters.FileExists">
            <summary>
            Событие, возникающее, если файл уже создан в справочнике
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.References.Files.ImportParameters.Error">
            <summary>
            Событие, возникающее при ошибке импорта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.ImportParameters.RequiredParametersExceptionCallback">
            <summary>
            Возвращает делегат процедуры заполнения обязательных параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.ImportParameters.Clone">
            <summary>
            Создает копию объекта
            </summary>
            <returns>Созданная копия объекта</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FilePathEventArgs">
            <summary>
            Аргументы событий, возникающих при импорте файла
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FilePathEventArgs.#ctor(System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="filePath">Путь к файлу</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FilePathEventArgs.FilePath">
            <summary>
            Возвращает путь к импортируемому файлу
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.ImportFileEventArgs">
            <summary>
            Аргумент события <see cref="E:TFlex.DOCs.Model.References.Files.ImportParameters.ImportFile"/>
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.ImportFileEventArgs.#ctor(System.String)">
            <summary>
            Создает новый экземпляр класса для указанного файла
            </summary>
            <param name="filePath">Путь к импортируемому файлу</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.ImportFileEventArgs.Import">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли импортировать файл
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.ImportFileEventArgs.FileName">
            <summary>
            Задает имя файла при импорте 
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FileExistsEventArgs">
            <summary>
            Аргумент события <see cref="E:TFlex.DOCs.Model.References.Files.ImportParameters.FileExists"/>
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileExistsEventArgs.#ctor(System.String)">
            <summary>
            Создает новый экземпляр класса для указанного файла
            </summary>
            <param name="filePath">Путь к файлу</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileExistsEventArgs.Overwrite">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли перезаписать существующий файл
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileExistsEventArgs.NewFileName">
            <summary>
            Возвращает или задает новое имя, с которым следует сохранить файл
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.ImportFileErrorEventArgs">
            <summary>
            Аргумент события <see cref="E:TFlex.DOCs.Model.References.Files.ImportParameters.Error"/>
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.ImportFileErrorEventArgs.#ctor(System.String,System.Exception)">
            <summary>
            Создает новый экземпляр класса для указанного файла и исключения
            </summary>
            <param name="filePath">Путь к файлу</param>
            <param name="error">Исключение, которое привело к возникновению события</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.ImportFileErrorEventArgs.Error">
            <summary>
            Возвращает исключение, которое привело к возникновению события
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FileSizeParameter">
            <summary>
            Параметр "Размер" справочника "Файлы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileSizeParameter.GetInt64">
            <summary>
            Возвращает значение параметра в формате Int64
            </summary>
            <returns>Значение параметра в формате Int64</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileSizeParameter.IsNull">
            <summary>
            Возвращает значение, указывающее, является ли значение параметра равным NULL
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileSizeParameter.GetTypeCode">
            <summary>
            Возвращает код типа значения параметра
            </summary>
            <returns>Код типа</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileSizeParameter.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли параметр доступным только для чтения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileSizeParameter.ToString">
            <summary>
            Возвращает строковое представление параметра
            </summary>
            <returns>Строковое представление параметра</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.LastChangeDateParameter">
            <summary>
            Параметр "Дата последнего изменения файла" справочника "Файлы" 
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.LastChangeDateParameter.GetDateTime">
            <summary>
            Возвращает значение параметра в формате DateTime
            </summary>
            <returns>Значение параметра в формате DateTime</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.LastChangeDateParameter.IsNull">
            <summary>
            Возвращает значение, указывающее, является ли значение параметра равным NULL
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.LastChangeDateParameter.GetTypeCode">
            <summary>
            Возвращает код типа значения параметра
            </summary>
            <returns>Код типа</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.LastChangeDateParameter.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли параметр доступным только для чтения
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FileServerParameter">
            <summary>
            Параметр "Раздел сервера файлов" справочника "Файлы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileServerParameter.GetInt32">
            <summary>
            Возвращает значение параметра в формате Int32
            </summary>
            <returns>Значение параметра в формате Int32</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileServerParameter.GetInt64">
            <summary>
            Возвращает значение параметра в формате Int64
            </summary>
            <returns>Значение параметра в формате Int64</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileServerParameter.GetTypeCode">
            <summary>
            Возвращает код типа значения параметра
            </summary>
            <returns>Код типа</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FileObject">
            <summary>
            Объект "Файл" справочника "Файлы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileObject.IsFile">
            <summary>
            Возвращает значение, указывающее, является ли объект файлом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileObject.Size">
            <summary>
            Возвращает размер файла
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileObject.LastChangeDate">
            <summary>
            Возвращает дату последнего изменения файла
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileObject.HasLinkedFiles">
            <summary>
            Возвращает значение, указывающее, есть ли у текущего файла связанные файлы
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileObject.GetLinkedFiles">
            <summary>
            Возвращает список связанных файлов
            </summary>
            <returns>Список связанных файлов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileObject.SetLinkedFiles(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.Files.FileReferenceObject})">
            <summary>
            Задает список связанных файлов
            </summary>
            <param name="files">Список файлов</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileObject.AddLinkedFile(TFlex.DOCs.Model.References.Files.FileReferenceObject)">
            <summary>
            Добавляет связанный файл
            </summary>
            <param name="file">Файл</param>
            <returns>Связанный файл</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileObject.RemoveLinkedFile(TFlex.DOCs.Model.References.Files.FileReferenceObject)">
            <summary>
            Удаляет связанный файл
            </summary>
            <param name="file">Файл</param>
            <returns>Значение true, если файл удален; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileObject.IsActualVersionDownloaded">
            <summary>
            Возвращает значение, указывающее, является ли версия загруженного файла актуальной
            </summary>
            <returns>Значение true, если версия загруженного файла актуальна, в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileObject.GetHeadRevision(System.Boolean)">
            <summary>
            Загружает последнюю версию объекта с сервера
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileObject.GetHeadRevision(System.String)">
            <summary>
            Загружает последнюю версию объекта с сервера по указанному пути
            </summary>
            <param name="destinationPath"></param>
            <returns>Путь для загрузки объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileObject.GetFileVersion(System.Int32)">
            <summary>
            Загружает указанную версию объекта с сервера
            </summary>
            <param name="version">Версия объекта</param>
            <returns>Путь, по которому был загружен объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileObject.GetFileVersion(System.String,System.Int32)">
            <summary>
            Загружает указанную версию объекта с сервера по указанному пути
            </summary>
            <param name="destinationPath">Путь для загрузки объекта</param>
            <param name="version">Версия объекта</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileObject.DeleteFromWorkingFolder">
            <summary>
            Удаляет файл из рабочей папки
            </summary>
            <returns>Значение true, если файл успешно удален; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileObject.Export(System.String,System.Boolean)">
            <summary>
            Экспортирует файл по указанному пути
            </summary>
            <param name="destinationPath">Путь для экспорта</param>
            <param name="clearReadOnly">Значение, указывающее, требуется ли удалить атрибут файла "Только чтение"</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileObject.SetOpenningDocumentId(System.String,System.Int32,System.Int32)">
            <summary>
            Сохраняет Id объекта, связанного с открываемым файлом
            </summary>
            <param name="path">Путь к файлу</param>
            <param name="objectId">Id объекта</param>
            <param name="referenceId">Id справочника, содержащего объект</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileObject.GetOpenningDocumentId(System.String)">
            <summary>
            Возвращает Id документа, связанного с открываемым файлом
            </summary>
            <param name="path">Путь к файлу</param>
            <returns>Id документа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileObject.GetOpenningObjectId(System.String,System.Int32@,System.Int32@)">
            <summary>
            Получает Id объекта и справочника, связанных с открываемым файлом
            </summary>
            <param name="path">Путь к файлу</param>
            <param name="objectId">Id объекта</param>
            <param name="referenceId">Id справочника</param>
            <returns>Значение true, если идентификаторы успешно получены; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileObject.ClearOpenningDocumentId">
            <summary>
            Удаляет данные о временно сохраненном в реестре Id документа, связанного с открываемым файлом
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileObject.SaveFileContext(System.Byte[],TFlex.DOCs.Model.References.Documents.DocumentReferenceObject)">
            <summary>
            Сохраняет контекст связи файла и документа
            </summary>
            <param name="context">Контекст связи файла и документа</param>
            <param name="document">Документ</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileObject.FindFileContext(TFlex.DOCs.Model.References.Documents.DocumentReferenceObject)">
            <summary>
            Возвращает контекст связи файла с указанным документом
            </summary>
            <param name="document">Связанный документ</param>
            <returns>Контекст связи файла и документа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileObject.CreateCopy(System.String,TFlex.DOCs.Model.References.ReferenceObjectSaveSet)">
            <summary>
            Создает копию текущего файла в той же папке
            </summary>
            <param name="newName">Наименование копии</param>
            <param name="saveSet">Список полученных копий объектов</param>
            <returns>Созданная копия файла</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileObject.CreateCopy(System.String,TFlex.DOCs.Model.References.Files.FolderObject,TFlex.DOCs.Model.References.ReferenceObjectSaveSet)">
            <summary>
            Создает копию объекта в указанной папке
            </summary>
            <param name="newName">Наименование копии</param>
            <param name="parent">Папка для копирования</param>
            <param name="saveSet">Список полученных копий объектов</param>
            <returns>Созданная копия файла</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FileObject.RelationKeys">
            <summary>
            Идентификаторы связей
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Files.FileObject.RelationKeys.Document">
            <summary>
            Guid связи "Документы"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Files.FileObject.RelationKeys.LinkedFiles">
            <summary>
            Guid связи "Связанные файлы"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FileReferenceObject">
            <summary>
            Объект справочника "Файлы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileReferenceObject.Class">
            <summary>
            Возвращает тип объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileReferenceObject.Children">
            <summary>
            Возвращает коллекцию дочерних объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileReferenceObject.IsFile">
            <summary>
            Возвращает значение, указывающее, является ли объект файлом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileReferenceObject.IsFolder">
            <summary>
            Возвращает значение, указывающее, является ли объект папкой
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileReferenceObject.Parent">
            <summary>
            Возвращает родительскую папку объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileReferenceObject.Server">
            <summary>
            Возвращает параметры файлового сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileReferenceObject.Path">
            <summary>
            Возвращает относительный путь к объекту
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileReferenceObject.Name">
            <summary>
            Возвращает наименование объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileReferenceObject.Comment">
            <summary>
            Возвращает комментарий объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileReferenceObject.LocalPath">
            <summary>
            Возвращает локальный путь к объекту в файловой системе
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileReferenceObject.ValidateName(System.String)">
            <summary>
            Возвращает значение, указывающее, подходит ли заданная строка для именования файла или папки
            </summary>
            <param name="name">Строка для проверки</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileReferenceObject.GetHeadRevision">
            <summary>
            Загружает последнюю версию объекта с сервера
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileReferenceObject.GetHeadRevision(System.String)">
            <summary>
            Загружает последнюю версию объекта с сервера по указанному пути
            </summary>
            <param name="destinationPath"></param>
            <returns>Путь для загрузки объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileReferenceObject.DeleteFromWorkingFolder">
            <summary>
            Удаляет объект из рабочей папки
            </summary>
            <returns>Значение true, если объект был успешно удален; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileReferenceObject.Export(System.String,System.Boolean)">
            <summary>
            Экспортирует объект по указанному пути
            </summary>
            <param name="destinationPath">Путь для экспорта</param>
            <param name="clearReadOnly">Значение, указывающее, требуется ли удалять атрибуты "Только чтение"</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileReferenceObject.ToStringBase">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns>Строковое представление объекта</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FileReferenceObject.FieldKeys">
            <summary>
            Идентификаторы параметров
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Files.FileReferenceObject.FieldKeys.Name">
            <summary>
            Guid параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Files.FileReferenceObject.FieldKeys.Comment">
            <summary>
            Guid параметра "Комментарий"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Files.FileReferenceObject.FieldKeys.Path">
            <summary>
            Guid параметра "Относительный путь"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Files.FileReferenceObject.FieldKeys.Size">
            <summary>
            Guid параметра "Размер"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Files.FileReferenceObject.FieldKeys.LastChangeDate">
            <summary>
            Guid параметра "Дата последнего изменения файла"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Files.FileReferenceObject.FieldKeys.FileServerId">
            <summary>
            Guid параметра "Раздел" (Id файлового сервера)
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Files.FileReferenceObject.FieldKeys.HasLinkedFiles">
            <summary>
            Guid параметра "Есть связанные файлы"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FolderObject">
            <summary>
            Объект "Папка" справочника "Файлы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FolderObject.IsFolder">
            <summary>
            Возвращает значение, указывающее, является ли объект папкой
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FolderObject.Rename(System.String)">
            <summary>
            Изменяет имя папки на указанное
            </summary>
            <param name="newName">Новое имя папки</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FolderObject.MoveTo(TFlex.DOCs.Model.References.Files.FolderObject)">
            <summary>
            Перемещает папку в другую родительскую папку
            </summary>
            <param name="otherFolder">Новая родительская папка</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FolderObject.SetParent(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FolderObject.CreateFile(System.String,System.String,System.String,TFlex.DOCs.Model.References.Files.FileType,TFlex.DOCs.Model.References.Files.ImportParameters)">
            <summary>
            Создаёт новый файл в текущей папке
            </summary>
            <param name="source">Путь к файлу в файловой системе</param>
            <param name="description">Описание файла</param>
            <param name="name">Имя файла в файловой системе (с расширением)</param>
            <param name="type">Тип файла</param>
            <param name="parameters">Параметры импорта</param>
            <returns>Созданный файл</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FolderObject.CreateFolder(System.String,System.String,TFlex.DOCs.Model.References.Files.ImportParameters)">
            <summary>
            Создаёт новую папку в текущей папке
            </summary>
            <param name="description">Описание папки</param>
            <param name="name">Наименование папки</param>
            <param name="parameters">Параметры импорта</param>
            <returns>Созданная папка</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FolderObject.CreatePath(System.String,TFlex.DOCs.Model.References.Files.ImportParameters)">
            <summary>
            Создает иерархию папок
            </summary>
            <param name="path">Путь для построения иерархии</param>
            <param name="parameters">Параметры импорта</param>
            <returns>Конечная дочерняя папка в иерархии</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FolderObject.Load(System.Boolean)">
            <summary>
            Загружает папку с сервера
            </summary>
            <param name="recursive">Значение, указывающее, требуется ли рекурсивно загрузить все вложенные папки</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FolderObject.Load(System.Boolean,System.Boolean,System.Collections.Generic.List{TFlex.DOCs.Model.References.Files.FileObject}@)">
            <summary>
            Загружает папку с сервера
            </summary>
            <param name="recursive">Значение, указывающее, требуется ли рекурсивно загрузить все вложенные папки</param>
            <param name="getHeadRevisions">Значение, указывающее, требуется ли для всех файлов загрузить последнюю версию</param>
            <param name="notActualFiles">Список неактуальных файлов, заполняемый, если не установлен флаг <paramref name="getHeadRevisions"/></param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FolderObject.DeleteFromWorkingFolder">
            <summary>
            Удаляет папку из рабочей папки
            </summary>
            <returns>Значение true, если папка успешно удалена; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FolderObject.Export(System.String,System.Boolean)">
            <summary>
            Экспортирует папку по указанному пути
            </summary>
            <param name="destinationPath">Путь для экспорта</param>
            <param name="clearReadOnly">Значение, указывающее, требуется ли удалить атрибуты файлов "Только чтение"</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FolderObject.Export(System.String,System.Boolean,System.Boolean)">
            <summary>
            Экспортирует папку по указанному пути
            </summary>
            <param name="destinationPath">Путь для экспорта</param>
            <param name="clearReadOnly">Значение, указывающее, требуется ли удалить атрибуты файлов "Только чтение"</param>
            <param name="recursive">Значение, указывающее, требуется ли рекурсивно экспортировать все вложенные папки</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FileTypes">
            <summary>
            Дерево типов справочника "Файлы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileTypes.Folder">
            <summary>
            Возвращает тип "Папка"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileTypes.FileBase">
            <summary>
            Возвращает тип "Файл"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileTypes.TFlexCADFileBase">
            <summary>
            Тип "Файл системы T-FLEX CAD"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileTypes.GetFileTypeByExtension(System.String)">
            <summary>
            Возвращает тип объекта по расширению файла
            </summary>
            <param name="extension">Расширение файла</param>
            <returns>Тип объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileTypes.CreateFileType(System.String,System.String,System.String)">
            <summary>
            Создает новый тип объекта
            </summary>
            <param name="name">Наименование типа</param>
            <param name="comment">Комментарий</param>
            <param name="extension">Расширение файлов</param>
            <returns>Созданный тип</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileTypes.CreateFileType(System.String,System.String,System.String,TFlex.DOCs.Model.References.Files.FileType)">
            <summary>
            Создает новый тип объекта
            </summary>
            <param name="name">Наименование типа</param>
            <param name="comment">Комментарий</param>
            <param name="extension">Расширение файлов</param>
            <param name="baseType">Базовый тип</param>
            <returns>Созданный тип</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileTypes.CreateFileType(System.String,System.String,System.String,TFlex.DOCs.Model.References.Files.FileType,System.Guid,System.Guid,TFlex.DOCs.Model.References.Files.FileType.FilePreviewerTypes,TFlex.DOCs.Model.References.Files.FileType.FilePreviewerTypes)">
            <summary>
            Создает новый тип объекта
            </summary>
            <param name="name">Наименование типа</param>
            <param name="comment">Комментарий</param>
            <param name="extension">Расширение файлов</param>
            <param name="baseType">Базовый тип</param>
            <param name="customFilePreviewer">Guid средства просмотра для текущего пользователя</param>
            <param name="defaultFilePreviewer">Guid средства просмотра для всех пользователей</param>
            <param name="customFilePreviewerType">Тип использования средства просмотра для текущего пользователя</param>
            <param name="defaultFilePreviewerType">Тип использования средства просмотра для всех пользователей</param>
            <returns>Созданный тип</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileTypes.ModifyFileType(TFlex.DOCs.Model.References.Files.FileType,System.String,System.String,System.String,System.Guid,System.Guid,TFlex.DOCs.Model.References.Files.FileType.FilePreviewerTypes,TFlex.DOCs.Model.References.Files.FileType.FilePreviewerTypes)">
            <summary>
            Модифицирует существующий тип объекта
            </summary>
            <param name="type">Изменяемый тип объекта</param>
            <param name="name">Наименование типа</param>
            <param name="comment">Комментарий</param>
            <param name="extension">Расширение файлов</param>
            <param name="customFilePreviewer">Guid средства просмотра для текущего пользователя</param>
            <param name="defaultFilePreviewer">Guid средства просмотра для всех пользователей</param>
            <param name="customFilePreviewerType">Тип использования средства просмотра для текущего пользователя</param>
            <param name="defaultFilePreviewerType">Тип использования средства просмотра для всех пользователей</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileTypes.ModifyFileType(TFlex.DOCs.Model.References.Files.FileType,System.String,System.String,System.String)">
            <summary>
            Модифицирует существующий тип объекта
            </summary>
            <param name="type">Изменяемый тип объекта</param>
            <param name="name">Наименование типа</param>
            <param name="comment">Комментарий</param>
            <param name="extension">Расширение файлов</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileTypes.DeleteFileType(TFlex.DOCs.Model.References.Files.FileType)">
            <summary>
            Удаляет указанный тип объекта
            </summary>
            <param name="type">Тип объекта для удаления</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FileTypes.Keys">
            <summary>
            Идентификаторы типов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Files.FileTypes.Keys.Folder">
            <summary>
            Guid типа "Папка"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Files.FileTypes.Keys.File">
            <summary>
            Guid типа "Файл"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Files.FileTypes.Keys.TFlexCADFile">
            <summary>
            Guid типа "Документ системы T-FLEX CAD"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Files.FileReference">
            <summary>
            Справочник "Файлы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileReference.#ctor">
            <summary>
            Создает новый экземпляр справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает новый экземпляр справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileReference.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Files.FileReference.FileServers">
            <summary>
            Возвращает разделы сервера файлов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileReference.CreateReferenceObjectForClass(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект справочника для указанного типа объектов
            </summary>
            <param name="classObject">Тип создаваемого объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileReference.FindByPath(System.String)">
            <summary>
            Производит поиск объекта справочника по абсолютному пути
            </summary>
            <param name="path">Абсолютный путь</param>
            <returns>Объект справочника "Файлы"</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileReference.FindByRelativePath(System.String)">
            <summary>
            Производит поиск объекта справочника в рабочей папке по относительному пути
            </summary>
            <param name="relativePath">Относительный путь</param>
            <returns>Объект справочника "Файлы"</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileReference.Import(System.String,TFlex.DOCs.Model.References.Files.FolderObject)">
            <summary>
            Импортирует папку из файловой системы в указанную папку справочника
            </summary>
            <param name="sourceFolder">Путь к исходной папке</param>
            <param name="destinationFolder">Целевая папка в справочнике</param>
            <returns>Новая папка в справочнике файлов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileReference.Import(System.String,TFlex.DOCs.Model.References.Files.ImportParameters)">
            <summary>
            Импортирует папку из файловой системы с указанными параметрами импорта
            </summary>
            <param name="sourceFolder">Путь к исходной папке</param>
            <param name="parameters">Параметры импорта</param>
            <returns>Новая папка в справочнике файлов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileReference.AddFile(System.String,TFlex.DOCs.Model.References.Files.FolderObject)">
            <summary>
            Добавляет файл из файловой системы в указанную папку справочника
            </summary>
            <param name="filePath">Путь к исходному файлу</param>
            <param name="folder">Родительская папка в справочнике</param>
            <returns>Добавленный файл</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileReference.AddFiles(System.Collections.Generic.IEnumerable{System.String},TFlex.DOCs.Model.References.Files.ImportParameters)">
            <summary>
            Добавляет файлы из файловой системы в справочник файлов с указанными параметрами импорта
            </summary>
            <param name="files">Коллекция путей к исходным файлам</param>
            <param name="parameters">Параметры импорта</param>
            <returns>Список добавленных файлов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileReference.CreateFolder(System.String,System.String,TFlex.DOCs.Model.References.Files.ImportParameters)">
            <summary>
            Создаёт новую папку в корне справочника
            </summary>
            <param name="description">Описание папки</param>
            <param name="name">Наименование папки</param>
            <param name="parameters">Параметры импорта</param>
            <returns>Созданная папка</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Files.FileReference.CreatePath(System.String,TFlex.DOCs.Model.References.Files.FolderObject,TFlex.DOCs.Model.References.Files.ImportParameters)">
            <summary>
            Создает иерархию папок в указанной родительской папке
            </summary>
            <param name="path">Путь для построения иерархии</param>
            <param name="parentFolder">Родительская папка</param>
            <param name="parameters">Параметры импорта</param>
            <returns>Конечная дочерняя папка в иерархии</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Macros.CodeMacro">
            <summary>
            Объект "Макрос" или "Макрос C#" справочника "Макросы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.CodeMacro.RunImplement(TFlex.DOCs.Model.Macros.MacroContext,System.String,System.Object[])">
            <summary>
            Запускает макрос на выполнение
            </summary>
            <param name="context">Контекст выполнения</param>
            <param name="entryPoint">Имя метода, являющегося точкой входа</param>
            <param name="parameters">Набор передаваемых параметров</param>
            <returns>Возвращенное значение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.CodeMacro.GetEntryPoints">
            <summary>
            Возвращает коллекцию точек входа
            </summary>
            <returns>Коллекция точек входа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.CodeMacro.GetReferences">
            <summary>
            Возвращает коллекцию ссылок макроса
            </summary>
            <returns>Коллекция ссылок</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.CodeMacro.Compile">
            <summary>
            Компилирует макрос
            </summary>
            <returns>Коллекция ошибок компиляции макроса</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.CodeMacro.IsCompiled">
            <summary>
            Возвращает значение, указывающее, скомпилирован ли макрос
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.CodeManager.IsFlowchartCode(System.String)">
            <summary>
            Возвращает значение, указывающее, является ли код кодом блок-схемы
            </summary>
            <param name="code">Код</param>
            <returns>Возвращает true - если указанный код является кодом блок схемы, иначе false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.CodeManager.IsXml(System.String)">
            <summary>
            Возвращает значение, указывающее, является ли текст разметкой XML
            </summary>
            <param name="value">Текст</param>
            <returns>Возвращает true - если указанный текст является разметкой XML, иначе false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Macros.FlowchartMacro">
            <summary>
            Объект "Блок-схема" справочника "Макросы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.FlowchartMacro.GetEntryPoints">
            <summary>
            Возвращает коллекцию точек входа
            </summary>
            <returns>Коллекция точек входа</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager">
            <summary>
            Менеджер управления макросом на основе блок-схем
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager.Validate(System.String)">
            <summary>
            Проверяет код на ошибки и предупреждения
            </summary>
            <param name="code">Xaml код</param>
            <returns>Списки ошибок и предупреждений валидации уода</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager.Validate(System.String,System.Activities.Activity@)">
            <summary>
            Проверяет код на ошибки и предупреждения
            </summary>
            <param name="code">Xaml код</param>
            <param name="activity">Корневое действие</param>
            <returns>Списки ошибок и предупреждений валидации уода</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager.ValidateAndThrowOnError(System.String,System.String)">
            <summary>
            Проверяет код на ошибки и предупреждения. 
            Выбрасывает исключение в случае ошибки.
            </summary>
            <param name="name">Название макроса</param>
            <param name="code">Xaml код</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager.Calculate(System.String,TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Запускает макрос на выполнение
            </summary>
            <param name="code">Xaml текст программы</param>
            <param name="context">Макроконтекст</param>
            <returns>Возвращенное значение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager.Calculate(System.String,TFlex.DOCs.Model.Macros.MacroContext,System.Object[])">
            <summary>
            Запускает макрос на выполнение
            </summary>
            <param name="code">Xaml текст программы</param>
            <param name="context">Макроконтекст</param>
            <param name="parameters">Набор передаваемых параметров</param>
            <returns>Возвращенное значение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager.Calculate(System.String,TFlex.DOCs.Model.Macros.MacroContext,System.Object[],TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroWorkflowExecuteMode)">
            <summary>
            Запускает макрос на выполнение
            </summary>
            <param name="code">Xaml текст программы</param>
            <param name="context">Макроконтекст</param>
            <param name="parameters">Набор передаваемых параметров</param>
            <param name="mode">Тип выполнения</param>
            <returns>Возвращенное значение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager.Calculate(System.String,TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroContext)">
            <summary>
            Запускает макрос на выполнение
            </summary>
            <param name="code">Xaml текст программы</param>
            <param name="context">Контекст выполнения блок-схемы</param>
            <param name="mode">Тип выполнения</param>
            <returns>Возвращенное значение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager.Calculate(System.String,TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroContext,TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroWorkflowExecuteMode)">
            <summary>
            Запускает макрос на выполнение
            </summary>
            <param name="code">Xaml текст программы</param>
            <param name="context">Контекст выполнения блок-схемы</param>
            <param name="mode">Тип выполнения</param>
            <returns>Возвращенное значение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager.Calculate(System.Activities.Activity,TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroContext)">
            <summary>
            Запускает макрос на выполнение
            </summary>
            <param name="rootActivity">Корневое действие блок-схемы</param>
            <param name="context">Контекст выполнения блок-схемы</param>
            <returns>Возвращенное значение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager.Calculate(System.Activities.Activity,TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroContext,TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroWorkflowExecuteMode)">
            <summary>
            Запускает макрос на выполнение
            </summary>
            <param name="rootActivity">Корневое действие блок-схемы</param>
            <param name="context">Контекст выполнения блок-схемы</param>
            <param name="mode">Тип выполнения</param>
            <returns>Возвращенное значение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager.RunApplication(System.Activities.Activity,TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroContext)">
            <remarks>Запускается в отдельном потоке, 
            из-за чего могут быть проблемы с взаимодействием</remarks>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager.RunInvokerAsync(System.Activities.Activity,TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroContext)">
            <remarks>Нельзя использовать взаимодействие с UI, действие "Результат"</remarks>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager.Name">
            <summary>
            Наименование макроса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager.Code">
            <summary>
            Xaml текст программы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager.IsCompiled">
            <summary>
            Возвращает True, если текст программы загружен в действия
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager.AllowThrowOnValidate">
            <summary>
            Если установлен в True, то вбрасывает исключение при проверке данных, иначе возвращает результаты валидации
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager.Validate">
            <summary>
            Проверяет код на ошибки и предупреждения.
            </summary>
            <returns>Результаты проверки макроса</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager.Calculate(TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Запускает макрос на выполнение
            </summary>
            <param name="context">Макроконтекст</param>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroManager.Calculate(TFlex.DOCs.Model.Macros.MacroContext,System.Object[])">
            <summary>
            Запускает макрос на выполнение
            </summary>
            <param name="context">Макроконтекст</param>
            <param name="parameters">Набор передаваемых параметров</param>
            <returns></returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroWorkflowExecuteMode">
            <summary>
            Тип выполнения Workflow
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroProvider">
            <summary>
            Базовый тип макроса на основе блок-схемы
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroContext">
            <summary>
            Контекст выполнения макроса на основе блок-схемы
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroContext.#ctor(TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Создаёт контекст выполнения макроса
            </summary>
            <param name="macroContext">Макроконтекст</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroContext.#ctor(TFlex.DOCs.Model.Macros.MacroContext,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Создаёт контекст выполнения макроса с параметрами
            </summary>
            <param name="macroContext">Макроконтекст</param>
            <param name="parameters">Передаваемые параметры метода</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroContext.#ctor(TFlex.DOCs.Model.Macros.MacroContext,System.Object,System.Object)">
            <summary>
            Создаёт контекст выполнения макроса для обработчика события
            </summary>
            <param name="macroContext">Макроконтекст</param>
            <param name="sender">Отправитель</param>
            <param name="args">Аргументы</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroContext.MacroProvider">
            <summary>
            Объект базового типа макроса на основе блок-схемы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroContext.Parameters">
            <summary>
            Параметры метода
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroContext.Result">
            <summary>
            Результат выполнения макроса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroContext.Sender">
            <summary>
            Отправитель обрабочика события
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroContext.Args">
            <summary>
            Аргументы обработчика события
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroReturnExeption">
            <summary>
            Исключение, которое возникает при завершении выполнения метода макроса 
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Macros.MacroFlowchart.FlowchartMacroValidationException">
            <summary>
            Исключение, которое возникает при ошибке выполнения макроса 
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Macros.TechnologyMacro">
            <summary>
            Объект "Технологический макрос" справочника "Макросы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.TechnologyMacro.#ctor(TFlex.DOCs.Model.References.Macros.MacroReference)">
            <summary>
            Создает новый экземпляр макроса
            </summary>
            <param name="reference">Справочник "Макросы"</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.TechnologyMacro.GetReferences">
            <summary>
            Возвращает коллекцию ссылок макроса 
            </summary>
            <returns>Коллекция ссылок</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Macros.TemplateFlowchartMacro">
            <summary>
            Объект "Шаблон блок-схемы" справочника "Макросы"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Macros.Macro">
            <summary>
            Объект "Макрос" справочника "Макросы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.Macro.Class">
            <summary>
            Возвращает тип объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.Macro.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.Macro.Comment">
            <summary>
            Возвращает параметр "Комментарий"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.Macro.References">
            <summary>
            Возвращает параметр "Ссылки"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.Macro.LogRunHistory">
            <summary>
            Возвращает параметр "Вести журнал выполнения"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.Macro.GetAdditionalFiles">
            <summary>
            Возвращает список дополнительных файлов макроса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.Macro.Code">
            <summary>
            Возвращает параметр "Текст программы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.Macro.IsCompiled">
            <summary>
            Возвращает значение, указывающее, скомпилирован ли макрос
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.Macro.Validate">
            <summary>
            Проверяет код макроса на ошибки и предупреждения
            </summary>
            <returns>Коллекция ошибок</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.Macro.Run(TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Запускает макрос на выполнение
            </summary>
            <param name="context">Контекст выполнения</param>
            <returns>Возвращенное значение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.Macro.Run(TFlex.DOCs.Model.Macros.MacroContext,System.String,System.Object[])">
            <summary>
            Запускает макрос на выполнение
            </summary>
            <param name="context">Контекст выполнения</param>
            <param name="entryPoint">Имя метода, являющегося точкой входа</param>
            <param name="parameters">Набор передаваемых параметров</param>
            <returns>Возвращенное значение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.Macro.ToStringBase">
            <summary>
            Возвращает строковое представление макроса
            </summary>
            <returns>Строковое представление макроса</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.Macro.GetEntryPoints">
            <summary>
            Возвращает коллекцию точек входа
            </summary>
            <returns>Коллекция точек входа</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.Macro.IsLimitedCountEntryPointParameters">
            <summary>
            Возвращает true, если количество параметров точки входа макроса ограничено, иначе возвращает false
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.Macro.IsMethod">
            <summary>
            Возвращает значение, представляет ли макрос один метод выполнения кода
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Macros.MacroInvocationException">
            <summary>
            Исключение, которое возникает при ошибке выполнения макроса 
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Macros.MacroReference">
            <summary>
            Справочник "Макросы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroReference.Instance">
            <summary>
            Возвращает экземпляр справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroReference.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroReference.CreateReferenceObjectForClass(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект справочника указанного типа
            </summary>
            <param name="classObject">Тип объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroReference.GetMacro(System.Guid)">
            <summary>
            Возвращает макрос по его Guid
            </summary>
            <param name="id">Guid макроса</param>
            <returns>Макрос с указанным Guid</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Macros.MacroType">
            <summary>
            Тип объектов справочника "Макросы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroType.IsMacro">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Макрос"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroType.IsTechnologyMacro">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Технологический макрос"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroType.IsCSharpMacro">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Макрос C#"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroType.IsFlowchartMacro">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Блок-схема"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroType.IsTemplateFlowchartMacro">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Шаблон блок-схемы"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Macros.MacroTypes">
            <summary>
            Дерево типов справочника "Макросы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroTypes.Macro">
            <summary>
            Возвращает тип "Макрос"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroTypes.TechnologyMacro">
            <summary>
            Возвращает тип "Технологический макрос"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroTypes.CSharpMacro">
            <summary>
            Возвращает тип "Макрос C#"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroTypes.FlowchartMacro">
            <summary>
            Возвращает тип "Блок-схема"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Macros.MacroTypes.TemplateFlowchartMacro">
            <summary>
            Возвращает тип "Шаблон блок-схемы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Macros.MacroTypes.CreateClassObject(System.Guid)">
            <summary>
            Создает экземпляр типа с указанным Guid
            </summary>
            <param name="classGuid">Guid типа</param>
            <returns>Созданный тип</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Macros.MacroTypes.Keys">
            <summary>
            Идентификаторы типов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Macros.MacroTypes.Keys.Macro">
            <summary>
            Guid типа "Макрос"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Macros.MacroTypes.Keys.TechnologyMacro">
            <summary>
            Guid типа "Технологический макрос"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Macros.MacroTypes.Keys.CSharpMacro">
            <summary>
            Guid типа "Макрос C#"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Macros.MacroTypes.Keys.FlowchartMacro">
            <summary>
            Guid типа "Блок-схема"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Macros.MacroTypes.Keys.TemplateFlowchartMacro">
            <summary>
            Guid типа "Шаблон блок-схемы"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Messages.EmbeddedObject">
            <summary>
            описывает подключенный к сообщению объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.EmbeddedObject.Linked">
            <summary>
            подключен ли объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.EmbeddedObject.ReferenceObject">
            <summary>
            объект-вложение
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.EmbeddedObject.Level">
            <summary>
            уровень вложенности объекта, по умолчанию для вложения текущего сообщения - 0
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Messages.ISupportEmbeddedObjects.GetObjects">
            <summary>
            возвращает подключенные объекты первого уровня
            </summary>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Messages.ISupportEmbeddedObjects.GetAllObjects">
            <summary>
            возвращает подключенные объекты всех уровней иерархии сообщений
            </summary>
            <returns></returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.ISupportEmbeddedObjects.SupportObjectsTree">
            <summary>
            поддерживают ли отображение объектов всех уровней(параметр Level в EmbeddedObject)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.Location">
            <summary>
            Место
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.StartTime">
            <summary>
            Начало события
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.EndTime">
            <summary>
            Окончание события
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.ShowTimeAs">
            <summary>
            Показать время как
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.ShowTimeAsEnum">
            <summary>
            Показать время как
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.Label">
            <summary>
            Метка
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.LabelAsEnum">
            <summary>
            Метка
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.AllDayEvent">
            <summary>
            На весь день
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.Text">
            <summary>
            Описание события
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.Recurrence">
            <summary>
            Параметры повторения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.RecurrenceInfo.Start">
            <summary>
            Начало повторения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.RecurrenceInfo.End">
            <summary>
            Окончание повторения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.RecurrenceInfo.DayNumber">
            <summary>
            День месяца
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.RecurrenceInfo.Duration">
            <summary>
            Длительность
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.RecurrenceInfo.AllDay">
            <summary>
            Весь день
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.RecurrenceInfo.Month">
            <summary>
            Месяц
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.RecurrenceInfo.OccurenceCount">
            <summary>
            Число повторений
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.RecurrenceInfo.Periodicity">
            <summary>
            Периодичность
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.RecurrenceInfo.Range">
            <summary>
            Диапазон повторения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.RecurrenceInfo.Type">
            <summary>
            Тип повторения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.RecurrenceInfo.WeekDays">
            <summary>
            День недели
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.Appointment.RecurrenceInfo.WeekOfMonth">
            <summary>
            Неделя месяца
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.Appointment.ShowTimeAsType.Free">
            <summary>
            Свободно
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.Appointment.ShowTimeAsType.Busy">
            <summary>
            Занято
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.Appointment.ShowTimeAsType.OutOfOffice">
            <summary>
            Вне офиса
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.Appointment.LabelType.None">
            <summary>
            Нет
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.Appointment.LabelType.Important">
            <summary>
            Важно
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.Appointment.LabelType.Business">
            <summary>
            Бизнес
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.Appointment.LabelType.Personal">
            <summary>
            Личное
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.Appointment.LabelType.Vacation">
            <summary>
            Отпуск
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.Appointment.LabelType.MustAttend">
            <summary>
            Необходимо присутствовать
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.Appointment.LabelType.TravelRequired">
            <summary>
            Необходим выезд
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.Appointment.LabelType.NeedsPreparation">
            <summary>
            Требует подготовки
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.Appointment.LabelType.Birthday">
            <summary>
            День рождения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.Appointment.LabelType.Anniversary">
            <summary>
            Ежегодно
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.Appointment.LabelType.PhoneCall">
            <summary>
            Позвонить
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.AppointmentSupportsFilesBase.EmbeddedFilesCount">
            <summary>
            количество прикрепленных файлов к сообщению
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.AppointmentSupportsFilesBase.EmbeddedObjectsCount">
            <summary>
            количество прикрепленных объектов к сведению 
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Messages.AppointmentSupportsFilesBase.ChangeEmbeddedObjects(TFlex.DOCs.Model.References.Messages.EmbeddedObject[])">
            <summary>
            позволяет изменить список вложений
            </summary>
            <param name="objects">объекты для добавления/удаления</param>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.AppointmentsTypes.Keys.FolderBase">
            <summary>
            класс Папка
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.AppointmentsTypes.Keys.Appointment">
            <summary>
            класс Событие
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.AppointmentsTypes.Keys.FolderInboxAppointment">
            <summary>
            класс События
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.AppointmentsTypes.Keys.FolderDeleted">
            <summary>
            класс папки Удалённые
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.AppointmentEmbeddedFile.FileName">
            <summary>
            Имя файла
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.AppointmentEmbeddedFile.FileData">
            <summary>
            Данные файла
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.AppointmentEmbeddedFile.IsEmbeddedImage">
            <summary>
            является ли присоединенным изображением в тексте
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.Folder.FolderType.Appointment">
            <summary>
            События
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.Folder.FolderType.SharedAppointment">
            <summary>
            Общие события
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.Folder.FolderType.Deleted">
            <summary>
            Удалённые
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.Folder.FolderType.Unknown">
            <summary>
            Неизвестный тип папки
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Messages.AppointmentsReference.CreateAppointment">
            <summary>
            Создание события для текущего пользователя
            </summary>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Messages.AppointmentsReference.CreateAppointment(TFlex.DOCs.Model.References.Messages.Folder)">
            <summary>
            Создание события для текущего пользователя
            </summary>
            <returns></returns>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Messages.AppointmentsReferenceGroups.AppointmentsEmbeddedObjects">
            <summary>
            Связь Вложения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Messages.AppointmentsReferenceObject.Name">
            <summary>
            Наименование
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ReadOnlyGuidParameter">
            <summary>
            Параметр типа "Уникальный идентификатор", доступный только для чтения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ReadOnlyGuidParameter.#ctor(TFlex.DOCs.Model.Parameters.ParameterCollection,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает новый параметр в указанной коллекции параметров
            </summary>
            <param name="owner">Коллекция параметров</param>
            <param name="info">Описание параметра</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ReadOnlyGuidParameter.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли параметр доступным только для чтения
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.EditStageParameter">
            <summary>
            Параметр "Стадия редактирования"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.EditStageParameter.#ctor(TFlex.DOCs.Model.Parameters.ParameterCollection,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает новый параметр в указанной коллекции параметров
            </summary>
            <param name="owner">Коллекция параметров</param>
            <param name="info">Описание параметра</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ReadonlyStageParameter">
            <summary>
            Параметр "Стадия хранения"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ReadonlyStageParameter.#ctor(TFlex.DOCs.Model.Parameters.ParameterCollection,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает новый параметр в указанной коллекции параметров
            </summary>
            <param name="owner">Коллекция параметров</param>
            <param name="info">Описание параметра</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.AdditionalModificationNoticeReferenceObject">
            <summary>
            Объект "Дополнительное извещение (ДИ)" справочника "Извещения об изменениях"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.AdditionalPreliminaryModificationNoticesReferenceObject">
            <summary>
            Объект "Дополнительное извещение на ПИ (ДПИ)" справочника "Извещения об изменениях"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeState">
            <summary>
            Состояние изменения извещения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeState.CheckedOut">
            <summary>
            В разработке
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeState.ReadyToApply">
            <summary>
            Готово к применению
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeState.Applying">
            <summary>
            В процессе применения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeState.Applied">
            <summary>
            Применено
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject">
            <summary>
            Объект справочника "Извещения об изменениях"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.BaseModificationNotice">
            <summary>
            Guid типа "Извещение"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.EditObjectsStage">
            <summary>
            Guid параметра "Стадия редактирования объектов"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.ReadonlyObjectsStage">
            <summary>
            Guid параметра "Стадия хранения объектов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.Name">
            <summary>
            Возвращает параметр "Обозначение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.AssignedTo">
            <summary>
            Возвращает параметр "Выпущено на"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.ReleaseDate">
            <summary>
            Возвращает параметр "Дата выпуска"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.ChangingDate">
            <summary>
            Возвращает параметр "Срок изменения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.ReserveComment">
            <summary>
            Возвращает параметр "Указание о заделе"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.IntroductionComment">
            <summary>
            Возвращает параметр "Указание о внедрении"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.Text">
            <summary>
            Возвращает параметр "Содержание изменения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.ChangingReason">
            <summary>
            Возвращает параметр "Причина изменения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.ChangingState">
            <summary>
            Возвращает параметр "Состояние изменения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.EditStageParameter">
            <summary>
            Возвращает параметр "Стадия редактирования объектов"
            </summary>
            <remarks>Guid стадии, в которую перейдут связанные номенклатурные объекты при выполнении команды "Приступить к применению изменений"</remarks>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.ReadonlyStageParameter">
            <summary>
            Возвращает параметр "Стадия хранения объектов"
            </summary>
            <remarks>Guid стадии, в которую перейдут связанные номенклатурные объекты, при выполнении команды "Объявить применённым"</remarks>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.EditStage">
            <summary>
            Возвращает стадию редактирования объектов
            </summary>
            <remarks>Стадия, в которую перейдут связанные номенклатурные объекты при выполнении команды "Приступить к применению изменений"</remarks>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.ReadonlyStage">
            <summary>
            Возвращает стадию хранения объектов
            </summary>
            <remarks>Стадия, в которую перейдут связанные номенклатурные объекты при выполнении команды "Объявить применённым"</remarks>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.LinkedObjects">
            <summary>
            Возвращает массив объектов в извещении
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.LinkedObjectsGuid">
            <summary>
            Возвращает Guid связи "Объекты в извещении"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.ChangeStatus(TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeState)">
            <summary>
            Переводит извещение в новое состояние
            </summary>
            <param name="newStatus">Новое состояние извещения</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeBaseReferenceObject.SetReadyToApplyState">
            <summary>
            Переводит извещение в состояние "Готово к применению"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeWithActionsReferenceObject">
            <summary>
            Объект справочника "Извещения об изменениях", содержащий действия
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeWithActionsReferenceObject.OnActionChangingObjectChanged">
            <summary>
            Событие, возникающее при изменении списка объектов в извещении
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeWithActionsReferenceObject.CanExecuteActions">
            <summary>
            Показывает, поддерживает ли объект выполнение действий
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeWithActionsReferenceObject.ActionObjects">
            <summary>
            Возвращает действия извещения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeWithActionsReferenceObject.RaiseActionChangingObjectChange(TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject,System.Boolean,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Вызывается для изменения списка объектов в извещении при добавлении или изменении указанного действия
            </summary>
            <param name="action">Действие</param>
            <param name="isAdded">Значение true, если действие добавлено</param>
            <param name="oldLinkedObject">Прежний связанный объект</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeWithActionsReferenceObject.RaiseActionDeleted(TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject)">
            <summary>
            Вызывается для изменения списка объектов в извещении при удалении указанного действия
            </summary>
            <param name="action">Удаляемое действие</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeWithActionsReferenceObject.ChangeStatus(TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeState,System.Boolean)">
            <summary>
            Переводит извещение в новое состояние
            </summary>
            <param name="newStatus">Новое состояние извещения</param>
            <param name="useStatusForActions">Значение true, если требуется установить текущее состояниедля всех действий в извещении</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeWithActionsReferenceObject.SetReadyToApplyState">
            <summary>
            Переводит извещение в состояние "Готово к применению"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeWithActionsReferenceObject.SetApplyingState">
            <summary>
            Переводит извещение в состояние "Применяется"
            </summary>
            <remarks>Переход извещения в состояние "Применяется" возможен только из состояния "Готово к применению"</remarks>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeWithActionsReferenceObject.SetAppliedState(System.Boolean)">
            <summary>
            Переводит извещение в состояние "Применено". При этом не выполняется никаких действий, а только изменяются статусы извещения и его действий
            </summary>
            <param name="useStatusForActions">Значение true, если требуется установить состояние для действий извещения; в противном случае - значение false</param>
            <returns>Значение true, если извещение успешно переведено в нужное состояние; в противном случае - значение false</returns>
            <remarks>Переход извещения в состояние "Применено" возможен только из состояния "Применяется"</remarks>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeWithActionsReferenceObject.SetAppliedState">
            <summary>
            Переводит извещение в состояние "Применено". При этом не выполняется никаких действий, а только изменяются статусы извещения и его действий
            </summary>
            <returns>Значение true, если извещение успешно переведено в нужное состояние; в противном случае - значение false</returns>
            <remarks>Переход извещения в состояние "Применено" возможен только из состояния "Применяется"</remarks>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticAbstractReferenceObject">
            <summary>
            Любой объект справочника "Извещения об изменениях"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject">
            <summary>
            Объект "Действие" списка объектов "Действия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.IsAutomatic">
            <summary>
            Является ли дейтсвие автоматически применяемым
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.GenerateDesktopOperationInfo(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject})">
            <summary>
            Генерирует описание операции рабочего стола для указанной коллекции объектов
            </summary>
            <param name="items">Коллекция объектов рабочего стола</param>
            <returns>Описание операции рабочего стола</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.TryCheckOut(TFlex.DOCs.Model.References.ReferenceObject,System.Boolean@)">
            <summary>
            Берет объект на редактирование
            </summary>
            <param name="needCheckIn">Значение true, если необходимо применить изменения к объекту после операции; в противном случае - значение false</param>
            <returns>Значение true, если объект взят на редактирование; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.ChangingObj">
            <summary>
            Возвращает изменяемый объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.ActionDescription">
            <summary>
            Возвращает параметр "Описание действия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.ActionState">
            <summary>
            Возвращает параметр "Состояние действия"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.ExecuteAction(System.Boolean@)">
            <summary>
            Выполняет действие
            </summary>
            <param name="needCheckInNomenclatureObj">Значение true, если необходимо применить изменения для номенклатурного объекта после выполнения действия; в противном случае - значение false</param>
            <returns>Значение true, если действие выполнено успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.GetChangingObjectStage">
            <summary>
            Возвращает стадию изменяемого объекта
            </summary>
            <returns>Стадия объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.GetChangingObject">
            <summary>
            Возвращает изменяемый объект
            </summary>
            <returns>Изменяемый объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.GetChangingObjectGuid">
            <summary>
            Возвращает Guid связи "Изменяемый объект"
            </summary>
            <returns>Guid связи "Изменяемый объект"</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.SetApplyingState">
            <summary>
            Переводит действие в состояние "В процессе применения"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.SetAppliedState">
            <summary>
            Переводит действие в состояние "Применено"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.Apply(System.Boolean@)">
            <summary>
            Применяет действие
            </summary>
            <param name="needCheckInNomenclatureObject">Значение true, если необходимо применить изменения для номенклатурного объекта после выполнения действия; в противном случае - значение false</param>
            <returns>Значение true, если действие успешно применено; в противном случае - значение false</returns>
            <remarks>Выполняет действие и переводит его в состояние "Применено". Если невозможно выполнить действие, то оно остается в состоянии "В процессе применения"</remarks>   
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.Fields">
            <summary>
            Идентификаторы
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.Fields.Name">
            <summary>
            Guid параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.Fields.ActionDescription">
            <summary>
            Guid параметра "Описание действия"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.Fields.ActionState">
            <summary>
            Guid параметра "Состояние действия"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.Fields.ChangingObject">
            <summary>
            Guid связи "Изменяемый объект"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionReferenceObject.Fields.ActionClassGuid">
            <summary>
            Guid типа "Действие"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.VariantReplaceActionReferenceObject">
            <summary>
            Объект "Замена другим вариантом" списка объектов "Действия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.VariantReplaceActionReferenceObject.VariantObj">
            <summary>
            Возвращает вариант изменяемого объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.VariantReplaceActionReferenceObject.ToStringBase">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns>Строковое представление объекта</returns>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.VariantReplaceActionReferenceObject.VariantObject">
            <summary>
            Guid связи "Вариант объекта"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.EditActionReferenceObject">
            <summary>
            Объект "Изменение" списка объектов "Действия"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.EditActionReferenceObject.ToStringBase">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns>Строковое представление объекта</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ReplaceFileEditActionReferenceObject">
            <summary>
            Объект "Замена файла" списка объектов "Действия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ReplaceFileEditActionReferenceObject.DestinationFile">
            <summary>
            Целевой файл
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ReplaceFileEditActionReferenceObject.SourceFile">
            <summary>
            Исправленный файл
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ReplaceFileEditActionReferenceObject.ToStringBase">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns>Строковое представление объекта</returns>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ReplaceFileEditActionReferenceObject.DestFileGuid">
            <summary>
            Guid связи "Целевой файл"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ReplaceFileEditActionReferenceObject.SourceFileGuid">
            <summary>
            Guid связи "Исправленны файл"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.CancelEditActionReferenceObject">
            <summary>
            Объект "Аннулировать" списка объектов "Действия"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.CancelEditActionReferenceObject.ToStringBase">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns>Строковое представление объекта</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionsReference">
            <summary>
            Список объектов "Действия" справочника "Извещения об изменениях"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionsReference.CreateReferenceObjectForClass(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект указанного типа в текущем списке объектов
            </summary>
            <param name="classObject">Тип создаваемого объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionsReference.Classes">
            <summary>
            Возвращает дерево типов списка объектов
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionsTypes">
            <summary>
            Дерево типов списка объектов "Действия"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionType">
            <summary>
            Тип "Действие" объектов списка "Действия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionType.IsDeleteAction">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Удаление"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionType.IsAddAction">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Добавление"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionType.IsEditAction">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Изменение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionType.IsEntrancesChangingAction">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Изменение параметров вхождения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionType.IsReplaceAction">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Замена другим объектом"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionType.IsVariantReplaceAction">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Замена другим вариантом"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionType.IsReplaceFileEditAction">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Замена файла"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionType.IsCancelEditAction">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Аннулировать"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ActionType.Classes">
            <summary>
            Возвращает дерево типов
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.AssemblyActionReferenceObject">
            <summary>
            Объект "Действие над объектом сборки" списка объектов "Действия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.AssemblyActionReferenceObject.ChangingNode">
            <summary>
            Возвращает изменяемый узел
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.AssemblyActionReferenceObject.GetChangingNodeGuid">
            <summary>
            Возвращает Guid связи "Изменяемый узел"
            </summary>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.AssemblyActionReferenceObject.SetChangingNode(TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject)">
            <summary>
            Задает изменяемый узел
            </summary>
            <param name="newObject">Объект, задаваемый в качестве изменяемого узла</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.AssemblyActionReferenceObject.GetChangingObject">
            <summary>
            Возвращает изменяемый узел
            </summary>
            <returns>Изменяемый узел</returns>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.AssemblyActionReferenceObject.ChangingNodeGuid">
            <summary>
            Guid связи "Изменяемый узел"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.DeleteActionReferenceObject">
            <summary>
            Объект "Удаление" списка объектов "Действия"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.DeleteActionReferenceObject.ExecuteAction(System.Boolean@)">
            <summary>
            Выполняет действие
            </summary>
            <param name="needCheckInNomenclatureObj">Значение true, если необходимо применить изменения для номенклатурного объекта после выполнения действия; в противном случае - значение false</param>
            <returns>Значение true, если действие выполнено успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.DeleteActionReferenceObject.ToStringBase">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns>Строковое представление объекта</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.AddActionReferenceObject">
            <summary>
            Объект "Добавление" списка объектов "Действия"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.AddActionReferenceObject.ExecuteAction(System.Boolean@)">
            <summary>
            Выполняет действие
            </summary>
            <param name="needCheckInNomenclatureObj">Значение true, если необходимо применить изменения для номенклатурного объекта после выполнения действия; в противном случае - значение false</param>
            <returns>Значение true, если действие выполнено успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.AddActionReferenceObject.ToStringBase">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns>Строковое представление объекта</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.AddActionReferenceObject.Count">
            <summary>
            Возвращает параметр "Количество"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.AddActionReferenceObject.Comment">
            <summary>
            Возвращает параметр "Примечание"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ReplaceActionReferenceObject">
            <summary>
            Объект "Замена другим объектом" списка объектов "Действия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ReplaceActionReferenceObject.NewObject">
            <summary>
            Возвращает новый объект
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ReplaceActionReferenceObject.ExecuteAction(System.Boolean@)">
            <summary>
            Выполняет действие
            </summary>
            <param name="needCheckInNomenclatureObj">Значение true, если необходимо применить изменения для номенклатурного объекта после выполнения действия; в противном случае - значение false</param>
            <returns>Значение true, если действие выполнено успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ReplaceActionReferenceObject.ToStringBase">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns>Строковое представление объекта</returns>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ReplaceActionReferenceObject.NewObjectGuid">
            <summary>
            Guid связи "Новый объект"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.EntrancesChangingActionReferenceObject">
            <summary>
            Объект "Изменение параметров вхождения" списка объектов "Действия"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.EntrancesChangingActionReferenceObject.ExecuteAction(System.Boolean@)">
            <summary>
            Выполняет действие
            </summary>
            <param name="needCheckInNomenclatureObj">Значение true, если необходимо применить изменения для номенклатурного объекта после выполнения действия; в противном случае - значение false</param>
            <returns>Значение true, если действие выполнено успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.EntrancesChangingActionReferenceObject.ToStringBase">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns></returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.EntrancesChangingActionReferenceObject.Count">
            <summary>
            Возвращает параметр "Количество"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.EntrancesChangingActionReferenceObject.Remarks">
            <summary>
            Возвращает параметр "Примечание"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticesReference">
            <summary>
            Справочник "Извещения об изменениях"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticesReference.ModificationNoticesReferenceGuid">
            <summary>
            Guid справочника "Извещения об изменениях"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticesReference.ActionsGroupGuid">
            <summary>
            Guid списка объектов "Действия"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.PreliminaryModificationNoticeReferenceObject">
            <summary>
            Объект "Предварительное извещение (ПИ)" справочника "Извещения об изменениях"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ProposalToChangeReferenceObject">
            <summary>
            Объект "Предложение об изменении (ПИ)" справочника "Извещения об изменениях"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticesClasses.NFC">
            <summary>
            извещение об изменениях (ИИ)
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticesClasses.AdditionalNFC">
            <summary>
            Дополнительное извещение (ДИ)
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticesClasses.PreliminaryNFC">
            <summary>
            Предварительное извещение (ПИ)
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticesClasses.AdditionalPreliminaryNFC">
            <summary>
            Дополнительное извещение на ПИ (ДПИ)
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticesClasses.ProposalToChange">
            <summary>
            Предложение об изменении (ПР)
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeType">
            <summary>
            Тип объектов справочника "Извещения об изменениях"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeType.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeType.IsNFC">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Извещение об изменениях (ИИ)"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeType.IsAdditionalNFC">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Дополнительное извещение (ДИ)"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeType.IsPreliminaryNFC">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Предварительное извещение (ПИ)"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeType.IsAdditionalPreliminaryNFC">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Дополнительное извещение на ПИ (ДПИ)"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeType.IsProposalToChange">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Предложение об изменении (ПИ)"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeTypes">
            <summary>
            Дерево типов справочника "Извещения об изменениях"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.ModificationNotices.ModificationNoticeTypes.GetModificationNoticeBaseClass">
            <summary>
            Возвращает тип "Извещение об изменениях"
            </summary>
            <returns>Тип "Извещение об изменениях"</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.BillOfMaterials">
            <summary>
            Объект типа "Спецификация" справочника "Номенклатура и изделия"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.Document">
            <summary>
            Объект типа "Документ" справочника "Номенклатура и изделия"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.FolderObject">
            <summary>
            Объект типа "Папка" справочника "Номенклатура и изделия"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.InheritNomenclatureType">
            <summary>
            Порожденный тип объектов справочника "Номенклатура и изделия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.InheritNomenclatureType.Icon">
            <summary>
            Возвращает иконку типа
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.MaterialObject">
            <summary>
            Объект типа "Материальный объект" справочника "Номенклатура и изделия"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink">
            <summary>
            Подключение в справочнике "Номенклатура и изделия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.Amount">
            <summary>
            Возвращает параметр "Количество"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.Unit">
            <summary>
            Возвращает параметр "Единица измерения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.Remarks">
            <summary>
            Возвращает параметр "Примечания"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.UseInSpecification">
            <summary>
            Возвращает параметр "Входит в спецификацию"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.UseInStructure">
            <summary>
            Возвращает параметр "Входит в состав изделий"
            </summary>       
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.BomSection">
            <summary>
            Возвращает параметр "Раздел спецификации"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.Position">
            <summary>
            Возвращает параметр "Позиция"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.AmountForAssembly">
            <summary>
            Возвращает параметр "Количество на изделие"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.AmountForComplect">
            <summary>
            Возвращает параметр "Количество на комплект"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.FieldKeys">
            <summary>
            Идентификаторы параметров
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.FieldKeys.Amount">
            <summary>
            Guid параметра "Количество"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.FieldKeys.UseInSpecification">
            <summary>
            Guid параметра "Входит в спецификацию"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.FieldKeys.UseInStructure">
            <summary>
            Guid параметра "Входит в состав изделий"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.FieldKeys.StructureType">
            <summary>
            Guid параметра "Тип в составе"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.FieldKeys.BomSection">
            <summary>
            Guid параметра "Раздел спецификации"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.FieldKeys.Remarks">
            <summary>
            Guid параметра "Примечания"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.FieldKeys.Position">
            <summary>
            Guid параметра "Позиция"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.FieldKeys.AmountForAssembly">
            <summary>
            Guid параметра "Количество на изделие"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.FieldKeys.AmountForComplect">
            <summary>
            Guid параметра "Количество на комплект"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureHierarchyLink.FieldKeys.Unit">
            <summary>
            Guid параметра "Единица измерения"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject">
            <summary>
            Объект типа "Объект номенклатуры" справочника "Номенклатура и изделия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.Denotation">
            <summary>
            Возвращает параметр "Обозначение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.VariantName">
            <summary>
            Возвращает параметр "Название варианта"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.Code">
            <summary>
            Возвращает параметр "Заводской код"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.Version">
            <summary>
            Возвращает параметр "Исполнение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.Format">
            <summary>
            Возвращает параметр "Формат"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.Mass">
            <summary>
            Возвращает параметр "Масса"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.IsEndOfProduct">
            <summary>
            Возвращает параметр "Является конечным изделием"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.Letter">
            <summary>
            Возвращает параметр "Литера"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.BaseVersion">
            <summary>
            Возвращает базовое исполнение объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.SetBaseVersion(TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject,System.String)">
            <summary>
            Задает базовое исполнение объекта
            </summary>
            <param name="newBaseVersion">Объект номенклатуры, являющийся базовым исполнением</param>
            <param name="versionName">Наименование исполнения</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.GetBaseDenotation">
            <summary>
            Возвращает обозначение базового исполнения
            </summary>
            <returns>Обозначение базового исполнения</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.IsVersion">
            <summary>
            Возвращает значение, указывающее, является ли объект исполнением
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.CanChangeLink(TFlex.DOCs.Model.References.Links.LinkInfo,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Проверяет, возможна ли смена связанного объекта
            </summary>
            <param name="link">Связь</param>
            <param name="addObject">Новый связанный объект</param>
            <param name="removeObject">Прежний связанный объект</param>
            <returns>Значение true, если смена связанного объекта возможна; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.GetVersions">
            <summary>
            Получает список исполнений объекта
            </summary>
            <returns>Список исполнений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.GetVariants">
            <summary>
            Возвращает список вариантов объекта
            </summary>
            <returns>Список вариантов</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.IsVariant">
            <summary>
            Возвращает значение, указывающее, является ли объект вариантом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.ModificationNotices">
            <summary>
            Возвращает список изменений в уведомлениях по действиям объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.CreateVersion(System.String,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.String)">
            <summary>
            Создаёт исполнение текущего объекта
            </summary>
            <param name="versionName">Наименование исполнения</param>
            <param name="copyChildren">Значение true, если требуется скопировать состав объекта; в противном случае - значение false</param>
            <param name="copyFiles">Значение true, если требуется скопировать файлы объекта; в противном случае - значение false</param>
            <param name="skip">Список идентификаторов групп и парметров, которые должны быть пропущенными при копировании</param>
            <returns>Созданное исполнение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.CreateVersion(System.String,TFlex.DOCs.Model.References.ReferenceObject,System.Boolean,TFlex.DOCs.Model.References.CopyReferenceObjectsContext)">
            <summary>
            Создаёт исполнение текущего объекта на основе прототипа связанного объекта
            </summary>
            <param name="versionName">Наименование исполнения</param>
            <param name="prototype">Прототип связанного объекта</param>
            <param name="copyChildren">Значение true, если требуется скопировать состав объекта; в противном случае - значение false</param>
            <param name="context">Параметры копирования прототипа</param>
            <returns>Созданное исполнение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.CreateVariant(System.String,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.String)">
            <summary>
            Создает вариант текущего объекта
            </summary>
            <param name="variantName">Наименование варианта</param>
            <param name="copyChildren">Значение true, если требуется скопировать состав объекта; в противном случае - значение false</param>
            <param name="copyFiles">Значение true, если требуется скопировать файлы объекта; в противном случае - значение false</param>
            <param name="skip">Список идентификаторов групп и парметров, которые должны быть пропущенными при копировании</param>
            <returns>Созданный вариант</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.CreateVariant(System.String,TFlex.DOCs.Model.References.ReferenceObject,System.Boolean,TFlex.DOCs.Model.References.CopyReferenceObjectsContext)">
            <summary>
            Создает вариант текущего объекта на основе прототипа связанного объекта
            </summary>
            <param name="variantName">Наименование варианта</param>
            <param name="prototype">Прототип связанного объекта</param>
            <param name="copyChildren">Значение true, если требуется скопировать состав объекта; в противном случае - значение false</param>
            <param name="context">Параметры копирования прототипа</param>
            <returns>Созданный вариант</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.UpdateByVariant(TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject)">
            <summary>
            Обновляет объект, на основе его варианта
            </summary>
            <param name="variantObject">Вариант объекта</param>
            <returns>Список, состоящий из текущего объекта, связанного объекта и изменённых файлов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.CreateChildLink(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает подключение к заданному дочернему объекту
            </summary>
            <param name="childObject">Дочерний объект</param>
            <returns>Созданное подключение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.CreateParentLink(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает подключение к заданному родительскому объекту
            </summary>
            <param name="parentObject">Родительский объект</param>
            <returns>Созданное подключение</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.HasLinkedObject">
            <summary>
            Возвращает значение, указывающее, имеется ли у текущего объекта связанный объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.LinkedObject">
            <summary>
            Возвращает связанный объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.LinkedObjectId">
            <summary>
            Возвращает Id связанного объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.LinkedObjectReferenceId">
            <summary>
            Возвращает Id справочника связанного объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.GetSimilarObjects">
            <summary>
            Получает схожие по параметрам объекты номенклатуры
            </summary>
            <returns>Список объектов номенклатуры</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.AddToParent(TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject,System.Collections.Generic.IDictionary{System.Int32,System.Object})">
            <summary>
            Добавляет текущий объект в состав другого объекта
            </summary>
            <param name="parentObject">Родительский объект</param>
            <param name="linkParameters">Параметры подключения в виде пар "Id параметра - значение параметра"</param>
            <returns>Созданное подключение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject.ToStringBase">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns>Строковое представление объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObjectCreator.#ctor(TFlex.DOCs.Model.References.Nomenclature.NomenclatureReference,TFlex.DOCs.Model.References.Nomenclature.NomenclatureType,TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject)">
            <summary>
            Добавление объекта в справочник Номенклатура
            </summary>
            <param name="reference">Справочник номенклатуры</param>
            <param name="type">Тип создаваемого объекта</param>
            <param name="parentObject">Объект, к которому надо подключить добавляемый</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObjectCreator.GetSimilarObjects">
            <summary>
            Возвращает похожие по параметрам объекты номенклатуры
            </summary>
            <returns></returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObjectCreator.CheckUniqueObjects">
            <summary>
            Возвращает true, если необходимо делать поиск уникального объекта, с такими же параметрами
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObjectCreator.OnExisingObjectFound(TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject)">
            <summary>
            Вызывается если найдено точное совпадение по проверке уникальности
            </summary>
            <param name="exisingObject">Совпадающей объект</param>
            <returns>true, чтобы подключить совпадающий объект, false - чтобы отменить операцию создания</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObjectCreator.SearchSimilarObjects">
            <summary>
            Возвращает true, если необходимо делать подбор похожих объектов номенклатуры при создании
            </summary>
            <remarks>Если возвращает false, то OnSimilarObjectsFound вызываться не будет</remarks>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObjectCreator.OnSimilarObjectsFound(System.Collections.Generic.List{TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject},TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject@)">
            <summary>
            Вызывается, если найдены существующие похожие по параметрам объекты номенклатуры
            </summary>
            <param name="objects">Похожие по параметрам объекты номенклатуры</param>
            <param name="exisingObject">Объект, который надо подключить</param>
            <returns>true, чтобы отменить операцию создания</returns>
            <remarks>Если метод вернёт true, а exisingObject будет не задан, будет создан новый объект в справочнике номенклатуры</remarks>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObjectCreator.OnSourceObjectsFound(System.Collections.Generic.List{TFlex.DOCs.Model.References.ReferenceObject})">
            <summary>
            Вызывается, если найдены подходящие по параметрам объекты связанного справочника
            </summary>
            <param name="objects">Подходящие по параметрам объекты связанного справочника</param>
            <returns>Объект который надо связать с новым объектом номенклатуры</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObjectCreator.CreateNewObject(TFlex.DOCs.Model.References.Nomenclature.NomenclatureType,TFlex.DOCs.Model.References.Reference,TFlex.DOCs.Model.Classes.ClassObject,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создаёт новый объект в связанном справочнике
            </summary>
            <param name="nomenclatureClass"></param>
            <param name="reference">Справочник</param>
            <param name="linkedClass">Тип создаваемого объекта</param>
            <param name="parentObject">Родительский объект (по умолчанию всегда null)</param>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureObjectCreator.FindDefaultParnet(TFlex.DOCs.Model.References.Nomenclature.NomenclatureType,TFlex.DOCs.Model.References.Reference,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Находит папку по умолчанию в случае если в CreateNewObject parent == null, создаёт вложенную папку в соответствии с настройками
            </summary>
            <param name="reference">Справочник</param>
            <param name="classObject">Тип создаваемого объекта</param>
            <param name="parentObject">Родительский объект (по умолчанию всегда null)</param>
            <returns></returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReference">
            <summary>
            Справочник "Номенклатура и изделия"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReference.#ctor">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReference.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReference.FindByLinkedObject(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Получает объект номенклатуры по связанному объекту
            </summary>
            <param name="linkedObject">Связанный объект</param>
            <returns>Объект номенклатуры</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReference.CreateNomenclatureObject(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject,System.Collections.Generic.IDictionary{System.Int32,System.Object},TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject)">
            <summary>
            Создает объект номенклатуры и связывает его с указанным объектом справочника
            </summary>
            <param name="linkedObject">Объект справочника для связи с номенклатурой</param>
            <param name="parentObject">Родительский номенклатурный объект</param>
            <param name="linkParameters">Параметры подключения создаваемого объекта к родительскому в виде коллекции пар "Id параметра - значение параметра"</param>
            <param name="source">Объект номенклатуры, на основании свойств которого создается новый объект</param>
            <returns>Созданный объект номенклатуры</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject">
            <summary>
            Объект справочника "Номенклатура и изделия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.Parent">
            <summary>
            Возвращает родительский объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.Class">
            <summary>
            Возвращает тип объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.CreateParentLink(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает подключение к указанному родительскому объекту 
            </summary>
            <param name="parentObject">Родительский объект</param>
            <returns>Созданное подключение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.CreateChildLink(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает подключение к указанному дочернему объекту
            </summary>
            <param name="childObject">Дочерний объект</param>
            <returns>Созданное подключение</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.LinkedTPReference">
            <summary>
            Возвращает справочник, содержащий объекты по связи "Техпроцессы"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.FieldKeys">
            <summary>
            Идентификаторы параметров
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.FieldKeys.Name">
            <summary>
            Guid параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.FieldKeys.Denotation">
            <summary>
            Guid параметра "Обозначение"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.FieldKeys.Code">
            <summary>
            Guid параметра "Заводской код"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.FieldKeys.Version">
            <summary>
            Guid параметра "Исполнение"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.FieldKeys.Mass">
            <summary>
            Guid параметра "Масса"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.FieldKeys.Format">
            <summary>
            Guid параметра "Формат"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.FieldKeys.EndOfProduct">
            <summary>
            Guid параметра "Является конечным изделием"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.FieldKeys.VariantName">
            <summary>
            Guid параметра "Название варианта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.FieldKeys.Letter">
            <summary>
            Литера
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.RelationKeys">
            <summary>
            Идентификаторы отношений
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.RelationKeys.BaseVersion">
            <summary>
            Guid связи "Базовое исполнение"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.RelationKeys.LinkedTP">
            <summary>
            Guid связи "Техпроцессы"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureReferenceObject.RelationKeys.ChangeNotices">
            <summary>
            Guid связи "Извещения об изменениях"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.NomenclatureRule">
            <summary>
            Правило синхронизации параметров номенклатурного объекта со связанным
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureRule.#ctor(TFlex.DOCs.Model.Structure.ParameterInfo,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает новый экземпляр правила
            </summary>
            <param name="nomenclatureParameter">Номенклатурный параметр</param>
            <param name="referenceParameter">Соответствующий параметр</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureRule.CanCreateFor(TFlex.DOCs.Model.Structure.ParameterInfo,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Возвращает значение, указывающее, возможно ли создание правила для заданных параметров
            </summary>
            <param name="nomenclatureParameter">Номенклатурный параметр</param>
            <param name="referenceParameter">Соответствующий параметр</param>
            <returns></returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureRule.NomenclatureParameter">
            <summary>
            Возвращает номенклатурный параметр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureRule.ReferenceParameter">
            <summary>
            Возвращает соответствующий параметр
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureRule.GetHashCode">
            <summary>
            Возвращает хэш-код правила
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureRule.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если заданный объект равен текущему; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureRule.ToString">
            <summary>
            Возвращает строковое представление правила
            </summary>
            <returns>Строковое представление правила</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType">
            <summary>
            Тип объектов справочника "Номенклатура и изделия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.IsFolder">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Папка"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.IsObject">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Объект номенклатуры"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.IsMaterialObject">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Материальный объект"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.IsDocument">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Документ"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.IsBillOfMaterials">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Спецификация"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.IsMaterial">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Материал"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.IsAssembly">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Сборочная единица"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.IsDetail">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Деталь"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.IsStandardItem">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Стандартное изделие"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.IsDrawing">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Чертеж"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.IsTechnologicalProcess">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Технологический процесс"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.IsEquipment">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Оснащение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.IsTechnologicalNode">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Технологический узел"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.IsProduct">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Изделие"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.IsPiece">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Заготовка"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.SupportsVersions">
            <summary>
            Возвращает значение, указывающее, поддерживает ли текущий тип исполнения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.HasLinkedClass">
            <summary>
            Возвращает значение, указывающее, есть ли связанный тип для текущего типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.LinkedClass">
            <summary>
            Возвращает связанный тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.Hidden">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип отключенным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.CanCreateObjects">
            <summary>
            Возвращает значение, указывающее, возможно ли создание объектов данного типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.LinkedReference">
            <summary>
            Возвращает связанный справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.LinkedInheritClasses">
            <summary>
            Возвращает значение, указывающее, можно ли использовать порожденные типы
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.CreateInheritClasses">
            <summary>
            Создает порожденные типы
            </summary>
            <returns>Значение true, если типы успешно созданы; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.BaseNomenclatureType">
            <summary>
            Возвращает базовый тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.Rules">
            <summary>
            Возвращает список правил синхронизации параметров 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureType.Attributes">
            <summary>
            Возвращает атрибуты типа
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeAttributes">
            <summary>
            Коллекция атрибутов типа объектов справочника "Номенклатура и изделия"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeAttributes.DefaultNewObjectFolderAttributeName">
            <summary>
            Наименование атрибута, содержащего папку по умолчанию, в которой создаются новые связанные объекты
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeAttributes.SupportMultiAttachmentAttributeName">
            <summary>
            Наименование атрибута для настройки поддержки подключения объекта несколько раз к одному родителю
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeAttributes.DefaultNewObjectFolder">
            <summary>
            Возвращает атрибут, содержащий папку по умолчанию, в которой создаются новые связанные объекты
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeAttributes.MultiAttachment">
            <summary>
            Возвращает атрибут для настройки подключения объекта несколько раз к одному родителю
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeAttribute">
            <summary>
            Атрибут типа объектов справочника "Номенклатура и изделия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeAttribute.HierarchyParameter">
            <summary>
            Возвращает описание параметра подключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeAttribute.IsSystem">
            <summary>
            Возвращает значение, указывающее, является ли атрибут системным 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeAttribute.CanChangeCaption">
            <summary>
            Возвращает значение, указывающее, можно ли изменить наименование атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeAttribute.Caption">
            <summary>
            Возвращает или задает наименование атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeAttribute.Value">
            <summary>
            Возвращает или задает значение атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeAttribute.CanRemove">
            <summary>
            Возвращает значение, указвающее, возможно ли удаление атрибута
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeAttribute.Clone">
            <summary>
            Создает копию текущего атрибута
            </summary>
            <returns>Новый атрибут</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.DefaultNewObjectFolderAttribute">
            <summary>
            Атрибут, содержащий папку по умолчанию, в которой создаются новые связанные объекты
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.DefaultNewObjectFolderAttribute.IsInherit">
            <summary>
            Возвращает или задает значение, указывающее, использовать ли настройки базового типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.DefaultNewObjectFolderAttribute.ShowFolderDialog">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли показывать диалог выбора папки перед созданием объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.DefaultNewObjectFolderAttribute.DefaultFolderKey">
            <summary>
            Возвращает или задает Guid папки по умолчанию, в которой создаются новые связанные объекты
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.DefaultNewObjectFolderAttribute.CreateUserSubfolder">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли создавать ли подпапку для каждого пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.DefaultNewObjectFolderAttribute.IsSystem">
            <summary>
            Возвращает значение, указывающее, является ли атрибут системным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.DefaultNewObjectFolderAttribute.CanSerialize">
            <summary>
            Возвращает значение, указывающее, может ли атрибут быть сериализован
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.DefaultNewObjectFolderAttribute.CanChangeCaption">
            <summary>
            Возвращает значение, указывающее, можно ли изменить наименование атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.DefaultNewObjectFolderAttribute.Caption">
            <summary>
            Возвращает или задает наименование атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.DefaultNewObjectFolderAttribute.Value">
            <summary>
            Возвращает или задает значение атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.DefaultNewObjectFolderAttribute.CanRemove">
            <summary>
            Возвращает значение, указвающее, возможно ли удаление атрибута
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.DefaultNewObjectFolderAttribute.Clone">
            <summary>
            Создает копию текущего атрибута
            </summary>
            <returns>Новый атрибут</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.DefaultNewObjectFolderAttribute.FindDefaultParnet(TFlex.DOCs.Model.References.Reference)">
            <summary>
            Находит папку по умолчанию или создаёт вложенную папку в соответствии с настройками
            </summary>
            <param name="reference">Справочник</param>
            <returns>Папка</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.SupportMultiAttachmentAttribute">
            <summary>
            Атрибут для настройки поддержки подключения объекта несколько раз к одному родителю
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.SupportMultiAttachmentAttribute.IsSystem">
            <summary>
            Возвращает значение, указывающее, является ли атрибут системным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.SupportMultiAttachmentAttribute.CanSerialize">
            <summary>
            Возвращает значение, указывающее, может ли атрибут быть сериализован
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.SupportMultiAttachmentAttribute.CanChangeCaption">
            <summary>
            Возвращает значение, указывающее, можно ли изменить наименование атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.SupportMultiAttachmentAttribute.Caption">
            <summary>
            Возвращает или задает наименование атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.SupportMultiAttachmentAttribute.Value">
            <summary>
            Возвращает или задает значение атрибута
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.SupportMultiAttachmentAttribute.CanRemove">
            <summary>
            Возвращает значение, указвающее, возможно ли удаление атрибута
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.SupportMultiAttachmentAttribute.Clone">
            <summary>
            Создает копию текущего атрибута
            </summary>
            <returns>Новый атрибут</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.SupportMultiAttachmentAttribute.IsInherit">
            <summary>
            Возвращает значение, указывающее, наследуется ли значение атрибута с родительского типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.SupportMultiAttachmentAttribute.SupportMultiAttachment">
            <summary>
            Возвращает или задает значение, указывающее, поддерживается ли подключение объекта несколько раз к одному родителю
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeBuilder">
            <summary>
            Конструктор типа объектов справочника "Номенклатура и изделия"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeBuilder.#ctor(TFlex.DOCs.Model.References.Nomenclature.NomenclatureType)">
            <summary>
            Создает экземпляр класса для редактирования указанного типа
            </summary>
            <param name="type">Тип объектов номенклатуры</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeBuilder.#ctor(TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes)">
            <summary>
            Создает экземпляр класса для создания типа
            </summary>
            <param name="types">Дерево типов справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeBuilder.#ctor(TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes,TFlex.DOCs.Model.References.Nomenclature.NomenclatureType)">
            <summary>
            Создает экземпляр класса для создания типа, порожденного от указанного базового типа
            </summary>
            <param name="types">Дерево типов справочника</param>
            <param name="baseType">Базовый тип</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeBuilder.#ctor(TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes,TFlex.DOCs.Model.References.Nomenclature.NomenclatureType,TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает экземпляр класса для создания типа, порожденного от указанного базового типа и связанного с указанным типом
            </summary>
            <param name="types">Дерево типов справочника</param>
            <param name="baseType">Базовый тип</param>
            <param name="linkedClass">Связанный тип</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeBuilder.Classes">
            <summary>
            Возвращает дерево типов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeBuilder.Class">
            <summary>
            Возвращает тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeBuilder.Base">
            <summary>
            Возвращает базовый тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeBuilder.IsModified">
            <summary>
            Возвращает значение, указывающее, является ли тип модифицированным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeBuilder.LinkedClass">
            <summary>
            Возвращает или задает связанный тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeBuilder.LinkedInheritClasses">
            <summary>
            Возвращает или задает значение, указывающее, можно ли использовать порожденные типы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeBuilder.Rules">
            <summary>
            Возвращает коллекцию правил синхронизации номенклатурного объекта со связанным
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeBuilder.Save">
            <summary>
            Сохраняет тип
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeBuilder.RuleCollection">
            <summary>
            Коллекция правил синхронизации параметров номенклатурного объекта со связанным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypeBuilder.RuleCollection.Builder">
            <summary>
            Возвращает конструктор типа
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes">
            <summary>
            Дерево типов справочника "Номенклатура и изделия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Folder">
            <summary>
            Возвращает тип "Папка"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Object">
            <summary>
            Возвращает тип "Объект номенклатуры"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.MaterialObject">
            <summary>
            Возвращает тип "Материальный объект"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Document">
            <summary>
            Возвращает тип "Документ"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Detail">
            <summary>
            Возвращает тип "Деталь"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Assembly">
            <summary>
            Возвращает тип "Сборочная единица"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Drawing">
            <summary>
            Возвращает тип "Чертеж"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.StandardItem">
            <summary>
            Возвращает тип "Стандартное изделие"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Material">
            <summary>
            Возвращает тип "Материал"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Product">
            <summary>
            Возвращает тип "Изделие"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.TechnologicalProcess">
            <summary>
            Возвращает тип "Технологический процесс"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.TechnologicalNode">
            <summary>
            Возвращает тип "Технологический узел"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Complete">
            <summary>
            Возвращает тип "Комплект"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Complex">
            <summary>
            Возвращает тип "Комплекс"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.ElectronicComponent">
            <summary>
            Возвращает тип "Электронный компонент"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Equipment">
            <summary>
            Возвращает тип "Оснащение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Piece">
            <summary>
            Возвращает тип "Заготовка"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Keys">
            <summary>
            Идентификаторы типов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Keys.Folder">
            <summary>
            Guid типа "Папка"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Keys.Object">
            <summary>
            Guid типа "Объект номенклатуры"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Keys.MaterialObject">
            <summary>
            Guid типа "Материальный объект"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Keys.Document">
            <summary>
            Guid типа "Документ"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Keys.BillOfMaterials">
            <summary>
            Guid типа "Спецификация"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Keys.Detail">
            <summary>
            Guid типа "Деталь"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Keys.Assembly">
            <summary>
            Guid типа "Сборочная единица"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Keys.Drawing">
            <summary>
            Guid типа "Четреж"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Keys.StandardItem">
            <summary>
            Guid типа "Стандартное изделие"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Keys.Material">
            <summary>
            Guid типа "Материал"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Keys.TechnologicalProcess">
            <summary>
            Guid типа "Технологический процесс"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Keys.Product">
            <summary>
            Guid типа "Изделие"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Keys.ElectronicComponent">
            <summary>
            Guid типа "Электронный компонент"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Keys.TechnologicalNode">
            <summary>
            Guid типа "Технологический узел"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Keys.Complete">
            <summary>
            Guid типа "Комплект"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Keys.Complex">
            <summary>
            Guid типа "Комплекс"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Keys.Equipment">
            <summary>
            Guid типа "Оснащение"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Nomenclature.NomenclatureTypes.Keys.Piece">
            <summary>
            Guid типа "Заготовка"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectValue">
            <summary>
            Значение, получаемое на основе пути по структуре справочника
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.ObjectValue.Null">
            <summary>
            Пустое значение
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectValue.Value">
            <summary>
            Возвращает значение типа Object
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.GetValue">
            <summary>
            Возвращает значение типа Object
            </summary>
            <returns>Значение типа Object</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.GetValue``1">
            <summary>
            Возвращает значение типа T
            </summary>
            <typeparam name="T">Тип получаемого значения</typeparam>
            <returns>Значение типа T</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.ToString">
            <summary>
            Возвращает строковое представление значения
            </summary>
            <returns>Строковое представление значения</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectValue.IsCollection">
            <summary>
            Возвращает значение, указывающее, является ли значение коллекцией
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectValue.IsObject">
            <summary>
            Возвращает значение, указывающее, является ли значение объектом справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectValue.IsParameter">
            <summary>
            Возвращает значение, указывающее, является ли значение параметром
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.ToString(System.String,System.IFormatProvider)">
            <summary>
            Возвращает строковое представление значения, созданное с использованием указанного формата и сведений об особенностях формата для данного языка и региональных стандартов.
            </summary>
            <param name="format">Формат</param>
            <param name="formatProvider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Строковое представление</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.GetTypeCode">
            <summary>
            Возвращает TypeCode для типа значения.
            </summary>
            <returns>Константа перечислимого типа TypeCode</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.System#IConvertible#GetTypeCode">
            <summary>
            Возвращает TypeCode для типа значения.
            </summary>
            <returns>Константа перечислимого типа TypeCode</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.ToBoolean(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип Boolean
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате Boolean</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.ToByte(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип Byte
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате Byte</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.ToChar(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип Char
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате Char</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.ToDateTime(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип DateTime
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате DateTime</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.ToDecimal(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип Decimal
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате Decimal</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.ToDouble(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип Double
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате Double</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.ToInt16(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип Int16
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате Int16</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.ToInt32(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип Int32
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате Int32</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.ToInt64(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип Int64
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате Int64</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.ToSByte(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип SByte
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате SByte</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.ToSingle(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип Single
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате Single</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.ToString(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип String
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате String</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.ToType(System.Type,System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в заданный тип
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в заданном формате</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.ToUInt16(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип UInt16
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате UInt16</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.ToUInt32(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип UInt32
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате UInt32</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue.ToUInt64(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип UInt64
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате UInt64</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.NullObjectValue">
            <summary>
            Пустое значение, полученное на основе пути по структуре справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.NullObjectValue.GetValue">
            <summary>
            Возвращает значение типа Object
            </summary>
            <returns>Значение типа Object</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectValue`1">
            <summary>
            Значение типа T, полученное на основе пути по структуре справочника
            </summary>
            <typeparam name="T">Тип объекта</typeparam>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue`1.#ctor(`0)">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="value">Значение типа T</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectValue`1.Value">
            <summary>
            Возвращает значение типа T
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValue`1.GetValue">
            <summary>
            Возвращает значение типа Object
            </summary>
            <returns></returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ReferenceObjectValue">
            <summary>
            Объект справочника, полученный на основе пути по структуре справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectValue.#ctor(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ComplexHierarchyLink)">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="object">Объект справочника</param>
            <param name="link">Подключение объекта</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObjectValue.IsObject">
            <summary>
            Возвращает значение, указывающее, является ли значение объектом справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectValue.GetValue">
            <summary>
            Возвращает значение типа Object
            </summary>
            <returns>Значение типа Object</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObjectValue.Object">
            <summary>
            Возвращает объект справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObjectValue.Link">
            <summary>
            Возвращает подключение объекта справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ParameterObjectValue">
            <summary>
            Параметр, полученный на основе пути по структуре справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.#ctor(TFlex.DOCs.Model.Parameters.Parameter)">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="parameter">Параметр</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ParameterObjectValue.Parameter">
            <summary>
            Возвращает параметр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ParameterObjectValue.IsParameter">
            <summary>
            Возвращает значение, указывающее, является ли значение параметром
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.GetValue">
            <summary>
            Возвращает значение типа Object
            </summary>
            <returns>Значение типа Object</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.ToString(System.String,System.IFormatProvider)">
            <summary>
            Возвращает строковое представление параметра, созданное с использованием указанного формата и сведений об особенностях формата для данного языка и региональных стандартов.
            </summary>
            <param name="format">Формат</param>
            <param name="formatProvider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Строковое представление</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.GetTypeCode">
            <summary>
            Возвращает TypeCode для типа значения параметра.
            </summary>
            <returns>Константа перечислимого типа TypeCode</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.ToBoolean(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип Boolean
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате Boolean</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.ToByte(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип Byte
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате Byte</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.ToChar(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип Char
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате Char</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.ToDateTime(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип DateTime
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате DateTime</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.ToDecimal(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип Decimal
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате Decimal</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.ToDouble(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип Double
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате Double</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.ToInt16(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип Int16
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате Int16</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.ToInt32(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип Int32
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате Int32</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.ToInt64(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип Int64
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате Int64</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.ToSByte(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип SByte
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате SByte</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.ToSingle(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип Single
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате Single</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.ToString(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип String
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате String</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.ToType(System.Type,System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в заданный тип
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в заданном формате</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.ToUInt16(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип UInt16
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате UInt16</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.ToUInt32(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип UInt32
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате UInt32</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterObjectValue.ToUInt64(System.IFormatProvider)">
            <summary>
            Преобразование значения из текущего типа в тип UInt64
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение в формате UInt64</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.SignatureObjectValue">
            <summary>
            Параметр подписи, полученный на основе пути по структуре справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.SignatureObjectValue.#ctor(TFlex.DOCs.Model.Signatures.Signature,TFlex.DOCs.Model.Signatures.SignatureParameter)">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="value">Значение типа T</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.SignatureObjectValue.Signature">
            <summary>
            Возвращает подпись
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.SignatureObjectValue.SignatureParameter">
            <summary>
            Возвращает параметр подписи
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.FilePreviewImageObjectValue">
            <summary>
            Изображение файла, полученное на основе пути по структуре справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.FilePreviewImageObjectValue.File">
            <summary>
            Файл изображения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.FilePreviewImageObjectValue.PageIndex">
            <summary>
            Номер страницы
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Links.RelationTree">
            <summary>
            Дерево отношений объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.RelationTree.#ctor(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает новый экземпляр дерева для указанного корневого объекта
            </summary>
            <param name="rootObject">Корневой объект дерева</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.RelationTree.RootObject">
            <summary>
            Возвращает корневой объект дерева
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.RelationTree.Relations">
            <summary>
            Возвращает коллекцию отношений
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.RelationTree.Fill(TFlex.DOCs.Model.References.LoadSettings)">
            <summary>
            Заполняет дерево отношений на основании указанных настроек загрузки
            </summary>
            <param name="settings">Настройки загрузки</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Links.RelationTree.Relation">
            <summary>
            Отношение
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.RelationTree.Relation.LoadSettings">
            <summary>
            Параметры загрузки объектов отношения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.RelationTree.Relation.MasterRelation">
            <summary>
            Возвращает отношение, которое является владельцем для текущего
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.RelationTree.Relation.Objects">
            <summary>
            Возвращает коллекцию объектов отношения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.RelationTree.Relation.Links">
            <summary>
            Возвращает коллекцию связей отношения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.RelationTree.Relation.HierarchyLinks">
            <summary>
            Возвращает коллекцию иерархических подключений отношения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.RelationTree.Relation.SlaveRelations">
            <summary>
            Возвращает коллекцию подчиненных отношений
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Links.RelationTree.Link">
            <summary>
            Связь между двумя объектами
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.RelationTree.Link.#ctor(System.Int32,System.Int32,System.Byte[])">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="masterObjectId">Id владельца связи</param>
            <param name="slaveObjectId">Id связанного объекта</param>
            <param name="context">Контекст</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.RelationTree.Link.MasterObjectId">
            <summary>
            Возвращает Id владельца связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.RelationTree.Link.SlaveObjectId">
            <summary>
            Возвращает Id связанного объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.RelationTree.Link.Context">
            <summary>
            Возвращает контекст связи
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Links.OneToOneLink">
            <summary>
            Связь объекта справочника типа 1:1 или N:1
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToOneLink.LinkedObject">
            <summary>
            Возвращает связанный объект
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToOneLink.Load">
            <summary>
            Выполняет загрузку связанного объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToOneLink.IsAdded">
            <summary>
            Возвращает значение, указывающее, является ли связь добавленной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToOneLink.IsModified">
            <summary>
            Возвращает значение, указывающее, была ли связь модифицирована
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToOneLink.IsDeleted">
            <summary>
            Возвращает значение, указывающее, является ли связь удаленной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToOneLink.IsChanged">
            <summary>
            Возвращает значение, указывающее, была ли связь изменена (добавлена, модифицирована или удалена)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToOneLink.IsLoaded">
            <summary>
            Возвращает значение, указывающее, загружен ли связанный объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToOneLink.IsOneToOne">
            <summary>
            Возвращает значение, указывающее, является ли связь связью 1:1 или N:1
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToOneLink.Reload">
            <summary>
            Перезагружает связанный объект
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToOneLink.SetLinkedObject(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Задает связанный объект
            </summary>
            <param name="linkedObject">Объект</param>
            <returns>Новый связанный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToOneLink.GetSwappedLinkedObjects">
            <summary>
            Для двунаправленной связи возвращает список объектов по данной связи в обратном направлении
            </summary>
            <returns>Список объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToOneLink.IsObjectAdded(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает значение, указывающее, был ли заданный объект подключен по данной связи
            </summary>
            <param name="object">Объект справочника</param>
            <returns>Значение true, если объект был подключен; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToOneLink.IsObjectRemoved(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает значение, указывающее, был ли заданный объект отключен от данной связи
            </summary>
            <param name="object">Объект справочника</param>
            <returns>Значение true, если объект был отключен; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Links.AnyReferenceLink">
            <summary>
            Связь объекта справочника с любым справочником
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.AnyReferenceLink.IsAnyReference">
            <summary>
            Возвращает значение, указывающее, является ли связь связью с любым справочником
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.AnyReferenceLink.IsModified">
            <summary>
            Возвращает значение, указывающее, была ли связь модифицирована
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.AnyReferenceLink.Load(System.Int32)">
            <summary>
            Выполняет загрузку указанного количества связанных объектов
            </summary>
            <param name="count">Количество загружаемых объектов</param>
            <returns>Значение true, если объекты были загружены; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.AnyReferenceLink.Load">
            <summary>
            Выполняет загрузку всех связанных объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.AnyReferenceLink.State">
            <summary>
            Возвращает состояние загрузки связанных объектов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.AnyReferenceLink.AddLinkedObject(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект к данной связи
            </summary>
            <param name="linkedObject">Подключаемый объект</param>
            <returns>Подключенный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.AnyReferenceLink.RemoveLinkedObject(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Отключает объект от данной связи
            </summary>
            <param name="linkedObject">Отключаемый объект</param>
            <returns>Значение true, если объект успешно отключен; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.AnyReferenceLink.RemoveAll">
            <summary>
            Отключает все связанные объекты
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.AnyReferenceLink.IsObjectAdded(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает значение, указывающее, был ли заданный объект подключен по данной связи
            </summary>
            <param name="object">Объект справочника</param>
            <returns>Значение true, если объект был подключен; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.AnyReferenceLink.IsObjectRemoved(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает значение, указывающее, был ли заданный объект отключен от данной связи
            </summary>
            <param name="object">Объект справочника</param>
            <returns>Значение true, если объект был отключен; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.AnyReferenceLink.IndexOf(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает индекс указанного объекта в списке связанных объектов
            </summary>
            <param name="item">Объект справочника</param>
            <returns>Индекс объекта в списке</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.AnyReferenceLink.Item(System.Int32)">
            <summary>
            Возвращает объект, находящийся в списке связанных объектов по данному индексу
            </summary> 
            <param name="index">Индекс объекта в списке</param>
            <returns>Объект справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.AnyReferenceLink.Clear">
            <summary>
            Очищает список связанных объектов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.AnyReferenceLink.Contains(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает значение, указывающее, содержится ли заданный объект в списке связанных объектов
            </summary>
            <param name="item">Объект справочника</param>
            <returns>Значение true, если объект содержится в списке; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.AnyReferenceLink.CopyTo(TFlex.DOCs.Model.References.ReferenceObject[],System.Int32)">
            <summary>
            Копирует связанные объекты в указанный массив, начиная с конкретного индекса массива
            </summary>
            <param name="array">Массив, в который копируются объекты</param>
            <param name="arrayIndex">Значение индекса в массиве, с которого начинается копирование</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.AnyReferenceLink.CountLoaded">
            <summary>
            Возвращает количество загруженных связанных объектов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.AnyReferenceLink.GetEnumerator">
            <summary>
            Возвращает перечислитель связанных объектов
            </summary>
            <returns>Перечислитель объектов ReferenceObject</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.AnyReferenceLink.FindMasterObjects(TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Model.References.Reference,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Получает список объектов указанного справочника, связанный с заданным объектом по указанной связи с любым справочником 
            </summary>
            <param name="anyReferenceLink">Группа параметров, описывающая связь с любым справочником</param>
            <param name="masterReference">Справочник - владелец связи</param>
            <param name="slaveObject">Объект</param>
            <returns>Список связанных объектов</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Links.AnyReferenceLinkManager">
            <summary>
            Менеджер для управления связями объекта с любым справочником
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.AnyReferenceLinkManager.Owner">
            <summary>
            Возвращает владельца связей
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.AnyReferenceLinkManager.ReloadAll">
            <summary>
            Перезагружает все связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.AnyReferenceLinkManager.LinkGroups">
            <summary>
            Возвращает коллекцию групп параметров, описывающих связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.AnyReferenceLinkManager.Item(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Возвращает связь по ее группе параметров
            </summary>
            <param name="linkGroup">Группа параметров</param>
            <returns>Связь</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.AnyReferenceLinkManager.Item(System.Guid)">
            <summary>
            Возвращает связь по GUID ее группы параметров
            </summary>
            <param name="linkGroupGuid">GUID группы параметров</param>
            <returns>Связь</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.AnyReferenceLinkManager.Item(System.Int32)">
            <summary>
            Возвращает связь по ID ее группы параметров
            </summary>
            <param name="linkGroupId">ID группы параметров</param>
            <returns>Связь</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.AnyReferenceLinkManager.IsModified">
            <summary>
            Возвращает значение, указывающее, была ли модифицирована хотя бы одна из связей
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.AnyReferenceLinkManager.GetEnumerator">
            <summary>
            Возвращает перечислитель связей
            </summary>
            <returns>Перечислитель связей</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Links.OneToManyRelation">
            <summary>
            Отношение объекта справочника типа 1:N или N:N
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToManyRelation.LinkReference">
            <summary>
            Возвращает подчиненный справочник для данной связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToManyRelation.Objects">
            <summary>
            Возвращает коллекцию связанных объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToManyRelation.IsModified">
            <summary>
            Возвращает, значение, указывающее, была ли связь модифицирована
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToManyRelation.GetEnumerator">
            <summary>
            Возвращает перечислитель связанных объектов
            </summary>
            <returns>Перечислитель объектов ReferenceObject</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Links.OneToManyTable">
            <summary>
            Список объектов объекта справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToManyTable.IsModified">
            <summary>
            Возвращает значение, указывающее, была ли связь модифицирована
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToManyTable.IsTableOneToMany">
            <summary>
            Возвращает значение, указывающее, является ли связь списком объектов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToManyTable.IsObjectAdded(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает значение, указывающее, был ли добавлен заданный объект в список объектов
            </summary>
            <param name="object">Объект справочника</param>
            <returns>Значение true, если объект был добавлен; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToManyTable.IsObjectRemoved(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает значение, указывающее, был ли удален заданный объект из списка объектов
            </summary>
            <param name="object">Объект справочника</param>
            <returns>Значение true, если объект был удален; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToManyTable.DeleteAll">
            <summary>
            Удаляет все объекты из списка объектов
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Links.LinkInfo">
            <summary>
            Связь объекта справочника с другими объектами
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.LinkInfo.LinkGroup">
            <summary>
            Возвращает группу параметров, описывающую связь
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.LinkInfo.MasterObject">
            <summary>
            Возвращает владельца связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.LinkInfo.RootMasterObject">
            <summary>
            Возвращает объект-владелец владельца связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.LinkInfo.IsOneToOne">
            <summary>
            Возвращает значение, указывающее, является ли связь связью 1:1 или N:1
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.LinkInfo.IsOneToMany">
            <summary>
            Возвращает значение, указывающее, является ли связь отношением 1:N или N:N
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.LinkInfo.IsTableOneToMany">
            <summary>
            Возвращает значение, указывающее, является ли связь списком объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.LinkInfo.IsLinkOneToMany">
            <summary>
            Возвращает значение, указывающее, является ли связь связью 1:N или N:N
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.LinkInfo.IsAnyReference">
            <summary>
            Возвращает значение, указывающее, является ли связь связью с любым справочником
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.LinkInfo.ToString">
            <summary>
            Возвращает строковое представление связи
            </summary>
            <returns>Строковое представление</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.LinkInfo.IsObjectAdded(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает значение, указывающее, был ли заданный объект подключен по данной связи
            </summary>
            <param name="object">Объект справочника</param>
            <returns>Значение true, если объект был подключен; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.LinkInfo.IsObjectRemoved(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает значение, указывающее, был ли заданный объект отключен от данной связи
            </summary>
            <param name="object">Объект справочника</param>
            <returns>Значение true, если объект был отключен; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Links.OneToManyLink">
            <summary>
            Связь объекта справочника типа 1:N или N:N
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToManyLink.IsModified">
            <summary>
            Возвращает значение, указывающее, была ли связь модифицирована
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToManyLink.IsLinkOneToMany">
            <summary>
            Возвращает значение, указывающее, является ли связь связью 1:N или N:N
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToManyLink.AddLinkedObject(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект к данной связи
            </summary>
            <param name="linkedObject">Подключаемый объект</param>
            <returns>Подключенный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToManyLink.RemoveLinkedObject(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Отключает объект от данной связи
            </summary>
            <param name="linkedObject">Отключаемый объект</param>
            <returns>Значение true, если объект успешно отключен; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToManyLink.RemoveAll">
            <summary>
            Отключает все связанные объекты
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToManyLink.GetSwappedLinkedObject">
            <summary>
            Для двунаправленной связи 1:N возвращает объект по данной связи в обратном направлении
            </summary>
            <returns>Связанный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToManyLink.GetSwappedLinkedObjects">
            <summary>
            Для двунаправленной связи N:N возвращает список объектов по данной связи в обратном направлении
            </summary>
            <returns>Список объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToManyLink.IsObjectAdded(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает значение, указывающее, был ли заданный объект подключен по данной связи
            </summary>
            <param name="object">Объект справочника</param>
            <returns>Значение true, если объект был подключен; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToManyLink.IsObjectRemoved(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает значение, указывающее, был ли заданный объект отключен от данной связи
            </summary>
            <param name="object">Объект справочника</param>
            <returns>Значение true, если объект был отключен; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Links.OneToManyRelationManager">
            <summary>
            Менеджер для управления отношениями объекта типа 1:N и N:N
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToManyRelationManager.Owner">
            <summary>
            Возвращает владельца связей
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToManyRelationManager.ReloadAll">
            <summary>
            Перезагружает все связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToManyRelationManager.LinkGroups">
            <summary>
            Возвращает коллекцию групп параметров, описывающих связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToManyRelationManager.Item(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Возвращает связь по ее группе параметров
            </summary>
            <param name="linkGroup">Группа параметров</param>
            <returns>Связь</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToManyRelationManager.Item(System.Guid)">
            <summary>
            Возвращает связь по GUID ее группы параметров
            </summary>
            <param name="linkGroupGuid">GUID группы параметров</param>
            <returns>Связь</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToManyRelationManager.Item(System.Int32)">
            <summary>
            Возвращает связь по ID ее группы параметров
            </summary>
            <param name="linkGroupId">ID группы параметров</param>
            <returns>Связь</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToManyRelationManager.IsModified">
            <summary>
            Возвращает значение, указывающее, была ли модифицирована хотя бы одна из связей
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToManyRelationManager.IsRelationModified(System.Guid)">
            <summary>
            Возвращает true, если указанный список объектов или связь были изменены
            </summary>
            <param name="linkGroupGuid">Guid связи или списка объектов</param>
            <returns>true, если указанный список объектов или связь были изменены</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToManyRelationManager.GetEnumerator">
            <summary>
            Возвращает перечислитель связей
            </summary>
            <returns>Перечислитель связей</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Links.OneToOneLinkManager">
            <summary>
            Менеджер для управления связями объекта типа 1:1 и N:1
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToOneLinkManager.Owner">
            <summary>
            Возвращает владельца связей
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToOneLinkManager.ReloadAll">
            <summary>
            Перезагружает связи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToOneLinkManager.ToReferenceObjectList">
            <summary>
            Возвращает список всех связанных объектов
            </summary>
            <returns>Список связанных объектов</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToOneLinkManager.Item(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Возвращает связь по ее группе параметров
            </summary>
            <param name="linkGroup">Группа параметров</param>
            <returns>Связь</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToOneLinkManager.Item(System.Guid)">
            <summary>
            Возвращает связь по GUID ее группы параметров
            </summary>
            <param name="linkGroupGuid">GUID группы параметров</param>
            <returns>Связь</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToOneLinkManager.Item(System.Int32)">
            <summary>
            Возвращает связь по ID ее группы параметров
            </summary>
            <param name="linkGroupId">ID группы параметров</param>
            <returns>Связь</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToOneLinkManager.LinkGroups">
            <summary>
            Возвращает коллекцию групп параметров, описывающих связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.OneToOneLinkManager.IsModified">
            <summary>
            Возвращает значение, указывающее, была ли модифицирована хотя бы одна из связей
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.OneToOneLinkManager.GetEnumerator">
            <summary>
            Возвращает перечислитель связей
            </summary>
            <returns>Перечислитель связей</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Links.ReferenceObjectLinks">
            <summary>
            Класс для управления всеми связями объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.ReferenceObjectLinks.ToOne">
            <summary>
            Возвращает менеджер связей 1:1 и N:1
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.ReferenceObjectLinks.OneToOne">
            <summary>
            Возвращает менеджер связей 1:1 и N:1
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.ReferenceObjectLinks.ToMany">
            <summary>
            Возвращает менеджер отношений 1:N и N:N
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.ReferenceObjectLinks.OneToMany">
            <summary>
            Возвращает менеджер отношений 1:N и N:N
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Links.ReferenceObjectLinks.AnyReference">
            <summary>
            Возвращает менеджер связей с любым справочником
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.ReferenceObjectLinks.Clear">
            <summary>
            Очищает все связи объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Links.ReferenceObjectLinks.Fill(TFlex.DOCs.Model.References.LoadSettings)">
            <summary>
            Загружает все связанные объекты 
            </summary>
            <param name="settings">Параметры загрузки объектов справочника</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectValueCollection">
            <summary>
            Коллекция значений, полученных на основе пути по структуре справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectValueCollection.IsCollection">
            <summary>
            Возвращает значение, указывающее, является ли значение коллекцией
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectValueCollection.Values">
            <summary>
            Возвращает коллекцию значений ObjectValue
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValueCollection.GetValue">
            <summary>
            Возвращает первое значение в коллекции
            </summary>
            <returns>Значение типа Object</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValueCollection.GetValues">
            <summary>
            Возвращает коллекцию значений ObjectValue
            </summary>
            <returns>Коллекция значений ObjectValue</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectValueCollection.Count">
            <summary>
            Возвращает количество элементов в коллекции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValueCollection.GetEnumerator">
            <summary>
            Возвращает перечислитель объектов ObjectValue для текущей коллекции
            </summary>
            <returns>Перечислитель объектов ObjectValue</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectValueCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Возвращает перечислитель объектов для текущей коллекции
            </summary>
            <returns>Перечислитель объектов</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ListObjectValueCollection">
            <summary>
            Список значений, полученных на основе пути по структуре справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ListObjectValueCollection.#ctor(System.Collections.Generic.List{TFlex.DOCs.Model.References.ObjectValue})">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="values">Список значений ObjectValue</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ListObjectValueCollection.Values">
            <summary>
            Возвращает коллекцию значений ObjectValue, доступную только для чтения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ListObjectValueCollection.GetValues">
            <summary>
            Возвращает коллекцию значений ObjectValue, доступную только для чтения
            </summary>
            <returns>Коллекция значений ObjectValue</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ListObjectValueCollection.Count">
            <summary>
            Возвращает количество элементов в списке
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ReferenceObjectComparer">
            <summary>
            Класс для сравнения объектов справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectComparer.Compare(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Сравнивает два объекта справочника
            </summary>
            <param name="x">Первый сравниваемый объект</param>
            <param name="y">Второй сравниваемый объект</param>
            <returns>Значение равное нулю, если объекты равны; значение больше нуля, если первый объект больше второго; значение меньше нуля, если первый объект меньше второго</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectComparer.Equals(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Определяет, равны ли два указанных объекта
            </summary>
            <param name="x">Первый объект для сравнения</param>
            <param name="y">Второй объект для сравнения</param>
            <returns>Значение true, если объекты равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectComparer.GetHashCode(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает хэш-код указанного объекта
            </summary>
            <param name="obj">Объект справочника</param>
            <returns>Хэш-код объекта справночника</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.SaveSetEditSession">
            <summary>
            Сессия редактирования набора объектов для сохранения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.SaveSetEditSession.#ctor">
            <summary>
            Создает новый экземпляр сессии
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.SaveSetEditSession.Add(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Добавляет объект в набор
            </summary>
            <param name="referenceObject">Объект справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.SaveSetEditSession.EndChanges">
            <summary>
            Завершение редактирования набора объектов
            </summary>
            <returns>Значение true, если редактирование успешно завершено; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.SaveSetEditSession.CancelChanges">
            <summary>
            Отменяет изменения набора объектов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.SaveSetEditSession.Dispose">
            <summary>
            Освобождает используемые ресурсы
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.LabelReferenceObject">
            <summary>
            Объект "Метка" списка объектов "Метки"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.LabelReferenceObject.Time">
            <summary>
            Возвращает или задает дату метки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.LabelReferenceObject.Name">
            <summary>
            Возвращает или задает наименование метки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.LabelReferenceObject.Comment">
            <summary>
            Возвращает или задает комментарий метки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.LabelReferenceObject.ImageObject">
            <summary>
            Возвращает изображение метки
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.LabelReferenceObject.Fields">
            <summary>
            Идентификаторы параметров и связей
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.LabelReferenceObject.Fields.Time">
            <summary>
            Guid параметра "Дата"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.LabelReferenceObject.Fields.Name">
            <summary>
            Guid параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.LabelReferenceObject.Fields.Comment">
            <summary>
            Guid параметра "Комментарий"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.LabelReferenceObject.Fields.Image">
            <summary>
            Guid связи "Изображение"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.LabelType">
            <summary>
            Тип объектов списка "Метки"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.LabelType.Classes">
            <summary>
            Возвращает дерево типов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.LabelType.IsLabel">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Метка"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.LabelTypes">
            <summary>
            Дерево типов списка объектов "Метки"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.LabelTypes.Keys">
            <summary>
            Идентификаторы типов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.LabelTypes.Keys.Label">
            <summary>
            Guid типа "Метка"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.LabelsReference">
            <summary>
            Список объектов "Метки" справочника "Проекты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.LabelsReference.Classes">
            <summary>
            Возвращает дерево типов списка объектов
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.ProjectTasksOrder">
            <summary>
            Порядок следования работ в проекте
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ProjectTasksOrder.Tasks">
            <summary>
            Список идентификаторов работ
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.OrderParameter">
            <summary>
            Параметр "Номер работы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.OrderParameter.#ctor(TFlex.DOCs.Model.Parameters.ParameterCollection,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает новый параметр в указанной коллекции
            </summary>
            <param name="owner">Коллекция параметров</param>
            <param name="info">Описание параметра</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.OrderParameter.GetTaskPostition(TFlex.DOCs.Model.References.Projects.BaseTaskObject)">
            <summary>
            Возвращает позицию указанной работы
            </summary>
            <param name="task">Работа, для которой требуется получить позицию</param>
            <returns>Позиция указанной работы в текущей работе</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.OrderParameter.AddTask(TFlex.DOCs.Model.References.Projects.BaseTaskObject)">
            <summary>
            Добавляет указанную работу к списку позиций работ
            </summary>
            <param name="task">Добавляемая работа</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.OrderParameter.MoveTask(TFlex.DOCs.Model.References.Projects.BaseTaskObject,TFlex.DOCs.Model.References.Projects.BaseTaskObject,System.Int32)">
            <summary>
            Перемещает указанную работу относительно заданной на указанное число позиций
            </summary>
            <param name="movedTask">Перемещаемая работа</param>
            <param name="targetTask">Работа, относительно которой выполняется перемещение</param>
            <param name="shift">Число позиций для перемещения</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.OrderParameter.InsertTasks(TFlex.DOCs.Model.References.Projects.BaseTaskObject,System.Collections.Generic.List{TFlex.DOCs.Model.References.ReferenceObject},System.Boolean)">
            <summary>
            Вставляет указанный список работ до или после заданной работы
            </summary>
            <param name="targetTask">Работа, относительно которой выполняется перемещение</param>
            <param name="tasks">Список работ, который требуется переместить</param>
            <param name="before">Значение true, если список нужно вставить до заданной работы; значение false, если список нужно вставить после заданной работы</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.OrderParameter.InsertBefore(TFlex.DOCs.Model.References.Projects.BaseTaskObject,System.Collections.Generic.List{TFlex.DOCs.Model.References.ReferenceObject})">
            <summary>
            Вставляет указанный список работ перед заданной работой
            </summary>
            <param name="targetTask">Работа, относительно которой выполняется перемещение</param>
            <param name="tasks">Список работ, который требуется переместить</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.OrderParameter.InsertAfter(TFlex.DOCs.Model.References.Projects.BaseTaskObject,System.Collections.Generic.List{TFlex.DOCs.Model.References.ReferenceObject})">
            <summary>
            Вставляет указанный список работ после заданной работой
            </summary>
            <param name="targetTask">Работа, относительно которой выполняется перемещение</param>
            <param name="tasks">Список работ, который требуется переместить</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.OrderParameter.RemoveTask(TFlex.DOCs.Model.References.Projects.BaseTaskObject)">
            <summary>
            Удаляет указанную работу из списка позиций работ
            </summary>
            <param name="task">Удаляемая работа</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.OrderParameter.RemoveAllTasks">
            <summary>
            Удаляет все работы из списка позиций работ
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.OrderParameter.Value">
            <summary>
            Возвращает или задает значение параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.OrderParameter.IsNull">
            <summary>
            Возвращает значение, указывающее, является ли значение параметра равным NULL
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.OrderParameter.GetTypeCode">
            <summary>
            Возвращает код типа значения параметра
            </summary>
            <returns>Код типа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.OrderParameter.Refresh">
            <summary>
            Сбрасывает список позиций работ
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.TaskLinkClassType">
            <summary>
            Тип объектов списка объектов "Связь с родителем"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TaskLinkClassType.Classes">
            <summary>
            Возвращает дерево типов списка объектов
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.TaskLinkTypes">
            <summary>
            Дерево типов списка объектов "Связь с родителем"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.TaskLinkReference">
            <summary>
            Список объектов "Связь с родителем"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TaskLinkReference.Classes">
            <summary>
            Возвращает дерево типов списка объектов
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.ResourceSpendingType">
            <summary>
            Способ расходования ресурса
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.ResourceSpendingType.AtTheBegining">
            <summary>
            В начале
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.ResourceSpendingType.Continuously">
            <summary>
            Равномерно
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.ResourceSpendingType.AtTheEnd">
            <summary>
            В конце
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.ResourceLinkReferenceObject">
            <summary>
            Объект списка объектов "Связь с ресурсом"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ResourceLinkReferenceObject.Resource">
            <summary>
            Возвращает или задает ресурс
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ResourceLinkReferenceObject.Quantity">
            <summary>
            Возвращает или задает количество ресурса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ResourceLinkReferenceObject.Value">
            <summary>
            Возвращает или задает стоимость ресурса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ResourceLinkReferenceObject.SpendingValueType">
            <summary>
            Возвращает или задает способ оплаты
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.ResourceLinkReferenceObject.UpdateValue">
            <summary>
            Обновляет значение стоимости ресурса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ResourceLinkReferenceObject.BaseTask">
            <summary>
            Возвращает или задает работу - владельца данной связи с ресурсом
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.ResourceLinkReferenceObject.Fields">
            <summary>
            Идентификаторы параметров и связей
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.ResourceLinkReferenceObject.Fields.Resource">
            <summary>
            Guid связи "Ресурс"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.ResourceLinkReferenceObject.Fields.Quantity">
            <summary>
            Guid параметра "Количество ресурса"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.ResourceLinkReferenceObject.Fields.Value">
            <summary>
            Guid параметра "Стоимость"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.ResourceLinkReferenceObject.Fields.SpendingType">
            <summary>
            Guid параметра "Способ оплаты"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.LabourResourceLinkObject">
            <summary>
            Объект "Связь с трудовым ресурсом" списка объектов "Связь с ресурсом"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.LabourResourceLinkObject.Employment">
            <summary>
            Возвращает или задает процент занятости
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.LabourResourceLinkObject.BasicRate">
            <summary>
            Возвращает или задает ставку
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.LabourResourceLinkObject.SetDuration(System.Int32)">
            <summary>
            Устанавливает продолжительность использования ресурса
            </summary>
            <param name="duration"></param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.LabourResourceLinkObject.UpdateValue">
            <summary>
            Обновляет значение стоимости ресурса
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.LabourResourceLinkObject.LabourFields">
            <summary>
            Идентификаторы параметров
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.LabourResourceLinkObject.LabourFields.Employment">
            <summary>
            Guid параметра "Процент занятости"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.LabourResourceLinkObject.LabourFields.BasicRate">
            <summary>
            Guid параметра "Ставка"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.MaterialResourceLinkObject">
            <summary>
            Объект "Связь с материальным ресурсом" списка объектов "Связь с ресурсом"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.MaterialResourceLinkObject.SpendingType">
            <summary>
            Возвращает или задает способ расходования ресурса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.MaterialResourceLinkObject.AutoCalc">
            <summary>
            Возвращает или задает значение параметра "Вычислять стоимость автоматически"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.MaterialResourceLinkObject.Price">
            <summary>
            Возвращает или задает цену
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.MaterialResourceLinkObject.UpdateValue">
            <summary>
            Обновляет значение стоимости ресурса
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.MaterialResourceLinkObject.MaterialFields">
            <summary>
            Идентификаторы параметров
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.MaterialResourceLinkObject.MaterialFields.SpendingType">
            <summary>
            Guid параметра "Способ расходования"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.MaterialResourceLinkObject.MaterialFields.AutoCalc">
            <summary>
            Guid параметра "Вычислять стоимость автоматически"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.MaterialResourceLinkObject.MaterialFields.Price">
            <summary>
            Guid параметра "Цена"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.SpendingResourceLinkObject">
            <summary>
            Объект "Связь с затратами" списка объектов "Связь с ресурсом"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.SpendingResourceLinkObject.Price">
            <summary>
            Возвращает или задает цену
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.SpendingResourceLinkObject.UpdateValue">
            <summary>
            Обновляет значение стоимости ресурса
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.SpendingResourceLinkObject.SpendingFields">
            <summary>
            Идентификаторы параметров
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.SpendingResourceLinkObject.SpendingFields.Price">
            <summary>
            Guid параметра "Цена"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.ResourceLinkType">
            <summary>
            Тип объектов списка "Связь с ресурсом"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ResourceLinkType.Classes">
            <summary>
            Возвращает дерево типов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ResourceLinkType.IsBaseResource">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Связь с ресурсом"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ResourceLinkType.IsLabourResource">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Связь с трудовым ресурсом"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ResourceLinkType.IsMaterialResource">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Связь с материальным ресурсом"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ResourceLinkType.IsSpendingResource">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Связь с затратами"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.ResourceLinkTypes">
            <summary>
            Дерево типов списка объектов "Связь с ресурсом"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.ResourceLinkTypes.Keys">
            <summary>
            Идентификаторы типов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.ResourceLinkTypes.Keys.BaseResource">
            <summary>
            Guid типа "Связь с ресурсом"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.ResourceLinkTypes.Keys.LabourResource">
            <summary>
            Guid типа "Связь с трудовым ресурсом"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.ResourceLinkTypes.Keys.MaterialResource">
            <summary>
            Guid типа "Связь с материальным ресурсом"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.ResourceLinkTypes.Keys.SpendingResource">
            <summary>
            Guid типа "Связь с затратами"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.ResourceLinkReference">
            <summary>
            Список объектов "Связь с ресурсом" справочника "Проекты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ResourceLinkReference.Classes">
            <summary>
            Возвращает дерево типов списка
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.TaskText">
            <summary>
            Текст работы на диаграмме Ганта
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskText.Empty">
            <summary>
            Пустой
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskText.StartTime">
            <summary>
            Время начала
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskText.EndTime">
            <summary>
            Время окончания
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskText.Duration">
            <summary>
            Длительность
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskText.Progress">
            <summary>
            Процент выполнения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskText.TaskOwner">
            <summary>
            Ответственный
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskText.Name">
            <summary>
            Наименование
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskText.Description">
            <summary>
            Описание
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskText.Costs">
            <summary>
            Суммарные затраты
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskText.CurrentCosts">
            <summary>
            Затраты на работу
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.TaskState">
            <summary>
            Состояние
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskState.Plan">
            <summary>
            Плановый
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskState.Default">
            <summary>
            Не начат
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskState.Started">
            <summary>
            Запущен
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskState.Paused">
            <summary>
            Остановлен
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskState.Finished">
            <summary>
            Закончен
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskState.AutoSendStarted">
            <summary>
            Автозапуск
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.TaskTexts">
            <summary>
            Тексты работы на диаграмме Ганта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.TaskTexts.#ctor(TFlex.DOCs.Model.References.Projects.TaskText,TFlex.DOCs.Model.References.Projects.TaskText,TFlex.DOCs.Model.References.Projects.TaskText,TFlex.DOCs.Model.References.Projects.TaskText,TFlex.DOCs.Model.References.Projects.TaskText)">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="top">Текст сверху</param>
            <param name="bottom">Текст снизу</param>
            <param name="left">Текст слева</param>
            <param name="right">Текст справа</param>
            <param name="inside">Текст внутри</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.TaskTexts.Merge(TFlex.DOCs.Model.References.Projects.TaskTexts)">
            <summary>
            Выполняет слияние текущего объекта с указанным
            </summary>
            <param name="other">Объект для слияния</param>
            <returns>Полученный в результате слияния объект</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TaskTexts.Top">
            <summary>
            Возвращает или задает текст сверху
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TaskTexts.Bottom">
            <summary>
            Возвращает или задает текст снизу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TaskTexts.Left">
            <summary>
            Возвращает или задает текст слева
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TaskTexts.Right">
            <summary>
            Возвращает или задает текст справа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TaskTexts.Inside">
            <summary>
            Возвращает или задает текст внутри
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.BaseTaskObject">
            <summary>
            Объект "Абстрактная работа" справочника "Проекты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.DateTimeInterval">
            <summary>
            Возвращает интервал времени между началом и окончанием работы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.IsStartTimeSet">
            <summary>
            Возвращает значение, указывающее, задан ли параметр "Начало"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.IsEndTimeSet">
            <summary>
            Возвращает значение, указывающее, задан ли параметр "Окончание"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.IsDurationSet">
            <summary>
            Возвращает значение, указывающее, задан ли параметр "Длительность (рабочих дней)"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.StartTime">
            <summary>
            Возвращает или задает время начала работы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.EndTime">
            <summary>
            Возвращает или задает время окончания работы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Duration">
            <summary>
            Возвращает или задает длительность работы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Description">
            <summary>
            Возвращает или задает описание работы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.OrderParameter">
            <summary>
            Возвращает или задает параметр "Номер работы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Order">
            <summary>
            Возвращает номер работы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.TaskOrderNumber">
            <summary>
            Возвращает позицию работы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Color">
            <summary>
            Возвращает или задает цвет
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Style">
            <summary>
            Возвращает стиль
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.BaseTaskObject.SetParent(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Устанавливает указанный объект в качестве родительского
            </summary>
            <param name="parentObject">Родительский объект</param>
            <returns>Значение true, если родительский объект успешно установлен; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.BaseTaskObject.AddToSaveSet(TFlex.DOCs.Model.References.ReferenceObjectSaveSet)">
            <summary>
            Добавляет текущий объект в набор объектов для сохранения
            </summary>
            <param name="saveSet">Набор объектов для сохранения</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.BaseTaskObject.UpdateStartTime(System.DateTime,TFlex.DOCs.Model.References.ReferenceObjectSaveSet)">
            <summary>
            Обновляет время начала работы
            </summary>
            <param name="startTime">Новое время начала работы</param>
            <param name="saveSet">Набор объектов для сохранения</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.BaseTaskObject.UpdateEndTime(System.DateTime,TFlex.DOCs.Model.References.ReferenceObjectSaveSet)">
            <summary>
            Обновляет время окончания работы
            </summary>
            <param name="endTime">Новое время окончания работы</param>
            <param name="saveSet">Набор объектов для сохранения</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.BaseTaskObject.MoveStartTimeTo(System.DateTime)">
            <summary>
            Сдвигает даты работы на указанную дату начала
            </summary>
            <param name="date">Дата начала работы</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.BaseTaskObject.MoveEndTimeTo(System.DateTime)">
            <summary>
            Сдвигает даты работы на указанную дату окончания
            </summary>
            <param name="date">Дата окончания работы</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.IsFixingTask">
            <summary>
            Возвращает или задает значение параметра "Фиксировать сроки"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.BaseTaskObject.GetChildTasks">
            <summary>
            Возвращает список дочерних работ
            </summary>
            <returns>Список дочерних работ</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.BaseTaskObject.StartTask">
            <summary>
            Запускает работу
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.BaseTaskObject.SetStartMailTask(System.Guid)">
            <summary>
            Устанавливает инициирующее почтовое задание
            </summary>
            <param name="mailTaskGuid">Guid почтового задания</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.ResourceLinks">
            <summary>
            Возвращает коллекцию связей с ресурсами
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Labels">
            <summary>
            Возвращает набор меток
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.StartTaskMessageGuid">
            <summary>
            Возвращает параметр "Инициирующее почтовое задание"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.StartMailTask">
            <summary>
            Возвращает инициирующее задание
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Progress">
            <summary>
            Возвращает или задает процент выполнения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Plan">
            <summary>
            Возвращает или задает плановую работу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.State">
            <summary>
            Возвращает или задает состояние работы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.AutoSendMessage">
            <summary>
            Возвращает или задает значение, указывающее, следует ли рассылать задания автоматически
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.MainWorkflowGuid">
            <summary>
            Возвращает или задает Guid основного бизнес-процесса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.MainProcedureGuid">
            <summary>
            Возвращает или задает Guid основного бизнес-процесса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.WorkflowObjects">
            <summary>
            Возвращает коллекцию связанных бизнес-процессов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.WorkflowReference">
            <summary>
            Возвращает справочник, содержащий связанные бизнес-процессы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.ProceduresReference">
            <summary>
            Возвращает справочник, содержащий связанные процедуры
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.ProcedureObjects">
            <summary>
            Возвращает коллекцию связанных процедур
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.AnyReferenceObjectsLink">
            <summary>
            Возвращает связь "Связь с объектом"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Owner">
            <summary>
            Возвращает или задает пользователя, ответственного за работу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Costs">
            <summary>
            Возвращает или задает суммарные затраты
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.CurrentCosts">
            <summary>
            Возвращает или задает затраты на работу
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.BaseTaskObject.UpdateCosts(TFlex.DOCs.Model.References.ReferenceObjectSaveSet)">
            <summary>
            Обновляет затраты на работу
            </summary>
            <param name="saveSet">Набор объектов для сохранения</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.BaseTaskObject.ChangeEndTimeByDuration(System.Int32)">
            <summary>
            Изменяет время окончания работы в зависимости от длительности
            </summary>
            <param name="duration">Длительность</param>
            <returns>Значение true, если время окончания работы было успешно изменено; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.BaseTaskObject.ChangeStartTimeByDuration(System.Int32)">
            <summary>
            Изменяет время начала работы в зависимости от длительности
            </summary>
            <param name="duration">Длительность</param>
            <returns>Значение true, если время начала работы было успешно изменено; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.BaseTaskObject.CalcDuration(System.DateTime,System.DateTime)">
            <summary>
            Вычисляет длительность работы в зависимости от времени начала и окончания
            </summary>
            <param name="start">Время начала работы</param>
            <param name="end">Время окончания работы</param>
            <returns>Длительность работы</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.BaseTaskObject.ChangeDurationByEndTime(System.DateTime)">
            <summary>
            Изменяет длительность работы в зависимости от времени окончания
            </summary>
            <param name="endTime">Время окончания</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.BaseTaskObject.ChangeDurationByStartTime(System.DateTime)">
            <summary>
            Изменяет длительность работы в зависимости от времени начала
            </summary>
            <param name="endTime">Время начала</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Texts">
            <summary>
            Возвращает или задает тексты работы на диаграмме
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.TopText">
            <summary>
            Возвращает строковое представление текста сверху 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.BottomText">
            <summary>
            Возвращает строковое представление текста снизу 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.LeftText">
            <summary>
            Возвращает строковое представление текста слева 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.RightText">
            <summary>
            Возвращает строковое представление текста справа 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.BaseTaskObject.InsideText">
            <summary>
            Возвращает строковое представление текста внутри 
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields">
            <summary>
            Идентификаторы параметров и связей
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.StartTime">
            <summary>
            Guid параметра "Начало"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.EndTime">
            <summary>
            Guid параметра "Окончание"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.Duration">
            <summary>
            Guid параметра "Длительность (рабочих дней)"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.IsFixingTask">
            <summary>
            Guid параметра "Фиксировать сроки"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.Description">
            <summary>
            Guid параметра "Описание работы"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.Resources">
            <summary>
            Guid списка объектов "Связь с ресурсом"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.Labels">
            <summary>
            Guid списка объектов "Метки"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.Progress">
            <summary>
            Guid параметра "Процент выполнения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.Plan">
            <summary>
            Guid связи "План"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.TopText">
            <summary>
            Guid параметра "Текст сверху"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.BottomText">
            <summary>
            Guid параметра "Текст снизу"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.LeftText">
            <summary>
            Guid параметра "Текст слева"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.RightText">
            <summary>
            Guid параметра "Текст справа"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.InsideText">
            <summary>
            Guid параметра "Текст внутри"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.State">
            <summary>
            Guid параметра "Состояние"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.Owner">
            <summary>
            Guid связи "Ответственный"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.TaskMessages">
            <summary>
            Guid связи "Связанные задания"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.StartTaskMessage">
            <summary>
            Guid связи "Инициирующее задание"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.StartMailTask">
            <summary>
            Guid параметра "Инициирующее почтовое задание"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.AutoSendMessage">
            <summary>
            Guid параметра "Рассылать задания автоматически"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.Costs">
            <summary>
            Guid параметра "Суммарные затраты"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.CurrentCosts">
            <summary>
            Guid параметра "Затраты на работу"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.Order">
            <summary>
            Guid параметра "Номер работы"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.Workflow">
            <summary>
            Guid связи "Бизнес-процессы"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.Procedures">
            <summary>
            Guid связи "Процедуры"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.MainWorkflow">
            <summary>
            Guid параметра "Основной бизнес-процесс"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.MainProcedure">
            <summary>
            Guid параметра "Основной бизнес-процесс"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.Color">
            <summary>
            Guid параметра "Цвет"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.Style">
            <summary>
            Guid связи "Стиль"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.BaseTaskObject.Fields.Objects">
            <summary>
            Guid связи "Связь с объектом"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.FolderObject">
            <summary>
            Объект "Папка" справочника "Проекты"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.ProjectObject">
            <summary>
            Объект "Проект" справочника "Проекты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ProjectObject.Calendar">
            <summary>
            Возвращает календарь проекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.ProjectObject.GetPlanList">
            <summary>
            Возвращает список плановых проектов
            </summary>
            <returns>Список плановых проектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.ProjectObject.AddPlan(TFlex.DOCs.Model.References.Projects.ProjectObject)">
            <summary>
            Добавляет новый плановый проект
            </summary>
            <param name="plan">Плановый проект</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.ProjectReference">
            <summary>
            Справочник "Проекты"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.ProjectReference.#ctor">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.ProjectReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ProjectReference.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.ProjectReference.GetAfterLoadSortComparer">
            <summary>
            Возвращает компаратор для сортировки объектов справочника после загрузки
            </summary>
            <returns>Компаратор объектов справочника</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.ProjectReferenceObject">
            <summary>
            Объект справочника "Проекты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ProjectReferenceObject.Name">
            <summary>
            Возвращает или задает наименование объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.ProjectReferenceObject.CheckInProject(System.Boolean)">
            <summary>
            Применяет изменения текущего проекта
            </summary>
            <param name="ShowSaveDialog">Значение true, если нужно показать диалог "Применение изменений"; в противном случае - значение false</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ProjectReferenceObject.AutoCheckOut">
            <summary>
            Возвращает или задает значение, указывающее, должен ли объект автоматически браться на редактирование 
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.ProjectType">
            <summary>
            Тип объектов справочника "Проекты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ProjectType.Classes">
            <summary>
            Возвращает дерево типов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ProjectType.IsBaseTask">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Абстрактная работа"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ProjectType.IsTask">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Работа"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ProjectType.IsProject">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Проект"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ProjectType.IsProjectsFolder">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Папка"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.ProjectTypes">
            <summary>
            Дерево типов справочника "Проекты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ProjectTypes.Project">
            <summary>
            Возвращает тип "Проект"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ProjectTypes.Task">
            <summary>
            Возвращает тип "Работа"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.ProjectTypes.BaseTask">
            <summary>
            Возвращает тип "Абстрактная работа"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.ProjectTypes.Keys">
            <summary>
            Идентификаторы типов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.ProjectTypes.Keys.BaseTask">
            <summary>
            Guid типа "Абстрактная работа"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.ProjectTypes.Keys.Task">
            <summary>
            Guid типа "Работа"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.ProjectTypes.Keys.Project">
            <summary>
            Guid типа "Проект"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.ProjectTypes.Keys.Folder">
            <summary>
            Guid типа "Папка"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.TaskLinkType">
            <summary>
            Тип связи между работами
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskLinkType.FinishToStart">
            <summary>
            Конец к началу
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskLinkType.FinishToFinish">
            <summary>
            Конец к концу
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskLinkType.StartToStart">
            <summary>
            Начало к началу
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskLinkType.StartToFinish">
            <summary>
            Начало к концу
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.TaskLinkObject">
            <summary>
            Связь с родителем
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TaskLinkObject.ChildObject">
            <summary>
            Возвращает дочернюю работу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TaskLinkObject.LinkType">
            <summary>
            Возвращает или задает тип связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TaskLinkObject.ParentObject">
            <summary>
            Возвращает или задает родительскую работу
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.TaskLinkObject.UpdateParentObject">
            <summary>
            Обновляет связь "Родительская работа"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TaskLinkObject.Delay">
            <summary>
            Возвращает или задает задержку данной связи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.TaskLinkObject.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если заданный объект равен текущему; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.TaskLinkObject.GetHashCode">
            <summary>
            Возвращает хэш-код объекта
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.TaskLinkReferenceObject">
            <summary>
            Объект списка объектов "Связь с родителем"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TaskLinkReferenceObject.LinkType">
            <summary>
            Возвращает или задает тип связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TaskLinkReferenceObject.ParentTask">
            <summary>
            Возвращает или задает родительскую работу
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.TaskLinkReferenceObject.UpdateParentObject">
            <summary>
            Обновляет связь "Родительская работа"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TaskLinkReferenceObject.Delay">
            <summary>
            Возвращает или задает задержку
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TaskLinkReferenceObject.ChildTask">
            <summary>
            Возвращает дочернюю работу связи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.TaskLinkReferenceObject.Check">
            <summary>
            Проверяет связь с родителем на корректность
            </summary>
            <returns>Значение true, если связь корректна; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.TaskLinkReferenceObject.Fields">
            <summary>
            Идентификаторы параметров и связей
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskLinkReferenceObject.Fields.LinkType">
            <summary>
            Guid параметра "Тип связи"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskLinkReferenceObject.Fields.Delay">
            <summary>
            Guid параметра "Задержка"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskLinkReferenceObject.Fields.Parent">
            <summary>
            Guid связи "Родительская работа"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.TaskObject">
            <summary>
            Объект "Работа" справочника "Проекты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TaskObject.ParentTasksList">
            <summary>
            Возвращает коллекцию объектов списка "Связь с родителем"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TaskObject.LinksToParentTasks">
            <summary>
            Возвращает коллекцию объектов "Связь с родителем"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.TaskObject.AddNewLink(TFlex.DOCs.Model.References.Projects.TaskObject,TFlex.DOCs.Model.References.Projects.TaskLinkType,System.Int32)">
            <summary>
            Добавляет новую связь работы с родителем
            </summary>
            <param name="source">Родительский объект связи</param>
            <param name="linkType">Тип связи</param>
            <param name="delay">Задержка</param>
            <returns>Значение true, если связь успешно добавлена; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.TaskObject.RemoveLinkToParentObject(TFlex.DOCs.Model.References.Projects.BaseTaskObject)">
            <summary>
            Удаляет связь работы с указанным родителем
            </summary>
            <param name="parent"></param>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Projects.TaskObject.TaskFields.ParentTasks">
            <summary>
            Guid списка объектов "Связь с родителем"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Projects.TimeInterval">
            <summary>
            Временной интервал
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Projects.TimeInterval.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Создает новый интервал
            </summary>
            <param name="start">Начало интервала</param>
            <param name="end">Окончание интервала</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TimeInterval.StartTime">
            <summary>
            Возвращает или задает время начала
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TimeInterval.EndTime">
            <summary>
            Возвращает или задает время окончания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Projects.TimeInterval.Duration">
            <summary>
            Возвращает длительность интервала
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.BomSections.BomSectionsReference">
            <summary>
            Справочник "Разделы спецификации"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.BomSections.BomSectionsReference.#ctor">
            <summary>
            Создает новый экземпляр справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.BomSections.BomSectionsReference.CreateReferenceObjectForClass(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект справочника указанного типа
            </summary>
            <param name="classObject">Тип объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.BomSections.BomSectionsReference.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.BomSections.BomSectionsReferenceObject">
            <summary>
            Объект справочника "Разделы спецификации"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.BomSections.BomSectionsReferenceObject.Name">
            <summary>
            Возвращает или задает наименование раздела
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.BomSections.BomSectionsReferenceObject.Code">
            <summary>
            Возвращает или задает код раздела
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.BomSections.BomSectionsReferenceObject.FieldKeys">
            <summary>
            Идентификаторы параметров справочника
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.BomSections.BomSectionsReferenceObject.FieldKeys.Name">
            <summary>
            Guid параметра "Наименование раздела"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.BomSections.BomSectionsReferenceObject.FieldKeys.Code">
            <summary>
            Guid параметра "Код раздела"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.BomSections.BomSectionsType">
            <summary>
            Тип объекта справочника "Разделы спецификации"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.BomSections.BomSectionsType.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.BomSections.BomSectionsTypes">
            <summary>
            Дерево типов справочника "Разделы спецификации"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.BomSections.BomSectionsTypes.CreateClassObject(System.Guid)">
            <summary>
            Создает экземпляр типа с указанным Guid
            </summary>
            <param name="classGuid">Guid типа</param>
            <returns>Созданный тип</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.BomSections.BomSectionsTypes.BomSection">
            <summary>
            Возвращает тип "Раздел"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.BomSections.BomSectionsTypes.Keys">
            <summary>
            Идентификаторы типов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.BomSections.BomSectionsTypes.Keys.BomSection">
            <summary>
            Guid типа "Раздел"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Calendar.CalendarReferenceObject">
            <summary>
            Объект справочника "Календари"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Calendar.CalendarReferenceObject.UpdateWorkTimeElements">
            <summary>
            Обновляет список элементов календаря
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Calendar.CalendarReferenceObject.WorkingTimes">
            <summary>
            Возвращает коллекцию объектов по связи "Элементы календаря"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Calendar.CalendarReferenceObject.HasAnyWorkTimeInterval">
            <summary>
            Содержит ли календарь хотя бы один рабочий интервал (в любом элементе календаря)
            </summary>
            <returns>Возвращает True, если рабочий интервал есть, иначе вернёт False</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Calendar.CalendarReferenceObject.HolidaysGroup">
            <summary>
            Идентификаторы параметров списка объектов "Исключения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Calendar.CalendarReferenceObject.HolidaysGroup.Key">
            <summary>
            Guid группы параметров "Исключения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Calendar.CalendarReferenceObject.HolidaysGroup.Date">
            <summary>
            Guid параметра "Дата"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Calendar.CalendarReferenceObject.HolidaysGroup.Value">
            <summary>
            Guid параметра "Рабочий день"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Calendar.CalendarReferenceObject.LinkedGroups">
            <summary>
            Идентификаторы связей
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Calendar.CalendarReferenceObject.LinkedGroups.WorkingTimes">
            <summary>
            Guid связи "Элементы календаря"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Calendar.CalendarReferenceObject.LinkedGroups.CalendarLinkToWorkingTime">
            <summary>
            Guid связи "Расписание рабочего времени"
            </summary>
            <remarks>Начиная с DOCs 14</remarks>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Calendar.CalendarReference">
            <summary>
            Справочник "Календари"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Calendar.CalendarReference.#ctor">
            <summary>
            Инициализирует новый экземпляр справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Calendar.CalendarReference.CreateReferenceObjectForClass(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект справочника для указанного типа объектов
            </summary>
            <param name="classObject">Тип создаваемого объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Calendar.CalendarReference.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Calendar.CalendarType">
            <summary>
            Тип объектов справочника "Календари"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Calendar.CalendarType.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Calendar.CalendarType.WorkingTimeLinkId">
            <summary>
            Возвращает Guid связи на список "Расписание рабочего времени".
            Для совместимости с 2012 версией.
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Calendar.CalendarType.Keys.Calendar">
            <summary>
            Guid типа "Календарь"
            </summary>
            <remarks>Начиная с DOCs 14</remarks>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Calendar.CalendarTypes">
            <summary>
            Дерево типов справочника "Календари"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Calendar.CalendarTypes.CreateClassObject(System.Guid)">
            <summary>
            Создает экземпляр типа с указанным Guid
            </summary>
            <param name="classGuid">Guid типа</param>
            <returns>Созданный тип</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.CopyReferenceObjectsContext">
            <summary>
            Контекст копирования объекта справочника
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.References.CopyReferenceObjectsContext.NeedLinkedPrototypeParent">
            <summary>
            Событие, возникающее при копировании связанного прототипа для получения родительского объекта
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.References.CopyReferenceObjectsContext.CopyObject">
            <summary>
            Событие, возникающее при копировании объекта справочника
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.References.CopyReferenceObjectsContext.Process">
            <summary>
            Событие уведомляющее о процессе копирования
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.CopyReferenceObjectsContext.#ctor">
            <summary>
            Создает новый экземпляр контекста
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.CopyReferenceObjectsContext.#ctor(TFlex.DOCs.Model.References.CopyReferenceObjectsContext)">
            <summary>
            Создает новый экземпляр контекста на основании уже существующего
            </summary>
            <param name="source">Контекст, на основании которого создается новый экземпляр</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.CopyReferenceObjectsContext.#ctor(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Создает новый экземпляр контекста
            </summary>
            <param name="skip">Список идентификаторов групп и парметров, которые должны быть пропущенными при копировании</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.CopyReferenceObjectsContext.ParentObject">
            <summary>
            Возвращает или задает родительский объект создаваемого объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.CopyReferenceObjectsContext.CopyChildren">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли копировать дочерние объекты
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.CopyReferenceObjectsContext.CopyLinkedPrototypes">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли копировать связанные прототипы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.CopyReferenceObjectsContext.NomenclatureHierarchyLink">
            <summary>
            Возвращает или задает подключение в справочнике номенклатуры создаваемого объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.CopyReferenceObjectsContext.Parameters">
            <summary>
            Возвращает набор параметров копирования
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.CopyReferenceObjectsContext.SkipCopy(TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Возвращает значение, указывающее, требуется ли пропустить указанный параметр при копировании
            </summary>
            <param name="info">Описание параметра</param>
            <returns>Значение true, если требуется пропустить параметр; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.CopyReferenceObjectsContext.SkipCopy(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Возвращает значение, указывающее, требуется ли пропустить указанную группу параметров при копировании
            </summary>
            <param name="group">Группа параметров</param>
            <returns>Значение true, если требуется пропустить группу параметров; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.CopyReferenceObjectsContext.Clone">
            <summary>
            Создает копию текущего объекта
            </summary>
            <returns>Созданная копия объекта</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.CopyReferenceObjectsEventArgs">
            <summary>
            Аргументы события копирования объекта справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.CopyReferenceObjectsEventArgs.#ctor(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает новый экземпляр класса для указанного прототипа
            </summary>
            <param name="prototype">Прототип для копирования</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.CopyReferenceObjectsEventArgs.Prototype">
            <summary>
            Возвращает прототип объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.CopyReferenceObjectsEventArgs.Abort">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли прервать копирование
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.LinkedPrototypeParentEventArgs">
            <summary>
            Аргументы события копирования связанного прототипа
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LinkedPrototypeParentEventArgs.#ctor(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает экземпляр класса для указанного прототипа
            </summary>
            <param name="prototype">Прототип</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.LinkedPrototypeParentEventArgs.Parent">
            <summary>
            Возвращает или задает родительский объект для создания в нем копии прототипа
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.CopyObjectEventArgs">
            <summary>
            Аргументы события копирования объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.CopyObjectEventArgs.#ctor(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ComplexHierarchyLink,TFlex.DOCs.Model.Classes.ClassObject,System.Boolean,TFlex.DOCs.Model.References.Reference)">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="prototype">Прототип для копирования</param>
            <param name="prototypeHierarchyLink">Подключение прототипа в справочнике со сложной иерархией</param>
            <param name="classObject">Тип создаваемого объекта</param>
            <param name="linked"></param>
            <param name="destReference">Справочник создаваемого объекта</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.CopyObjectEventArgs.Action">
            <summary>
            Возвращает или задает действие, которое должно быть выполнено над объектом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.CopyObjectEventArgs.ClassObject">
            <summary>
            Возвращает или задает тип создаваемого объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.CopyObjectEventArgs.ParameterValues">
            <summary>
            Возвращает коллекцию копируемых параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.CopyObjectEventArgs.PrototypeHierarchyLink">
            <summary>
            Возвращает подключение прототипа в справочнике со сложной иерархией
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.CopyObjectEventArgs.ExistingObject">
            <summary>
            Возвращает или задает уже существующий объект справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.CopyObjectEventArgs.CopyAction">
            <summary>
            Действие копирования объекта
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.CopyObjectEventArgs.CopyAction.Copy">
            <summary>
            Копировать объект
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.CopyObjectEventArgs.CopyAction.UseExisting">
            <summary>
            Использовать существующий объект
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.CopyObjectEventArgs.CopyAction.Skip">
            <summary>
            Пропустить объект
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Documents.DocumentReferenceObject">
            <summary>
            Объект справочника "Документы"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Documents.DocumentReference">
            <summary>
            Справочник "Документы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Documents.DocumentReference.#ctor">
            <summary>
            Создает новый экземпляр справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Documents.DocumentReference.CreateReferenceObjectForClass(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект справочника для указанного типа объектов
            </summary>
            <param name="classObject">Тип создаваемого объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.DocumentReference.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Documents.DocumentType">
            <summary>
            Тип объектов справочника "Документы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.DocumentType.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.DocumentType.IsEngineeringDesignDocument">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Конструкторско-технологический документ"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.DocumentType.IsProductDocument">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Объект состава изделия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.DocumentType.IsDetail">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Деталь"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.DocumentType.IsAssembly">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Сборочная единица"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.DocumentType.IsDrawing">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Чертеж"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.DocumentType.IsAssemblyDrawing">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Сборочный чертеж"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Documents.DocumentTypes">
            <summary>
            Дерево типов справочника "Документы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Documents.DocumentTypes.CreateClassObject(System.Guid)">
            <summary>
            Создает экземпляр типа с указанным Guid
            </summary>
            <param name="classGuid">Guid типа</param>
            <returns>Созданный тип</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.DocumentTypes.EngineeringDesignDocument">
            <summary>
            Возвращает тип "Конструкторско-технологический документ"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.DocumentTypes.ProductDocument">
            <summary>
            Возвращает тип "Объект состава изделия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.DocumentTypes.Detail">
            <summary>
            Возвращает тип "Деталь"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.DocumentTypes.Assembly">
            <summary>
            Возвращает тип "Сборочная единица"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.DocumentTypes.Drawing">
            <summary>
            Возвращает тип "Чертеж"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.DocumentTypes.AssemblyDrawing">
            <summary>
            Возвращает тип "Сборочный чертеж"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Documents.DocumentTypes.Keys">
            <summary>
            Идентификаторы типов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Documents.DocumentTypes.Keys.EngineeringDesignDocument">
            <summary>
            Guid типа "Конструкторско-технологический документ"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Documents.DocumentTypes.Keys.ProductDocument">
            <summary>
            Guid типа "Объект состава изделия"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Documents.DocumentTypes.Keys.Detail">
            <summary>
            Guid типа "Деталь"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Documents.DocumentTypes.Keys.Assembly">
            <summary>
            Guid типа "Сборочная единица"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Documents.DocumentTypes.Keys.Drawing">
            <summary>
            Guid типа "Чертеж"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Documents.DocumentTypes.Keys.AssemblyDrawing">
            <summary>
            Guid типа "Сборочный чертеж"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Documents.EngineeringDocumentObject">
            <summary>
            Объект "Конструкторско-технологический документ" справочника "Документы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.EngineeringDocumentObject.Name">
            <summary>
            Возвращает или задает наименование документа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.EngineeringDocumentObject.Denotation">
            <summary>
            Возвращает или задает обозначение документа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.EngineeringDocumentObject.Code">
            <summary>
            Возвращает или задает код ФНН документа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.EngineeringDocumentObject.Letter">
            <summary>
            Возвращает или задает литеру документа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.EngineeringDocumentObject.Mass">
            <summary>
            Возвращает или задает массу документа
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Documents.EngineeringDocumentObject.AddFile(TFlex.DOCs.Model.References.Files.FileObject)">
            <summary>
            Добавляет указанный файл в список связанных файлов документа
            </summary>
            <param name="file">Объект справочника "Файлы"</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Documents.EngineeringDocumentObject.GetFiles">
            <summary>
            Возвращает список связанных файлов документа
            </summary>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Documents.EngineeringDocumentObject.SaveFileContext(System.Byte[],TFlex.DOCs.Model.References.Files.FileObject)">
            <summary>
            Сохраняет контекст связи файла и документа
            </summary>
            <param name="context">Контекст</param>
            <param name="file">Файл</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Documents.EngineeringDocumentFields">
            <summary>
            Идентификаторы параметров и связей справочника
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Documents.EngineeringDocumentFields.Name">
            <summary>
            Guid параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Documents.EngineeringDocumentFields.File">
            <summary>
            Guid связи "Файлы"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Documents.EngineeringDocumentFields.Report">
            <summary>
            Guid связи "Отчёт для генерации спецификации"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Documents.SpecificationFields">
            <summary>
            Идентификаторы параметров группы "Данные для спецификации"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Documents.SpecificationFields.Denotation">
            <summary>
            Guid параметра "Обозначение"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Documents.SpecificationFields.Code">
            <summary>
            Guid параметра "Код ФНН"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Documents.SpecificationFields.Letter">
            <summary>
            Guid параметра "Литера"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Documents.SpecificationFields.Mass">
            <summary>
            Guid параметра "Масса"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Documents.ProductDocumentObject">
            <summary>
            Объект "Объект состава изделия" справочника "Документы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.ProductDocumentObject.MaterialsLink">
            <summary>
            Возвращает связь со списком объектов "Материалы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.ProductDocumentObject.BasicMaterial">
            <summary>
            Возвращает или задает основной материал
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Documents.ProductDocumentObject.MaterialsMark">
            <summary>
            Возвращает или задает марку материала
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Documents.ProductDocumentObject.ProductDocumentFields">
            <summary>
            Идентификаторы связей объекта состава изделия
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Documents.ProductDocumentObject.ProductDocumentFields.Materials">
            <summary>
            Guid списка объектов "Материалы"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Documents.ProductDocumentObject.ProductDocumentFields.MaterialsMark">
            <summary>
            Guid связи "Марка материала (рекомендуемая)"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Documents.ProductDocumentObject.MaterialFields">
            <summary>
            Идентификаторы параметров и связей списка объектов "Материалы"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Documents.ProductDocumentObject.MaterialFields.Material">
            <summary>
            Guid связи "Материал объекта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Documents.ProductDocumentObject.MaterialFields.Basic">
            <summary>
            Guid параметра "Основной материал"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameter">
            <summary>
            Объект "Глобальный параметр" справочника "Глобальные параметры"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameter.Class">
            <summary>
            Возвращает тип параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameter.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameter.Comment">
            <summary>
            Возвращает параметр "Комментарий"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameter.Category">
            <summary>
            Возвращает параметр "Категория"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameter.Value">
            <summary>
            Возвращает параметр, содержащий значение параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameter.AdministrativeAccessRequired">
            <summary>
            Возвращает параметр "Требуется административный доступ"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameter.FieldKeys">
            <summary>
            Идентификаторы параметров
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameter.FieldKeys.Name">
            <summary>
            Guid параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameter.FieldKeys.Comment">
            <summary>
            Guid параметра "Комментарий"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameter.FieldKeys.Category">
            <summary>
            Guid параметра "Категория"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameter.FieldKeys.StringValue">
            <summary>
            Guid параметра "Строковое значение"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameter.FieldKeys.IntValue">
            <summary>
            Guid параметра "Целое значение"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameter.FieldKeys.RealValue">
            <summary>
            Guid параметра "Действительное значение"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameter.FieldKeys.BooleanValue">
            <summary>
            Guid параметра "Булево значение"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameter.FieldKeys.DateTimeValue">
            <summary>
            Guid параметра "Дата/Время"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameter.FieldKeys.AdministrativeAccessRequired">
            <summary>
            Guid параметра "Требуется административный доступ"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterReference">
            <summary>
            Справочник "Глобальные параметры"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterReference.Instance">
            <summary>
            Возвращает экземпляр справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterReference.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterReference.Item(System.String)">
            <summary>
            Возвращает глобальный параметр по его наименованию
            </summary>
            <param name="name">Наименование глобального параметра</param>
            <returns>Глобальный параметр</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterReference.Find(System.String)">
            <summary>
            Возвращает глобальный параметр по его наименованию
            </summary>
            <param name="name">Наименование глобального параметра</param>
            <returns>Глобальный параметр</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterReference.GlobalCalendar">
            <summary>
            Возвращает общий календарь предприятия
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterReference.WorkingFolderPath">
            <summary>
            Возвращает формулу для вычисления пути к рабочей папке
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterType">
            <summary>
            Тип объектов справочника "Глобальные параметры"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterType.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterType.IsString">
            <summary>
            Возвращает значение, указывающее, является ли тип типом "Строковый параметр"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterType.IsInt">
            <summary>
            Возвращает значение, указывающее, является ли тип типом "Целый параметр"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterType.IsReal">
            <summary>
            Возвращает значение, указывающее, является ли тип типом "Вещественный параметр"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterType.IsBoolean">
            <summary>
            Возвращает значение, указывающее, является ли тип типом "Булевый параметр"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterType.IsDateTime">
            <summary>
            Возвращает значение, указывающее, является ли тип типом "Параметр Дата/Время"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterTypes">
            <summary>
            Дерево типов объектов справочника "Глобальные параметры"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterTypes.String">
            <summary>
            Возвращает тип "Строковый параметр"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterTypes.Int">
            <summary>
            Возвращает тип "Целый параметр"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterTypes.Real">
            <summary>
            Возвращает тип "Вещественный параметр"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterTypes.Boolean">
            <summary>
            Возвращает тип "Булевый параметр"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterTypes.DateTime">
            <summary>
            Возвращает тип "Параметр Дата/Время"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterTypes.Keys">
            <summary>
            Идентификаторы типов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterTypes.Keys.String">
            <summary>
            Guid типа "Строковый параметр"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterTypes.Keys.Int">
            <summary>
            Guid типа "Целый параметр"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterTypes.Keys.Real">
            <summary>
            Guid типа "Вещественный параметр"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterTypes.Keys.Boolean">
            <summary>
            Guid типа "Булевый параметр"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.GlobalParameters.GlobalParameterTypes.Keys.DateTime">
            <summary>
            Guid типа "Параметр Дата/Время"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Materials.IPhysicalProperties">
            <summary>
            Физические свойства
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.IPhysicalProperties.Density">
            <summary>
            Плотность
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.IPhysicalProperties.Stress">
            <summary>
            Предел прочности на разрыв
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.IPhysicalProperties.CompressionLimit">
            <summary>
            Предел прочности на сжатие
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.IPhysicalProperties.YieldStrength">
            <summary>
            Предел текучести
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.IPhysicalProperties.SpecificHeat">
            <summary>
            Удельная теплоемкость
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.IPhysicalProperties.Elasticity">
            <summary>
            Упругость
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.IPhysicalProperties.Puasson">
            <summary>
            Коэффициент Пуансона
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.IPhysicalProperties.Expansion">
            <summary>
            Коэффициент расширения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.IPhysicalProperties.ThermalConductivity">
            <summary>
            Теплопроводность
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Materials.ObjectPhysicalProperties">
            <summary>
            Физические свойства объектов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.ObjectPhysicalProperties.Type">
            <summary>
            Тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.ObjectPhysicalProperties.Density">
            <summary>
            Плотность
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.ObjectPhysicalProperties.Stress">
            <summary>
            Предел прочности на разрыв
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.ObjectPhysicalProperties.CompressionLimit">
            <summary>
            Предел прочности на сжатие
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.ObjectPhysicalProperties.YieldStrength">
            <summary>
            Предел текучести
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.ObjectPhysicalProperties.SpecificHeat">
            <summary>
            Удельная теплоемкость
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.ObjectPhysicalProperties.Elasticity">
            <summary>
            Упругость
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.ObjectPhysicalProperties.Puasson">
            <summary>
            Коэффициент Пуансона
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.ObjectPhysicalProperties.Shear">
            <summary>
            Модуль сдвига
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.ObjectPhysicalProperties.Expansion">
            <summary>
            Коэффициент расширения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.ObjectPhysicalProperties.ThermalConductivity">
            <summary>
            Теплопроводность
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Materials.MaterialReferenceObject">
            <summary>
            Объект "Материал" справочника "Материалы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.MaterialReferenceObject.PhysicalProperties">
            <summary>
            Возвращает физические свойства материала
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Materials.MaterialReferenceObject.MatirealPhysicalProperties">
            <summary>
            Физические свойства объектов справочника "Материалы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Materials.MaterialReferenceObject.MatirealPhysicalProperties.#ctor(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает новый экземпляр класса для указанного объекта справочника
            </summary>
            <param name="source">Объект справочника</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.MaterialReferenceObject.Denotation1">
            <summary>
            Возвращает параметр "Обозначение (1-я строка)"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.MaterialReferenceObject.Denotation2">
            <summary>
            Возвращает параметр "Обозначение (2-я строка)"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.MaterialReferenceObject.Denotation3">
            <summary>
            Возвращает параметр "Обозначение (3-я строка)"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.MaterialReferenceObject.Denotation4">
            <summary>
            Возвращает параметр "Обозначение (4-я строка)"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Materials.MaterialReference">
            <summary>
            Справочник "Материалы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Materials.MaterialReference.#ctor">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Materials.MaterialReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.MaterialReference.Classes">
            <summary>
            Возврщает дерево типов справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Materials.MaterialType">
            <summary>
            Тип объектов справочника "Материалы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.MaterialType.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.MaterialType.IsMaterial">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Материал"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Materials.MaterialTypes">
            <summary>
            Дерево типов справочника "Материалы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Materials.MaterialTypes.Material">
            <summary>
            Возвращает тип "Материал"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Materials.MaterialTypes.Keys">
            <summary>
            Идентификаторы типов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Materials.MaterialTypes.Keys.Material">
            <summary>
            Guid типа "Материал"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectChangedEventArgs">
            <summary>
            Аргументы события изменения объекта справочника <see cref="E:TFlex.DOCs.Model.References.Reference.ObjectChanged"/>
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectChangedEventArgs.Object">
            <summary>
            Возвращает измененный объект справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectChangedEventArgs.Type">
            <summary>
            Возвращает тип изменения объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectChangedEventArgs.Sender">
            <summary>
            Возвращает объект, инициировавший событие
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectChangedEventArgs.ToString">
            <summary>
            Возвращает строковое представление аргумента события
            </summary>
            <returns>Строковое представление аргумента события</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectChangeType">
            <summary>
            Тип изменения объекта
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.ObjectChangeType.Parameter">
            <summary>
            Изменение параметра
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.ObjectChangeType.Link">
            <summary>
            Изменение связи
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.ObjectChangeType.Stage">
            <summary>
            Изменение стадии
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.ObjectChangeType.Signature">
            <summary>
            Изменение подписи
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.ObjectChangeType.Order">
            <summary>
            Изменение порядкового номера
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.ObjectChangeType.Desktop">
            <summary>
            Изменение объекта, связанное с рабочим столом
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectParameterChangingEventArgs">
            <summary>
            Аргументы события изменения параметра объекта справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectParameterChangingEventArgs.#ctor(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Parameters.Parameter,System.Object)">
            <summary>
            Создает новый зкземпляр класса
            </summary>
            <param name="referenceObject">Измененный объект справочника</param>
            <param name="parameter">Измененный параметр объекта</param>
            <param name="newValue">Новое значение параметра</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectParameterChangedEventArgs">
            <summary>
            Аргументы события изменения параметра объекта справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectParameterChangedEventArgs.#ctor(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Parameters.Parameter,System.Object)">
            <summary>
            Создает новый зкземпляр класса
            </summary>
            <param name="referenceObject">Измененный объект справочника</param>
            <param name="parameter">Измененный параметр объекта</param>
            <param name="oldValue">Старое значение параметра</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectParameterChangedEventArgsBase">
            <summary>
            Аргументы события изменения параметра объекта справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectParameterChangedEventArgsBase.#ctor(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Parameters.Parameter,System.Object,System.Object)">
            <summary>
            Создает новый зкземпляр класса
            </summary>
            <param name="referenceObject">Измененный объект справочника</param>
            <param name="parameter">Измененный параметр объекта</param>
            <param name="oldValue">Старое значение параметра</param>
            <param name="newValue">Новое значение параметра</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectParameterChangedEventArgsBase.Parameter">
            <summary>
            Возвращает измененный параметр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectParameterChangedEventArgsBase.NewValue">
            <summary>
            Возвращает новое значение параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectParameterChangedEventArgsBase.OldValue">
            <summary>
            Возвращает старое значение параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectParameterChangedEventArgsBase.Type">
            <summary>
            Возвращает тип изменения объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectParameterChangedEventArgsBase.Sender">
            <summary>
            Возврщает объект, инициировавший событие
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectLinkChangingEventArgs">
            <summary>
            Аргументы события изменения связи объекта справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectLinkChangingEventArgs.#ctor(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.Links.LinkInfo,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="referenceObject">Измененный объект справочника</param>
            <param name="link">Измененная связь</param>
            <param name="addedObject">Объект, подключенный в результате изменения</param>
            <param name="removedObject">Объект, отключенный в результате изменения</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectLinkChangedEventArgs">
            <summary>
            Аргументы события завершения изменения связи объекта справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectLinkChangedEventArgs.#ctor(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.Links.LinkInfo,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="referenceObject">Измененный объект справочника</param>
            <param name="link">Измененная связь</param>
            <param name="addedObject">Объект, подключенный в результате изменения</param>
            <param name="removedObject">Объект, отключенный в результате изменения</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectLinkChangedEventArgsBase">
            <summary>
            Аргументы события изменения связи объекта справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectLinkChangedEventArgsBase.#ctor(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.Links.LinkInfo,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="referenceObject">Измененный объект справочника</param>
            <param name="link">Измененная связь</param>
            <param name="addedObject">Объект, подключенный в результате изменения</param>
            <param name="removedObject">Объект, отключенный в результате изменения</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectLinkChangedEventArgsBase.Link">
            <summary>
            Возврщает или задает измененную связь
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectLinkChangedEventArgsBase.AddedObject">
            <summary>
            Возвращает объект, подключенный в результате изменения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectLinkChangedEventArgsBase.RemovedObject">
            <summary>
            Возвращает объект, отключенный в результате изменения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectLinkChangedEventArgsBase.Type">
            <summary>
            Возвращает тип изменения объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectLinkChangedEventArgsBase.Sender">
            <summary>
            Возврщает объект, инициировавший событие
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectStageChangingEventArgs.#ctor(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Stages.Stage)">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="referenceObject">Измененный объект справочника</param>
            <param name="newStage">Новая стадия объекта</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectStageChangedEventArgs">
            <summary>
            Аргументы события завершения изменения стадии объекта справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectStageChangedEventArgs.#ctor(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Stages.Stage)">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="referenceObject">Измененный объект справочника</param>
            <param name="oldStage">Предыдущая стадия объекта</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectStageChangedEventArgsBase">
            <summary>
            Аргументы события изменения стадии объекта справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectStageChangedEventArgsBase.#ctor(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Stages.Stage,TFlex.DOCs.Model.Stages.Stage)">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="referenceObject">Измененный объект справочника</param>
            <param name="newStage">Новая стадия объекта</param>
            <param name="oldStage">Предыдущая стадия объекта</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectStageChangedEventArgsBase.NewStage">
            <summary>
            Возвращает новую стадию объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectStageChangedEventArgsBase.OldStage">
            <summary>
            Возвращает старую стадию объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectStageChangedEventArgsBase.Type">
            <summary>
            Возвращает тип изменения объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectStageChangedEventArgsBase.Sender">
            <summary>
            Возвращает объект, инициировавший событие
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectSignatureChangedEventArgs">
            <summary>
            Аргументы события добавления подписи объекта справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectSignatureChangedEventArgs.#ctor(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Signatures.Signature)">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="referenceObject">Измененный объект справочника</param>
            <param name="signature">Добавленная подпись</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectSignatureChangedEventArgs.Signature">
            <summary>
            Возвращает добавленную подпись
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectSignatureChangedEventArgs.Type">
            <summary>
            Возвращает тип изменения объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectSignatureChangedEventArgs.Sender">
            <summary>
            Возвращает объект, инициировавший событие
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectOrderChangedEventArgs">
            <summary>
            Аргументы события "Изменение порядкового номера объекта"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectOrderChangedEventArgs.OldOrder">
            <summary>
            Возвращает старое значение номера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectOrderChangedEventArgs.NewOrder">
            <summary>
            Возвращает новое значение номера
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectDesktopChangedEventArgs">
            <summary>
            Аргументы события операции с рабочим столом объекта справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectDesktopChangedEventArgs.#ctor(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Desktop.DesktopOperationInfo)">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="referenceObject">Измененный объект справочника</param>
            <param name="operation">Описание операции рабочего стола</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectDesktopChangedEventArgs.Operation">
            <summary>
            Возвращает описание операции рабочего стола
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectDesktopChangedEventArgs.Type">
            <summary>
            Возвращает тип изменения объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectDesktopChangedEventArgs.Sender">
            <summary>
            Возвращает объект, инициировавший событие
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.EditSession">
            <summary>
            Сессия редактирования объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.EditSession.#ctor(TFlex.DOCs.Model.References.ReferenceObject,System.Boolean)">
            <summary>
            Создает новую сессию редактирования указанного объекта
            </summary>
            <param name="referenceObject">Объект справочника, для которого создается сессия редактирования</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.EditSession.Object">
            <summary>
            Возвращает редактируемый объект
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.EditSession.EndChanges">
            <summary>
            Завершает редактирование объекта
            </summary>
            <returns>Значение true, если редактирование успешно завершено; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.EditSession.CancelChanges">
            <summary>
            Отменяет изменения объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.EditSession.Dispose">
            <summary>
            Освобождает используемые ресурсы
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ReferenceObjectSaveSet">
            <summary>
            Набор объектов справочника для сохранения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectSaveSet.#ctor">
            <summary>
            Создает новый экземпляр набора объектов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectSaveSet.Dispose">
            <summary>
            Освобождает используемые ресурсы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObjectSaveSet.Owner">
            <summary>
            Возвращает объект справочника - владельца набора
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectSaveSet.Contains(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает значение, указывающее, содержится ли заданный объект в наборе
            </summary>
            <param name="item">Объект справочника</param>
            <returns>Значение true, если объект содержится в наборе; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectSaveSet.EndChanges">
            <summary>
            Завершает редактирование
            </summary>
            <returns>Значение true, если редактирование успешно завершено; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectSaveSet.CancelChanges">
            <summary>
            Отменяет изменения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObjectSaveSet.Changing">
            <summary>
            Возвращает значение, указывающее, находится ли набор объектов в состоянии изменения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectSaveSet.Add(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Добавляет объект в набор
            </summary>
            <param name="item">Объект справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectSaveSet.CopyTo(TFlex.DOCs.Model.References.ReferenceObject[],System.Int32)">
            <summary>
            Копирует набор объектов в указанный массив, начиная с заданного индекса массива
            </summary>
            <param name="array">Массив для копирования объектов</param>
            <param name="arrayIndex">Индекс в массиве, с которого следует начинать копирование</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObjectSaveSet.Count">
            <summary>
            Возвращает количество объектов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectSaveSet.GetEnumerator">
            <summary>
            Возвращает перечислитель объектов в наборе
            </summary>
            <returns>Перечислитель объектов</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Search.ReferenceFilterObject">
            <summary>
            Объект типа "Фильтр" справочника "Поисковые запросы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.ReferenceFilterObject.Filter">
            <summary>
            Возвращает или задает фильтр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.ReferenceFilterObject.IsPublic">
            <summary>
            Возвращает значение, указывающее, находится ли объект в общей папке
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.ReferenceFilterObject.FilterReference">
            <summary>
            Возвращает или задает справочник, к которому относится фильтр
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Search.ReferenceFilterObject.Fields.ReferenceId">
            <summary>
            Справочник фильтра
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Search.ReferenceFilterObject.Fields.FilterData">
            <summary>
            Условия поиска
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Search.ReferenceFilterObject.Fields.ShowButton">
            <summary>
            Отображать кнопку
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Search.ReferenceFilterObject.Fields.ButtonIcon">
            <summary>
            Иконка кнопки
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Search.ReferenceFilterObject.Fields.ButtonText">
            <summary>
            Текст кнопки
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Search.ReferenceFilterObject.Fields.ButtonHint">
            <summary>
            Подсказка к кнопке
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Search.SearchQueryReferenceObject">
            <summary>
            Объект справочника "Поисковые запросы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.SearchQueryReferenceObject.Class">
            <summary>
            Возвращает тип объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.SearchQueryReferenceObject.Caption">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Search.SearchQueryReferenceObject.ToStringBase">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns>Строковое представление объекта</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Search.SearchQueryType">
            <summary>
            Тип объектов справочника "Поисковые запросы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.SearchQueryType.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.SearchQueryType.IsQuery">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Запрос"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.SearchQueryType.IsFilter">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Фильтр"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.SearchQueryType.IsFolder">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Папка"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Search.SearchQueryFolderObject">
            <summary>
            Объект типа "Папка" справочника "Поисковые запросы"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Search.SearchQueryTypes">
            <summary>
            Дерево типов справочника "Поисковые запросы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Search.SearchQueryTypes.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="group">Группа параметров, для которой создается дерево типов</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.SearchQueryTypes.Instance">
            <summary>
            Возвращает экземпляр класса
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Search.SearchQueryTypes.CreateClassObject(System.Guid)">
            <summary>
            Создает экземпляр типа с указанным Guid
            </summary>
            <param name="classGuid">Guid типа</param>
            <returns>Созданный тип</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.SearchQueryTypes.Folder">
            <summary>
            Возвращает тип "Папка"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.SearchQueryTypes.Query">
            <summary>
            Возвращает тип "Запрос"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.SearchQueryTypes.Filter">
            <summary>
            Возвращает тип "Фильтр"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Search.SearchQueryObject">
            <summary>
            Объект типа "Запрос" справочника "Поисковые запросы" 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.SearchQueryObject.ResultParameters">
            <summary>
            Возвращает или задает коллекцию параметров, которые будут выводиться в результате выполнения запроса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.SearchQueryObject.Filter">
            <summary>
            Возвращает или задает фильтр запроса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.SearchQueryObject.MainReference">
            <summary>
            Возвращает или задает справочник, являющийся областью поиска
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Search.SearchQueryObject.Fields.ResultSettings">
            <summary>
            Параметры вывода
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Search.SearchQueryObject.Fields.SortSettings">
            <summary>
            Параметры сортировки
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Search.SearchQueryObject.Fields.SearchSettings">
            <summary>
            Условия поиска
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Search.SearchQueryReference">
            <summary>
            Справочник "Поисковые запросы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Search.SearchQueryReference.#ctor">
            <summary>
            Инициализирует новый экземпляр справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Search.SearchQueryReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Инициализирует новый экземпляр справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.SearchQueryReference.PrivateFolder">
            <summary>
            Возвращает папку "Личные запросы" для текущего пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.SearchQueryReference.CommonFolder">
            <summary>
            Возвращает папку "Общие запросы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.SearchQueryReference.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Search.SearchQueryReference.CreateReferenceObjectForClass(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект справочника для указанного типа объектов
            </summary>
            <param name="classObject">Тип создаваемого объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Search.SearchQueryReference.IsAvailable">
            <summary>
            Возвращает значение, указывающее, является ли справочник доступным
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Search.SearchQueryReference.FindReferenceFilters(System.Guid)">
            <summary>
            Возвращает список фильтров справочника с указанным Guid
            </summary>
            <param name="referenceId">Guid справочника</param>
            <returns>Список фильтров справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Search.SearchQueryReference.FindReferenceFilters(TFlex.DOCs.Model.References.Reference)">
            <summary>
            Возвращает список фильтров указанного справочника
            </summary>
            <param name="reference">Справочник</param>
            <returns>Список фильтров справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Search.SearchQueryReference.FindReferenceFilters(TFlex.DOCs.Model.ReferenceInfo)">
            <summary>
            Возвращает список фильтров справочника с указанным описанием
            </summary>
            <param name="reference">Описание справочника</param>
            <returns>Список фильтров справочника</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.SpecialComplexHierarchyLink`2">
            <summary>
            Обобщенный базовый класс для определения подключения специального справочника
            </summary>
            <typeparam name="TReference">Тип справочника</typeparam>
            <typeparam name="TReferenceObject">Тип объектов справочника</typeparam>
        </member>
        <member name="P:TFlex.DOCs.Model.References.SpecialComplexHierarchyLink`2.ParentObject">
            <summary>
            Возвращает родительский объект подключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.SpecialComplexHierarchyLink`2.ChildObject">
            <summary>
            Возвращает дочерний объект подключения
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.UniqueIndexCheckResult">
            <summary>
            Результат проверки уникальности
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.UniqueIndexCheckResult.Index">
            <summary>
            Возвращает условие уникальности
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.UniqueIndexCheckResult.ObjectId">
            <summary>
            Возвращает Id найденного уникального объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.UniqueIndexCheckResult.IsObjectDeleted">
            <summary>
            Возвращает значение, указывающее, является ли найденный уникальный объект удаленным
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.UniqueIndexCheckResult.GetObject">
            <summary>
            Возвращает уникальный объект справочника
            </summary>
            <returns>Объект справочника</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Units.UnitType">
            <summary>
            Тип объектов справочника "Единицы измерения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitType.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Units.UnitType.GetUnits">
            <summary>
            Возвращает список единиц измерения данного типа
            </summary>
            <returns>Список единиц измерения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Units.UnitType.GetBaseUnit">
            <summary>
            Возвращает базовую единицу измерения данного типа
            </summary>
            <returns>Базовая единица измерения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Units.UnitType.SetBaseUnit(TFlex.DOCs.Model.References.Units.Unit)">
            <summary>
            Устанавливает указанную единицу измерения в качестве базовой для данного типа
            </summary>
            <param name="unit">Единица измерения</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Units.UnitTypes">
            <summary>
            Дерево типов справочника "Единицы измерения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitTypes.Instance">
            <summary>
            Возвращает экземпляр дерева типов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitTypes.Length">
            <summary>
            Возвращает тип "Длина"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitTypes.Area">
            <summary>
            Возвращает тип "Площадь"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitTypes.Volume">
            <summary>
            Возвращает тип "Объём"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitTypes.Weight">
            <summary>
            Возвращает тип "Масса"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitTypes.Temperature">
            <summary>
            Возвращает тип "Температура"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitTypes.Angle">
            <summary>
            Возвращает тип "Угол"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitTypes.Velocity">
            <summary>
            Возвращает тип "Скорость"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitTypes.AngularVelocity">
            <summary>
            Возвращает тип "Угловая скорость"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitTypes.Density">
            <summary>
            Возвращает тип "Плотность"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitTypes.Pressure">
            <summary>
            Возвращает тип "Давление"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitTypes.Energy">
            <summary>
            Возвращает тип "Энергия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitTypes.Power">
            <summary>
            Возвращает тип "Мощность"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitTypes.Voltage">
            <summary>
            Возвращает тип "Напряжение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitTypes.Amperage">
            <summary>
            Возвращает тип "Сила тока"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitTypes.Resistance">
            <summary>
            Возвращает тип "Сопротивление"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitTypes.Electrocapacity">
            <summary>
            Возвращает тип "Электроёмкость"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitTypes.Frequency">
            <summary>
            Возвращает тип "Частота"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitTypes.Time">
            <summary>
            Возвращает тип "Время"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Units.UnitTypes.Keys">
            <summary>
            Идентификаторы типов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.UnitTypes.Keys.Length">
            <summary>
            Guid типа "Длина"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.UnitTypes.Keys.Area">
            <summary>
            Guid типа "Площадь"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.UnitTypes.Keys.Volume">
            <summary>
            Guid типа "Объём"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.UnitTypes.Keys.Weight">
            <summary>
            Guid типа "Масса"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.UnitTypes.Keys.Temperature">
            <summary>
            Guid типа "Температура"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.UnitTypes.Keys.Angle">
            <summary>
            Guid типа "Угол"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.UnitTypes.Keys.Velocity">
            <summary>
            Guid типа "Скорость"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.UnitTypes.Keys.AngularVelocity">
            <summary>
            Guid типа "Угловая скорость"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.UnitTypes.Keys.Density">
            <summary>
            Guid типа "Плотность"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.UnitTypes.Keys.Pressure">
            <summary>
            Guid типа "Давление"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.UnitTypes.Keys.Energy">
            <summary>
            Guid типа "Энергия"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.UnitTypes.Keys.Power">
            <summary>
            Guid типа "Мощность"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.UnitTypes.Keys.Voltage">
            <summary>
            Guid типа "Напряжение"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.UnitTypes.Keys.Amperage">
            <summary>
            Guid типа "Сила тока"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.UnitTypes.Keys.Resistance">
            <summary>
            Guid типа "Сопротивление"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.UnitTypes.Keys.Electrocapacity">
            <summary>
            Guid типа "ЭлектроёмкостьGuid типа "
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.UnitTypes.Keys.Frequency">
            <summary>
            Guid типа "Частота"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.UnitTypes.Keys.Time">
            <summary>
            Guid типа "Время"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Units.Unit">
            <summary>
            Объект справочника "Единицы измерения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.Unit.Class">
            <summary>
            Возвращает тип объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.Unit.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.Unit.ShortName">
            <summary>
            Возвращает параметр "Сокращённое наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.Unit.RCUMCode">
            <summary>
            Возвращает параметр "Код ОКЕИ"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.Unit.Description">
            <summary>
            Возвращает параметр "Комментарий"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.Unit.InternationalName">
            <summary>
            Возвращает параметр "Международное наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.Unit.IsBase">
            <summary>
            Возвращает значение, указывающее, является ли текущая ЕИ базовой в типе
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.Unit.Coefficient">
            <summary>
            Возвращает параметр "Коэффициент для перевода в базовую ЕИ"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.Unit.Offset">
            <summary>
            Возвращает параметр "Смещение значения для перевода в базовую ЕИ"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Units.Unit.Convert(System.Double,TFlex.DOCs.Model.References.Units.Unit)">
            <summary>
            Преобразует указанное значение в заданную единицу измерения
            </summary>
            <param name="value">Преобразуемое значение</param>
            <param name="unit">Единица измерения, в которую требуется преобразовать значение</param>
            <returns>Значение, преобразованное в указанную единицу измерения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Units.Unit.ToStringBase">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns>Строковое представление объекта</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Units.Unit.FieldKeys">
            <summary>
            Идентификаторы параметров
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.Unit.FieldKeys.Name">
            <summary>
            Guid параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.Unit.FieldKeys.ShortName">
            <summary>
            Guid параметра "Сокращенное наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.Unit.FieldKeys.RCUMCode">
            <summary>
            Guid параметра "Код ОКЕИ"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.Unit.FieldKeys.Description">
            <summary>
            Guid параметра "Комментарий"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.Unit.FieldKeys.InternationalName">
            <summary>
            Guid параметра "Международное наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.Unit.FieldKeys.IsBase">
            <summary>
            Guid параметра "Базовая ЕИ в данном типе"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.Unit.FieldKeys.Coefficient">
            <summary>
            Guid параметра "Коэффециент для перевода в базовую ЕИ"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Units.Unit.FieldKeys.Offset">
            <summary>
            Guid параметра "Смещение значения для перевода в базовую ЕИ"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Units.UnitReference">
            <summary>
            Справочник "Единицы измерения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitReference.Instance">
            <summary>
            Возвращает экземпляр справочника для работы с данными
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Units.UnitReference.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Units.UnitReference.Convert(System.Double,TFlex.DOCs.Model.References.Units.Unit,TFlex.DOCs.Model.References.Units.Unit)">
            <summary>
            Преобразует указанное значение из одной единицы измерения в другую
            </summary>
            <param name="value">Преобразуемое значение</param>
            <param name="fromUnit">Единица измерения значения</param>
            <param name="toUnit">Единица измерения, в которую значение должно быть преобразовано</param>
            <returns>Преобразованное значение</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaDesktopObject">
            <summary>
            Объект "Рабочий стол" справочника "Папки"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaDesktopObject.UserPageData">
            <summary>
            Возвращает параметр "Пользовательская страница"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaDesktopObject.DeleteWithAllObjects">
            <summary>
            Удаляет панель вместе со всеми объектами
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaType">
            <summary>
            Тип объектов справочника "Папки"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaType.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaType.IsWorkingAreaFolder">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Папка"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaType.IsWorkingAreaShortcut">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Ярлык"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaType.IsWorkingAreaDesktop">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Рабочий стол"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaTypes">
            <summary>
            Дерево типов справочника "Папки"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaTypes.GetWorkingAreaFolderClass">
            <summary>
            Возвращает тип "Папка"
            </summary>
            <returns>Тип "Папка"</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaTypes.GetWorkingAreaShortcutClass">
            <summary>
            Возвращает тип "Ярлык"
            </summary>
            <returns>Тип "Ярлык"</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaTypes.GetWorkingAreaDesktopClass">
            <summary>
            Возвращает тип "Рабочий стол"
            </summary>
            <returns>Тип "Рабочий стол"</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaFolder">
            <summary>
            Объект "Папка" справочника "Папки"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaFolder.CreateShortcutToReference(TFlex.DOCs.Model.References.Reference)">
            <summary>
            Создает ярлык на указанный справочник в текущей папке
            </summary>
            <param name="reference">Справочник</param>
            <returns>Ярлык на справочник</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaFolder.CreateShortcutToWindow(System.Int32,System.String,TFlex.DOCs.Model.IconImage)">
            <summary>
            Создает ярлык на указанное окно
            </summary>
            <param name="windowType">Тип окна</param>
            <param name="windowName">Имя окна</param>
            <param name="windowIcon">Иконка окна</param>
            <returns>Ярлык на окно</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaFolder.CreateShortcutToReferenceObject(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает ярлык на указанный объект справочника
            </summary>
            <param name="referenceObject">Объект справочника</param>
            <returns>Ярлык на объект справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaFolder.CreateShortcutToMacros(TFlex.DOCs.Model.References.Macros.Macro,System.String)">
            <summary>
            Создает ярлык на указанный макрос
            </summary>
            <param name="macros">Макрос</param>
            <param name="macrosName">Точка входа макроса</param>
            <returns>Ярлык на макрос</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaFolder.CreateShortcutToSearchQuery(TFlex.DOCs.Model.References.Search.SearchQueryObject)">
            <summary>
            Создает язык на поисковый запрос
            </summary>
            <param name="searchQuery">Запрос</param>
            <returns>Ярлык на поисковый запрос</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaFolder.CreateShortcutToWorkPage(TFlex.DOCs.Model.Configuration.WorkingPages.WorkingPage)">
            <summary>
            Создает ярлык на рабочую страницу
            </summary>
            <param name="workingPage">Рабочая страница</param>
            <returns>Ярлык на рабочую страницу</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaReference">
            <summary>
            Справочник "Папки"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaReference.Instance">
            <summary>
            Возвращает экземпляр справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaReference.PrivateFolder">
            <summary>
            Возвращает личную папку текущего пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaReference.CommonFolder">
            <summary>
            Возвращает общую папку
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaReference.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaReferenceObject">
            <summary>
            Объект справочника "Папки"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaReferenceObject.Class">
            <summary>
            Возвращает тип объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaReferenceObject.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaReferenceObject.ObjectType">
            <summary>
            Возвращает параметр "Тип"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaReferenceObject.Icon">
            <summary>
            Возвращает параметр "Иконка"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaReferenceObject.WorkingAreaIcon">
            <summary>
            Возвращает или задает иконку
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaShortcut">
            <summary>
            Объект типа "Ярлык" справочника "Папки"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaShortcut.ReferenceGuid">
            <summary>
            Возвращает параметр "GUID справочника"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaShortcut.MacrosGuid">
            <summary>
            Возвращает параметр "GUID макроса"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaShortcut.WorkPageGuid">
            <summary>
            Возвращает параметр "GUID рабочей страницы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaShortcut.MacrosName">
            <summary>
            Возвращает параметр "Точка входа макроса"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaShortcut.FilterParameter">
            <summary>
            Возвращает параметр "Фильтр"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaShortcut.LinkedReference">
            <summary>
            Возвращает описание связанного справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaShortcut.LinkedObject">
            <summary>
            Возвращает связанный объект справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaShortcut.WorkingAreaIcon">
            <summary>
            Возвращает или задает иконку
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaShortcut.Filter">
            <summary>
            Возвращает или задает фильтр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaShortcut.ToReference">
            <summary>
            Возвращает значение, указывающее, содержит ли текущий ярлык ссылку на справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaShortcut.ToReferenceObject">
            <summary>
            Возвращает значение, указывающее, содержит ли текущий ярлык ссылку на объект справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaShortcut.ToMacros">
            <summary>
            Возвращает значение, указывающее, содержит ли текущий ярлык ссылку на макрос
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaShortcut.ToWorkPage">
            <summary>
            Возвращает значение, указывающее, содержит ли текущий ярлык ссылку на рабочую страницу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaShortcut.ToSearchQuery">
            <summary>
            Возвращает значение, указывающее, содержит ли текущий ярлык ссылку на поисковый запрос
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaShortcut.ShortcutFields">
            <summary>
            Группа параметров 1:1 "Параметры объекта"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaShortcut.ShortcutLinks">
            <summary>
            Идентификаторы связей
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.WorkingAreas.WorkingAreaShortcut.ShortcutLinks.LinkedReferenceObject">
            <summary>
            Guid связи "Связанный объект"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Resources.ResourceReferenceObject">
            <summary>
            Объект справочника "Ресурсы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Resources.ResourceReferenceObject.Name">
            <summary>
            Возвращает или задает наименование
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Resources.ResourceReferenceObject.ToStringBase">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns>Строковое представление объекта</returns>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Resources.ResourceReferenceObject.Fields.Name">
            <summary>
            Guid параметр "Наименование"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Resources.LabourResourceObject">
            <summary>
            Объект типа "Трудовой ресурс" справочника "Ресурсы"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Resources.MaterialResourceObject">
            <summary>
            Объект типа "Материальный ресурс" справочника "Ресурсы"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Resources.SpendingResourceObject">
            <summary>
            Объект типа "Затраты" справочника "Ресурсы"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Resources.ResourceReference">
            <summary>
            Справочник "Ресурсы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Resources.ResourceReference.#ctor">
            <summary>
            Создает новый экземпляр справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Resources.ResourceReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает новый экземпляр справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Resources.ResourceReference.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Resources.ResourceType">
            <summary>
            Тип объектов справочника "Ресурсы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Resources.ResourceType.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Resources.ResourceType.IsBaseResource">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Ресурс"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Resources.ResourceType.IsLabourResource">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Трудовой ресурс"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Resources.ResourceType.IsMaterialResource">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Материальный ресурс"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Resources.ResourceType.IsSpending">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Затраты"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Resources.ResourceTypes">
            <summary>
            Дерево типов справочника "Ресурсы"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Resources.ResourceTypes.Keys">
            <summary>
            Идентификаторы типов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Resources.ResourceTypes.Keys.BaseResource">
            <summary>
            Guid типа "Ресурс"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Resources.ResourceTypes.Keys.LabourResource">
            <summary>
            Guid типа "Трудовой ресурс"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Resources.ResourceTypes.Keys.MaterialResource">
            <summary>
            Guid типа "Материальный ресурс"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.Resources.ResourceTypes.Keys.Spending">
            <summary>
            Guid типа "Затраты"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.IReferenceObjectCollection">
            <summary>
            Интерфейс для коллекции объектов справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ComplexHierarchyLink">
            <summary>
            Подключение в справочнике со сложной иерархией
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ComplexHierarchyLink.ParameterValues">
            <summary>
            Возвращает коллекцию параметров подключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ComplexHierarchyLink.Reference">
            <summary>
            Возвращает справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ComplexHierarchyLink.Guid">
            <summary>
            Возвращает Guid подключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ComplexHierarchyLink.ParentObject">
            <summary>
            Возвращает родительский объект подключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ComplexHierarchyLink.ChildObject">
            <summary>
            Возвращает дочерний объект подключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ComplexHierarchyLink.ParentObjectId">
            <summary>
            Возвращает Id родительского объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ComplexHierarchyLink.ChildObjectId">
            <summary>
            Возвращает Id дочернего объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ComplexHierarchyLink.SetPrimary">
            <summary>
            Устанавливает значение параметра "Первичное применение" для текущего подключения
            </summary>
            <returns>Значение true, если операция прошла успешно; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ComplexHierarchyLink.CanEdit">
            <summary>
            Возвращает параметр, указывающий, возможно ли редактирование подключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ComplexHierarchyLink.CanDelete">
            <summary>
            Возвращает параметр, указывающий, возможно ли удаление подключения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ComplexHierarchyLink.BeginChanges">
            <summary>
            Переводит подключение в состояние редактирования
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ComplexHierarchyLink.EndChanges">
            <summary>
            Фиксирует окончание изменений
            </summary>
            <returns>Значение true, если процесс изменения подключения успешно завершен, в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ComplexHierarchyLink.CancelChanges">
            <summary>
            Отменяет изменения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ComplexHierarchyLink.Changing">
            <summary>
            Возвращает значение, указывающее, находится ли подключение в состоянии редактирования
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ComplexHierarchyLink.IsCheckedOut">
            <summary>
            Возвращает праметр, указывающий, взято ли подключение на редактирование
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ComplexHierarchyLink.IsCheckedOutByCurrentUser">
            <summary>
            Возвращает праметр, указывающий, взято ли подключение на редактирование текущим пользователем
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ComplexHierarchyLink.CanCheckOut">
            <summary>
            Возвращает праметр, указывающий, можно ли взять подключение на редактирование
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ComplexHierarchyLink.CanCheckIn">
            <summary>
            Возвращает праметр, указывающий, возможно ли применение изменений для подключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ComplexHierarchyLink.CanUndoCheckOut">
            <summary>
            Возвращает праметр, указывающий, возможна ли отмена изменений для подключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ComplexHierarchyLink.LockState">
            <summary>
            Возвращает состояние блокировки подключения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ComplexHierarchyLink.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если объекты равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ComplexHierarchyLink.GetHashCode">
            <summary>
            Возвращает хэш-код подключения
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ComplexHierarchyLink.ToString">
            <summary>
            Возвращает строковое представление подключения
            </summary>
            <returns>Строковое представление</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ComplexHierarchyLink.IsPrimary">
            <summary>
            Возвращает значение параметра "Первичное применение"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.DesktopObject">
            <summary>
            Представляет базовый класс для объектов, поддерживающих механизм рабочего стола
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.DesktopObject.CanEdit">
            <summary>
            Возвращает параметр, указывающий, возможно ли редактирование объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.DesktopObject.CanDelete">
            <summary>
            Возвращает параметр, указывающий, возможно ли удаление объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.DesktopObject.IsCheckedOut">
            <summary>
            Возвращает праметр, указывающий, взят ли объект на редактирование
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.DesktopObject.IsCheckedOutByCurrentUser">
            <summary>
            Возвращает праметр, указывающий, взят ли объект на редактирование текущим пользователем
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.DesktopObject.CanCheckOut">
            <summary>
            Возвращает праметр, указывающий, можно ли взять объект на редактирование
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.DesktopObject.CanCheckIn">
            <summary>
            Возвращает праметр, указывающий, возможно ли применение изменений для объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.DesktopObject.CanUndoCheckOut">
            <summary>
            Возвращает праметр, указывающий, возможна ли отмена изменений для объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.DesktopObject.LockState">
            <summary>
            Возвращает состояние блокировки объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.DesktopObject.CheckOut(System.Boolean)">
            <summary>
            Выполняет взятие объекта на редактирование
            </summary>
            <param name="delete">Значение true, если объект берется на редактирование для удаления; в противном случае - значение false</param>
            <returns>Набор объектов DesktopObject, взятых на редактирование в результате операции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.DesktopObject.CheckOut(System.Boolean,System.Object)">
            <summary>
            Выполняет взятие объекта на редактирование
            </summary>
            <param name="delete">Значение true, если объект берется на редактирование для удаления; в противном случае - значение false</param>
            <param name="context">Контекст команды</param>
            <returns>Набор объектов DesktopObject, взятых на редактирование в результате операции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.DesktopObject.CheckIn(System.String)">
            <summary>
            Выполняет применение изменений для объекта
            </summary>
            <param name="comment">Комментарий к изменению</param>
            <returns>Набор объектов DesktopObject, к которым были применены изменения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.DesktopObject.CheckIn(System.String,System.Object)">
            <summary>
            Выполняет применение изменений для объекта
            </summary>
            <param name="comment">Комментарий к изменению</param>
            <param name="context">Контекст команды</param>
            <returns>Набор объектов DesktopObject, к которым были применены изменения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.DesktopObject.UndoCheckOut">
            <summary>
            Выполняет отмену изменений для текущего объекта
            </summary>
            <returns>Набор объектов DesktopObject, для которых были отменены изменения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.DesktopObject.UndoCheckOut(System.Object)">
            <summary>
            Выполняет отмену изменений для текущего объекта
            </summary>
            <param name="context">Контекст команды</param>
            <returns>Набор объектов DesktopObject, для которых были отменены изменения</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.DesktopObject.Reference">
            <summary>
            Возвращает справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.DesktopObject.IsAdded">
            <summary>
            Возвращает параметр, указывающий, является ли объект добавленным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.DesktopObject.IsDeleted">
            <summary>
            Возвращает параметр, указывающий, является ли объект удаленным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.DesktopObject.IsModified">
            <summary>
            Возвращает параметр, указывающий, был ли объект модифицирован
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.DesktopObject.IsChanged">
            <summary>
            Возвращает, параметр, указывающий, был ли объект изменен (модифицирован, удален или добавлен)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.DesktopObject.LockStateDescription">
            <summary>
            Возвращает описание состояния блокировки объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.DesktopObject.LockStateIcon">
            <summary>
            Возвращает иконку состояния блокировки объекта
            </summary>        
        </member>
        <member name="M:TFlex.DOCs.Model.References.DesktopObject.GetHashCode">
            <summary>
            Возвращает хэш-код объекта
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.DesktopObject.Equals(System.Object)">
            <summary>
            Определяет, эквивалентен ли указанный объект текущему
            </summary>
            <param name="obj">Объект для сравнения с текущим</param>
            <returns>Значение true, если объекты эквивалентны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.DesktopObject.op_Equality(TFlex.DOCs.Model.References.DesktopObject,TFlex.DOCs.Model.References.DesktopObject)">
            <summary>
            Определяет, эквивалентны ли два объекта
            </summary>
            <param name="obj1">Ссылка на первый объект для сравнения</param>
            <param name="obj2">Ссылка на второй объект для сравнения</param>
            <returns>Значение true, если объекты эквивалентны; в противном случе - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.DesktopObject.op_Inequality(TFlex.DOCs.Model.References.DesktopObject,TFlex.DOCs.Model.References.DesktopObject)">
            <summary>
            Определяет, различны ли два обеъкта
            </summary>
            <param name="obj1">Ссылка на первый объект для сравнения</param>
            <param name="obj2">Ссылка на Второй объект для сравнения</param>
            <returns>Значение true, если объекты различны; в противном случе - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Icons.ImageReferenceObject">
            <summary>
            Объект справочника "Иконки"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Icons.ImageReferenceObject.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Icons.ImageReferenceObject.Icon">
            <summary>
            Возвращает параметр "Иконка"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Icons.ImageReferenceObject.Image">
            <summary>
            Возвращает параметр "Изображение"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Icons.ImageReferenceObject.GetFilterExtensions">
            <summary>
            Возвращает строку фильтра расширений файлов
            </summary>
            <returns>Строка фильтра</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Icons.ImageReferenceObject.SaveToFile(System.String)">
            <summary>
            Сохраняет объект в файл
            </summary>
            <param name="fileName">Путь к файлу для сохранения</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Icons.ImageReferenceObject.ToStringBase">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns></returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Icons.ImageReferenceObject.IsIcon">
            <summary>
            Возвращает значение, указывающее, является ли объект иконкой
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Icons.ImageReferenceObject.IsImage">
            <summary>
            Возвращает значение, указывающее, является ли объект изображением
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Icons.ImageReference">
            <summary>
            Справочник "Изображения"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Icons.ImageReference.#ctor">
            <summary>
            Создает новый экземпляр справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Icons.ImageReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает новый экземпляр справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Icons.ImageReference.ImportIcon(System.String)">
            <summary>
            Импортирует иконку из указанного файла
            </summary>
            <param name="file">Путь к файлу с изображением</param>
            <returns>Созданный объект справочника</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ParameterContainer">
            <summary>
            Представляет базовый класс для объектов, содержащих набор параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ParameterContainer.ParameterValues">
            <summary>
            Возвращает коллекцию параметров объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ParameterContainer.Item(TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Получает параметр по его описанию
            </summary>
            <param name="info">Описание параметра</param>
            <returns>Параметр</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ParameterContainer.Item(System.Int32)">
            <summary>
            Получает параметр по его ID
            </summary>
            <param name="parameterId">ID параметра</param>
            <returns>Параметр</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ParameterContainer.Item(System.Guid)">
            <summary>
            Получает параметр по его GUID
            </summary>
            <param name="parameterGuid">GUID параметра</param>
            <returns>Параметр</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterContainer.ValidateRequiredParameters(TFlex.DOCs.Model.ParameterGroupManager)">
            <summary>
            Контроль на наличие данных в обязательных параметрах
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ParameterContainer.GetEnumerator">
            <summary>
            Возвращает перечислитель параметров для текущего объекта
            </summary>
            <returns>Перечислитель объектов Parameter</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ReferenceObjectCopySet">
            <summary>
            Набор объектов справочника для сохранения, полученный в результате операции копирования
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObjectCopySet.Context">
            <summary>
            Контекст копирования
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCopySet.GetNewObject(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает объект справочника, для которого указанный объект является прототипом
            </summary>
            <param name="source">Прототип объекта</param>
            <returns>Найденный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCopySet.EndChanges">
            <summary>
            Завершает изменения объектов
            </summary>
            <returns>Значение true, если изменения успешно завершены; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectNotActualException">
            <summary>
            Исключение, которое вызывается, когда текущая загруженная копия объекта является неактуальной
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectNotActualException.#ctor(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает новый экземпляр исключения
            </summary>
            <param name="notActualObject">Неактуальная копия объекта</param>
            <param name="actualObject">Актуальная копия объекта</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectNotActualException.NotActualObject">
            <summary>
            Возвращает неактуальную копию объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectNotActualException.ActualObject">
            <summary>
            Возвращает актуальную копию объекта
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.RequiredParametersException">
            <summary>
            Исключение, возникающее, если у объекта не заданы обязательные для заполнения параметры
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.RequiredParametersException.#ctor(System.Collections.Generic.List{TFlex.DOCs.Model.Structure.ParameterInfo})">
            <summary>
            Создает новый экземпляр исключения
            </summary>
            <param name="parameters">Список незаданных параметров</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.RequiredParametersException.Parameters">
            <summary>
            Возвращает коллекцию незаданных параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.RequiredParametersException.ErrorDetails">
            <summary>
            Возвращает подробности ошибки
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectLockErrorException">
            <summary>
            Исключение, возникающее, если не удалось заблокировать объект
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ObjectLockErrorException.#ctor">
            <summary>
            Создает новый экземпляр исключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectLockErrorException.ErrorDetails">
            <summary>
            Возвращает подробности ошибки
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ObjectNotUniqueException">
            <summary>
            Исключение, возникающее, если сохраняемый объект не удовлетворяет условиям уникальности 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectNotUniqueException.CheckObject">
            <summary>
            Возвращает объект, не прошедший проверку уникальности
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectNotUniqueException.CheckResult">
            <summary>
            Возвращает результат проверки уникальности
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ObjectNotUniqueException.ErrorDetails">
            <summary>
            Возвращает подробности ошибки
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.LoadSettings">
            <summary>
            Параметры загрузки объектов справочников
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает новый экземпляр класса для указанной группы параметров
            </summary>
            <param name="masterGroup">Группа параметров</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.#ctor(TFlex.DOCs.Model.References.LoadSettings)">
            <summary>
            Создает новый экземпляр класса на основании уже существующего экземпляра
            </summary>
            <param name="source">Параметры загрузки объектов справочника</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.LoadSettings.MasterGroup">
            <summary>
            Группа параметров - владелец настроек
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.LoadSettings.LoadDeleted">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли загружать удаленные объекты
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.Add(TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Добавляет указанный параметр для загрузки
            </summary>
            <param name="parameter">Параметр для загрузки</param>
            <returns>Значение true, если параметр успешно добавлен; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.Add(System.Int32)">
            <summary>
            Добавляет параметр с указанным Id для загрузки
            </summary>
            <param name="parameter">Id параметра для загрузки</param>
            <returns>Значение true, если параметр успешно добавлен; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.Add(System.Guid)">
            <summary>
            Добавляет параметр с указанным Guid для загрузки
            </summary>
            <param name="parameter">Guid параметра для загрузки</param>
            <returns>Значение true, если параметр успешно добавлен; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.AddGroup(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Добавляет параметры из указанной группы параметров (1:1) для загрузки
            </summary>
            <param name="group">Группа параметров</param>
            <returns>Значение true, если параметр успешно добавлен; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.AddParameters(System.Guid[])">
            <summary>
            Добавляет параметры с указанными Guid для загрузки
            </summary>
            <param name="guids">Guid'ы параметров</param>
            <returns>Значение true, если параметры успешно добавлены; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.AddMasterGroupParameters">
            <summary>
            Добавляет параметры основной группы параметров для загрузки
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.AddAllParameters">
            <summary>
            Добавляет все параметры, входящие в группы 1:1 для загрузки
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.Contains(TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Возвращает значение, указывающее, добавлен ли указанный параметр для загрузки
            </summary>
            <param name="item">Описание параметра</param>
            <returns>Значение true, если указанный параметр добавлен для загрузки; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.Remove(TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Удаляет указанный параметр из коллекции загружаемых параметров
            </summary>
            <param name="parameter">Описание параметра</param>
            <returns>Значение true, если параметр успешно удален из коллекции; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.Remove(System.Int32)">
            <summary>
            Удаляет параметр с указанным Id из коллекции загружаемых параметров
            </summary>
            <param name="parameterId">Id параметра</param>
            <returns>Значение true, если параметр успешно удален из коллекции; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.Remove(System.Guid)">
            <summary>
            Удаляет параметр с указанным Guid из коллекции загружаемых параметров
            </summary>
            <param name="parameterGuid">Guid параметра</param>
            <returns>Значение true, если параметр успешно удален из коллекции; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.AddRelation(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Добавляет настройки загрузки объектов для отношения, описываемого указанной группой параметров
            </summary>
            <param name="relation">Группа параметров, описывающая отношение</param>
            <returns>Настройки загрузки объектов для отношения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.GetRelation(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Возвращает настройки загрузки объектов для отношения, описываемого указанной группой параметров
            </summary>
            <param name="relation">Группа параметров, описывающая отношение</param>
            <returns>Настройки загрузки объектов для отношения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.AddRelation(System.Int32)">
            <summary>
            Добавляет настройки загрузки объектов для отношения с указанным Id
            </summary>
            <param name="relationId">Id отношения</param>
            <returns>Настройки загрузки объектов для отношения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.GetRelation(System.Int32)">
            <summary>
            Возвращает настройки загрузки объектов для отношения с указанным Id
            </summary>
            <param name="relationId">Id отношения</param>
            <returns>Настройки загрузки объектов для отношения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.AddRelation(System.Guid)">
            <summary>
            Добавляет настройки загрузки объектов для отношения с указанным Guid
            </summary>
            <param name="relationGuid">Guid отношения</param>
            <returns>Настройки загрузки объектов для отношения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.CheckLink(System.Guid)">
            <summary>
            Добавляет загрузку пустых отношений с указанным Guid
            </summary>
            <param name="relationGuid">Guid отношения</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.LoadSettings.Relations">
            <summary>
            Возвращает коллекцию всех настроек загрузки объектов отношений
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.RemoveRelation(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Удаляет настройки загрузки объектов для отношения, описываемого указанной группой параметров
            </summary>
            <param name="relation">Группа параметров, описывающая отношение</param>
            <returns>Значение true, если настройки успешно удалены; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.RemoveRelation(TFlex.DOCs.Model.References.RelationLoadSettings)">
            <summary>
            Удаляет указанные настройки загрузки объектов для отношения
            </summary>
            <param name="relation">Настройки загрузки объектов для отношения</param>
            <returns>Значение true, если настройки успешно удалены; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.Clear">
            <summary>
            Очищает все настройки загрузки
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.AddSortField(TFlex.DOCs.Model.Structure.ParameterInfo,TFlex.DOCs.Model.Search.SortOrder)">
            <summary>
            Добавляет поле для сортировки
            </summary>
            <param name="parameter">Параметр, по которому должна производиться сортировка</param>
            <param name="order">Порядок сортировки</param>
            <returns>Поле для сортировки</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.AddSortField(TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Model.Structure.ParameterInfo,TFlex.DOCs.Model.Search.SortOrder)">
            <summary>
            Добавляет поле для сортировки
            </summary>
            <param name="linkGroup">Группа параметров, описывающая отношение</param>
            <param name="parameter">Параметр, по которому должна производиться сортировка</param>
            <param name="order">Порядок сортировки</param>
            <returns>Поле для сортировки</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.RemoveSortField(TFlex.DOCs.Model.References.LoadSettings.SortField)">
            <summary>
            Удяляет поле для сортировки
            </summary>
            <param name="field">Поле для сортировки</param>
            <returns>Значение true, если поле для сортировки успешно удалено; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.LoadSettings.SortFields">
            <summary>
            Возвращает коллекцию всех полей для сортировки
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.AddSortFields(TFlex.DOCs.Model.References.LoadSettings.SortField[])">
            <summary>
            Добавляет несколько полей для сортировки
            </summary>
            <param name="sortFields">Поля для сортировки</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.LoadSettings.ClearSortFields">
            <summary>
            Удаляет все поля для сортировки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.LoadSettings.SelectionContext">
            <summary>
            Контекст выбора
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.LoadSettings.SortField">
            <summary>
            Поле для сортировки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.LoadSettings.SortField.LinkGroup">
            <summary>
            Возвращает группу параметров, описывающую отношение, которое содержит параметр для сортировки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.LoadSettings.SortField.Parameter">
            <summary>
            Возвращает параметр для сортировки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.LoadSettings.SortField.SortOrder">
            <summary>
            Возвращает порядок сортировки
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.RelationLoadSettings">
            <summary>
            Параметры загрузки объектов отношения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.RelationLoadSettings.Owner">
            <summary>
            Возвращает владельца текущих настроек
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.RelationLoadSettings.Relation">
            <summary>
            Возвращает группу параметров, описывающую отношение
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.RelationLoadSettings.Load">
            <summary>
            Возвращает или задает значение, указывающее, требутеся ли загружать объекты по данной связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.RelationLoadSettings.LoadHierarchy">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли загружать всю иерархию объектов по связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.RelationLoadSettings.Filter">
            <summary>
            Фильтр
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.SpecialReferenceObject`1">
            <summary>
            Обобщенный базовый класс для определения объекта специального справочника
            </summary>
            <typeparam name="TReference">Тип справочника</typeparam>
        </member>
        <member name="P:TFlex.DOCs.Model.References.SpecialReferenceObject`1.Reference">
            <summary>
            Возвращает справочник
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.SpecialReference`1">
            <summary>
            Обобщенный базовый класс для определения специального справочника
            </summary>
            <typeparam name="TObject">Тип объектов специального справочника</typeparam>
        </member>
        <member name="M:TFlex.DOCs.Model.References.SpecialReference`1.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создание экземпляра класса на основании группы параметров, описывающей справочник
            </summary>
            <param name="masterGroup">Группа параметров, описывающая справочиник</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.SpecialReference`1.#ctor(System.Guid)">
            <summary>
            Создание экземпляра класса на основании Guid'а справочника
            </summary>
            <param name="referenceId">Guid справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.SpecialReference`1.#ctor(TFlex.DOCs.Model.Structure.SpecialReference)">
            <summary>
            Создание экземпляра класса на основании типа специального справочника
            </summary>
            <param name="reference">Тип специального справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.SpecialReference`1.#ctor(TFlex.DOCs.Model.ServerConnection,System.Guid)">
            <summary>
            Создание экземпляра класса на основании Guid'а справочника
            </summary>
            <param name="referenceId">Guid справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.SpecialReference`1.#ctor(TFlex.DOCs.Model.ServerConnection,TFlex.DOCs.Model.Structure.SpecialReference)">
            <summary>
            Создание экземпляра класса на основании типа специального справочника
            </summary>
            <param name="reference">Тип специального справочника</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.SpecialReference`1.Objects">
            <summary>
            Возвращает коллекцию объектов справочника на первом уровне иерархии
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.SpecialReference`1.CreateInstanceOfReferenceObject(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект справочника указанного типа
            </summary>
            <param name="classObject">Тип объектов справочника</param>
            <returns>Созданный объект справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.SpecialReference`1.CreateReferenceObjectForClass(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект справочника указанного типа
            </summary>
            <param name="classObject">Тип объектов справочника</param>
            <returns>Созданный объект справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.SpecialReference`1.CreateComplexHierarchyLink">
            <summary>
            Создает подключение в справочнике со сложной иерархией
            </summary>
            <returns>Созданное подключение</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.FileServers.FileServerObject">
            <summary>
            Объект справочника "Разделы сервера файлов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.FileServers.FileServerObject.Name">
            <summary>
            Возвращает наименование раздела
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.FileServers.FileServerObject.ServerAddress">
            <summary>
            Возвращает адрес файлового сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.FileServers.FileServerObject.Storage">
            <summary>
            Возвращает наименование раздела на сервере
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.FileServers.FileServerObject.IsDefault">
            <summary>
            Возвращает значение, указывающее, является ли текущий раздел основным
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.FileServers.FileServerObject.Fields">
            <summary>
            Идентификаторы параметров
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.FileServers.FileServerObject.Fields.Name">
            <summary>
            Guid параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.FileServers.FileServerObject.Fields.ServerAddress">
            <summary>
            Guid параметра "Адрес файлового сервера"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.FileServers.FileServerObject.Fields.Storage">
            <summary>
            Guid параметра "Раздел"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.FileServers.FileServerObject.Fields.Default">
            <summary>
            Guid параметра "Основной раздел"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.FileServers.FileServerReference">
            <summary>
            Справочник "Разделы сервера файлов"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.FileServers.FileServerReference.#ctor">
            <summary>
            Создает новый экземпляр справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.FileServers.FileServerReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает новый экземпляр справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.FileServers.FileServerReference.#ctor(TFlex.DOCs.Model.References.Files.FileReference)">
            <summary>
            Создает новый экземпляр справочника для указанного файлового справочника
            </summary>
            <param name="files">Справочник "Файлы"</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.FileServers.FileServerReference.GetDefaultFileServer">
            <summary>
            Возвращает основной раздел текущего сервера файлов
            </summary>
            <returns>Раздел сервера файлов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.FileServers.FileServerReference.GetStorages(System.String)">
            <summary>
            Возвращает список доступных разделов для указанного сервера файлов
            </summary>
            <param name="serverAddress">Адрес сервера</param>
            <returns>Список наименований разделов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.FileServers.FileServerReference.SetDefaultFileServer(TFlex.DOCs.Model.References.FileServers.FileServerObject)">
            <summary>
            Задает основной раздел сервера файлов
            </summary>
            <param name="fileServer">Раздел сервера файлов</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.FileServers.FileServerReference.Factory.#ctor">
            <summary>
            Фабричный метод
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ReferenceObject">
            <summary>
            Объект справочника 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.BaseObject">
            <summary>
            Возвращает базовый объект справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.Reference">
            <summary>
            Возвращает справочник
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.GetHashCode">
            <summary>
            Возвращает хэш-код объекта
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если объекты равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.op_Equality(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Определяет, равны ли два объекта
            </summary>
            <param name="obj1">Первый объект для сравнения</param>
            <param name="obj2">Второй объект для сравнения</param>
            <returns>Значение true, если объекты равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.op_Inequality(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Определяет, различаются ли два объекта
            </summary>
            <param name="obj1">Первый объект для сравнения</param>
            <param name="obj2">Второй объект для сравнения</param>
            <returns>Значение true, если объекты различны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns>Строковое представление</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.ParameterValues">
            <summary>
            Возвращает коллекцию параметров объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.CreateParameters">
            <summary>
            Создает коллекцию параметров объекта
            </summary>
            <returns>Коллекция параметров объекта</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.SystemFields">
            <summary>
            Возвращает коллекцию системных параметров объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.HasChildren">
            <summary>
            Возвращает значение, указывающее, есть ли у объекта дочерние объекты
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.HasSubfolders">
            <summary>
            Возвращает значение, указывающее, есть ли у объекта вложенные папки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.Parent">
            <summary>
            Возвращает родительский объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.NewParent">
            <summary>
            Возвращает новый родительский объект
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.SetParent(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Устанавливает родительский объект
            </summary>
            <param name="parentObject">Родительский объект</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.CanSetParent(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Определяет, можно ли для данного объекта установить определенный объект справочника в качестве родительского
            </summary>
            <param name="parentObject">Объект справочника</param>
            <returns>Значение true, если объект справочника можно установить в качестве родительского для текущего объекта; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.Parents">
            <summary>
            Возвращает коллекцию родительских объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.Children">
            <summary>
            Возвращает коллекцию дочерних объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.Class">
            <summary>
            Возвращает тип объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.IsPrivateFolder">
            <summary>
            Возвращает значение, указывающее, является ли объект личной папкой пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.IsInPrivateFolder">
            <summary>
            Возвращает значение, указывающее, находится ли объект в личной папке пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.CanEdit">
            <summary>
            Возвращает значение, указывающее, возможно ли редактирование объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.CanDelete">
            <summary>
            Возвращает значение, указывающее, возможно ли удаление объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.IsAdded">
            <summary>
            Возвращает параметр, указывающий, является ли объект добавленным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.IsDeleted">
            <summary>
            Возвращает параметр, указывающий, является ли объект удаленным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.IsModified">
            <summary>
            Возвращает параметр, указывающий, был ли объект модифицирован
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.IsChanged">
            <summary>
            Возвращает параметр, указывающий, был ли объект изменен (модифицирован, удален или добавлен)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.IsPrototype">
            <summary>
            Возвращает параметр, указывающий, является ли объект прототипом
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.BeginChanges(System.Boolean)">
            <summary>
            Переводит объект в состояние редактирования
            </summary>
            <param name="reload"></param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.TryBeginChanges(TFlex.DOCs.Model.References.ReferenceObject@)">
            <summary>
            Переводит объект в состояние редактирования
            </summary>
            <param name="actualObject">Объект ReferenceObject для записи оригинального объекта</param>
            <returns>Значение true, если объект переведен в состояние редактирования; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.BeginStandAloneChanges">
            <summary>
            Создает копию объекта и начинает ее редактирование
            </summary>
            <returns>Созданная копия объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.BeginChanges(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Переводит объект в состояние редактирования для изменения его типа
            </summary>
            <param name="newClass">Новый тип объекта</param>
            <returns>Редактируемый объект справочника с измененным типом</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.CanChangeClass(TFlex.DOCs.Model.Classes.ClassObject,System.Boolean)">
            <summary>
            Проверяет возможность изменения типа объекта
            </summary>
            <param name="newClass">Новый тип объекта</param>
            <param name="throwOnError">Значение true, если требуется генерация исключения в случае неудачи; в противном случае - значение false</param>
            <returns>Значение true, если можно изменить тип объекта на новый; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.ApplyChanges">
            <summary>
            Выполняет применение изменений, оставляя объект в состоянии редактирования
            </summary>
            <returns>Значение true, если изменения успешно применены; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.EndChanges">
            <summary>
            Фиксирует окончание изменений
            </summary>
            <returns>Значение true, если процесс изменения объекта успешно завершен, в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.OnApplyingChanges(System.Boolean)">
            <summary>
            Вызывается перед завершением изменений
            </summary>
            <returns></returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.SaveSet">
            <summary>
            Возвращает набор объектов справочников для сохранения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.CreateSaveSet">
            <summary>
            Создает набор объектов справочников для сохранения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.CancelChanges">
            <summary>
            Отменяет изменения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.CanUnlock">
            <summary>
            Возвращает значение, указывающее, можно ли разблокировать объект
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.Unlock">
            <summary>
            Разблокирует объект
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.Delete">
            <summary>
            Удаляет объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.Changing">
            <summary>
            Возвращает значение, указывающее, находится ли объект в состоянии редактирования
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.StandAloneChanging">
            <summary>
            Возвращает значение, указывающее, редактируется ли копия объекта в настоящее время
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.ChangingObject">
            <summary>
            Возвращает оригинал редактируемого объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.StandAloneCopies">
            <summary>
            Возвращает список копий объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.IsCopy">
            <summary>
            Возвращает значение, указывающее, является ли объект копией
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.EditableObject">
            <summary>
            Возвращает редактируемую копию объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.Prototype">
            <summary>
            Возвращает прототип создаваемого объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.ChangesCounter">
            <summary>
            Возвращает количество изменений объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.IsNotActual">
            <summary>
            Возвращает значение, указывающее, является ли объект неактуальным
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.OnSaving">
            <summary>
            Вызывается перед сохранением объекта
            </summary>
            <returns>Значение true, если сохранение может быть продолжено; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.OnSave(System.Boolean)">
            <summary>
            Вызывается при сохранении объекта
            </summary>
            <param name="isAdded">Значение true, если объект является добавленным; в противном случае - значение false</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.OnDeleting">
            <summary>
            Вызывается перед удалением объекта
            </summary>
            <returns>Значение true, если удаление может быть продолжено; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.OnDelete">
            <summary>
            Вызывается при удалении объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.OnBeginingChanges">
            <summary>
            Вызывается перед началом редактирования объекта
            </summary>
            <returns>Значение true, если объект может быть переведен в состояние редактирования; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.OnBeginChanges(System.Boolean)">
            <summary>
            Вызывается при начале редактирования объекта
            </summary>
            <param name="isAdded">Значение true, если объект является добавленным; в противном случае - значение false</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.OnCancelChanges">
            <summary>
            Вызывается при отмене изменений
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.OnCancelChanges(System.Boolean,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Вызывается при отмене изменений
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.MasterObject">
            <summary>
            Возвращает владельца объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.IsMaster">
            <summary>
            Возвращает значение, указывающее, является ли объект объектом справочника 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.Links">
            <summary>
            Возвращает связи объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.IsCheckedOut">
            <summary>
            Возвращает значение, указывающее, взят ли объект на редактирование
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.IsCheckedOutByCurrentUser">
            <summary>
            Возвращает значение, указывающее, взят ли объект на редактирование текущим пользователем
            </summary>       
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.CanCheckOut">
            <summary>
            Возвращает значение, указывающее, можно ли взять объект на редактирование
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.CanCheckIn">
            <summary>
            Возвращает значение, указывающее, можно ли применить изменения для объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.CanUndoCheckOut">
            <summary>
            Возвращает значение, указывающее, можно ли отменить изменения для объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.IsInRecycleBin">
            <summary>
            Возвращает значение, указывающее, находится ли объект в корзине
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.LockState">
            <summary>
            Возвращает состояние блокировки объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.CreateCopy">
            <summary>
            Создает копию объекта
            </summary>
            <returns>Новый объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.CreateCopy(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает копию объекта указанного типа
            </summary>
            <param name="newClass">Тип создаваемого объекта</param>
            <returns>Новый объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.CreateCopy(TFlex.DOCs.Model.Classes.ClassObject,TFlex.DOCs.Model.References.ReferenceObject,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)">
            <summary>
            Создает копию объекта заданного типа как дочерний объект указанного родительского объекта 
            </summary>
            <param name="newClass">Тип создаваемого объекта</param>
            <param name="parentObject">Родительский объект создаваемого объекта</param>
            <param name="skip">Список идентификаторов групп и парметров, которые должны быть пропущенными при копировании</param>
            <param name="loadLinks">Нужно ли прогружать связанные объекты</param>
            <returns>Новый объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.CreateCopy(TFlex.DOCs.Model.References.Links.OneToManyTable)">
            <summary>
            Создает копию объекта в списке объектов
            </summary>
            <param name="destLink">Список объектов</param>
            <returns>Новый объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.CreateCopy(TFlex.DOCs.Model.Classes.ClassObject,TFlex.DOCs.Model.References.Links.OneToManyTable,System.Collections.Generic.IEnumerable{System.Guid},TFlex.DOCs.Model.References.CopyReferenceObjectsContext)">
            <summary>
            Создает копию объекта заданного типа в списке объектов
            </summary>
            <param name="newClass">Тип создаваемого объекта</param>
            <param name="destLink">Список объектов</param>
            <param name="skip">Список идентификаторов групп и парметров, которые должны быть пропущенными при копировании</param>
            <returns>Новый объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.Refresh(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Обновляет параметры и связи объекта на основе другого экземпляра этого объекта
            </summary>
            <param name="source">Другой экземпляр объекта</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.GetValue(System.String)">
            <summary>
            Получает параметр объекта по его наименованию
            </summary>
            <param name="parameter">Наименование параметра</param>
            <returns>Параметр</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.GetValue(System.String,System.Boolean)">
            <summary>
            Получает параметр объекта по его наименованию
            </summary>
            <param name="parameter">Наименование параметра</param>
            <param name="returnNullIfNotFound">Значение true, если при отсутствии параметра вместо генерации исключения требуется возвращать null; в противном случае - значение false</param>
            <returns>Параметр</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.TryGetValue(TFlex.DOCs.Model.Search.Path.ReferencePath,TFlex.DOCs.Model.Parameters.Parameter@)">
            <summary>
            Получает параметр объекта по его пути в справочнике
            </summary>
            <param name="path">Путь к параметру</param>
            <param name="parameter">Ссылка на объект Parameter для записи найденного параметра</param>
            <returns>Значение true в случае, если параметр найден; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.GetObject(System.String)">
            <summary>
            Получает объект по связи
            </summary>
            <param name="linkName">Наименование связи</param>
            <returns>Связанный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.GetObjects(System.String,System.Boolean)">
            <summary>
            Получает список объектов по связи
            </summary>
            <param name="linkName">Наименование связи</param>
            <param name="throwOnError">Значение true, если нужно генерировать исключение при неудаче; в противном случае - значение false</param>
            <returns>Список связанных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.GetObjectValue(System.String,System.Boolean)">
            <summary>
            Получает значение параметра/связи по его пути
            </summary>
            <param name="path">Путь к параметру/связи</param>
            <param name="throwOnError">Значение true, если нужно генерировать исключение при неудаче; в противном случае - значение false</param>
            <returns>Значение параметра/связи</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.GetObjectValue(TFlex.DOCs.Model.Search.Path.ReferencePath,System.Boolean)">
            <summary>
            Получает значение параметра/связи по его пути
            </summary>
            <param name="path">Путь к параметру/связи</param>
            <param name="throwOnError">Значение true, если нужно генерировать исключение при неудаче; в противном случае - значение false</param>
            <returns>Значение параметра/связи</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.GetObjectValue(System.String,TFlex.DOCs.Model.References.ComplexHierarchyLink,System.Boolean)">
            <summary>
            Получает значение параметра/связи объекта (или значение параметра подключения)
            </summary>
            <param name="path">Путь к параметру</param>
            <param name="hierarchyLink">Подключение</param>
            <param name="throwOnError">Значение true, если нужно генерировать исключение при неудаче; в противном случае - значение false</param>
            <returns>Значение параметра в виде объекта ObjectValue</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.GetObjectValue(TFlex.DOCs.Model.Search.Path.ReferencePath,TFlex.DOCs.Model.References.ComplexHierarchyLink,System.Boolean)">
            <summary>
            Получает значение параметра/связи объекта (или значение параметра подключения)
            </summary>
            <param name="path">Путь к параметру</param>
            <param name="hierarchyLink">Подключение</param>
            <param name="throwOnError">Значение true, если нужно генерировать исключение при неудаче; в противном случае - значение false</param>
            <returns>Значение параметра в виде объекта ObjectValue</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.GetPath">
            <summary>
            Возвращает путь к объекту от корневого объекта справочника
            </summary>
            <returns>Стек объектов справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.GetPath(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает путь к объекту от заданного корневого объекта
            </summary>
            <param name="rootObject">Корневой объект</param>
            <returns>Стек объектов справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.Reload">
            <summary>
            Перезагружает параметры и связи объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.TryReload">
            <summary>
            Перезагружает параметры и связи объекта
            </summary>
            <returns>Значение true, если перезагрузка прошла успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.Reload(TFlex.DOCs.Model.References.ReferenceObject@)">
            <summary>
            Перезагружает параметры и связи объекта
            </summary>
            <param name="actualObject">Ссылка на оригинальный объект</param>
            <returns>Значение true, если перезагрузка прошла успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.IsAvailable">
            <summary>
            Возвращает значение, указывающее, является ли объект доступным
            </summary>
            <returns>Значение true, если объект доступен и не взят на удаление; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.OnLoaded">
            <summary>
            Вызывается при загрузке объекта
            </summary>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.GetParentHierarchyLinks">
            <summary>
            Возвращает список подключений объекта к родительским объектам
            </summary>
            <returns>Список подключений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.GetChildHierarchyLinks">
            <summary>
            Возвращает список подключений объекта к дочерним объектам
            </summary>
            <returns>Список подключений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.GetParentLink(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает подключение объекта к заданному родительскому объекту
            </summary>
            <param name="parentObject">Объект, к которому требуется найти родительское подключение</param>
            <returns>Подключение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.GetChildLink(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает подключение текущего объекта к заданному дочернему объекту
            </summary>
            <param name="childObject">Объект, к которому требуется найти дочернее подключение</param>
            <returns>Подключение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.CreateParentLink(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает подключение к заданному родительскому объекту
            </summary>
            <param name="parentObject">Объект, к которому требуется создать родительское подключение</param>
            <returns>Созданное подключение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.CreateChildLink(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает подключение к заданному дочернему объекту
            </summary>
            <param name="childObject">Объект, к которому требуется создать дочернее подключение</param>
            <returns>Созданное подключение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.DeleteLink(TFlex.DOCs.Model.References.ComplexHierarchyLink)">
            <summary>
            Удаляет заданное подключение
            </summary>
            <param name="link">Подключение, предназначенное для удаления</param>
            <returns>Значение true, если подключение удалено; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObject.Signatures">
            <summary>
            Возвращает коллекцию подписей объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.SetSignature(TFlex.DOCs.Model.References.Users.User,TFlex.DOCs.Model.Signatures.SignatureType,System.String)">
            <summary>
            Подписывает объект
            </summary>
            <param name="user">Пользователь</param>
            <param name="signatureType">Тип подписи</param>
            <param name="resolution">Резолюция (комментарий к подписи)</param>
            <returns>Значение true, если объект успешно подписан; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.OnParameterChanged(TFlex.DOCs.Model.Parameters.Parameter)">
            <summary>
            Вызывается при изменении параметра объекта
            </summary>
            <param name="p">Измененный параметр</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.OnParameterChanged(TFlex.DOCs.Model.Parameters.Parameter,System.Object)">
            <summary>
            Вызывается при изменении параметра объекта
            </summary>
            <param name="p">Измененный параметр</param>
            <param name="oldValue">Старое значение параметра</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.CanChangeLink(TFlex.DOCs.Model.References.Links.LinkInfo,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Проверяет, возможна ли смена связанного объекта
            </summary>
            <param name="link">Связь</param>
            <param name="addObject">Новый связанный объект</param>
            <param name="removeObject">Прежний связанный объект</param>
            <returns>Значение true, если смена связанного объекта возможна; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.OnLinkChanged(TFlex.DOCs.Model.References.Links.LinkInfo,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Вызывается при смене связанного объекта
            </summary>
            <param name="link">Связь</param>
            <param name="addedObject">Новый связанный объект</param>
            <param name="removedObject">Прежний связанный объект</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.IsUnique(TFlex.DOCs.Model.References.ReferenceObject@)">
            <summary>
            Возвращает, является ли объект уникальным
            </summary>
            <param name="existingObject">Объект справочника, в который записывается копия объекта при ее наличии</param>
            <returns>Значение true, если объект уникален; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.GetObjects(System.Guid)">
            <summary>
            Возвращает объекты отношения 1:N (список объектов, связь 1:N, связь N:N, связь на любой справочник)
            </summary>
            <param name="relation">Guid группы параметров, описывающей отношение</param>
            <returns>Список связанных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.GetObjects(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Возвращает объекты отношения 1:N (список объектов, связь 1:N, связь N:N, связь на любой справочник)
            </summary>
            <param name="relation">Группа параметров, описывающая отношение</param>
            <returns>Список связанных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.TryGetObjects(System.Guid,System.Collections.Generic.List{TFlex.DOCs.Model.References.ReferenceObject}@)">
            <summary>
            Возвращает объекты отношения 1:N (список объектов, связь 1:N, связь N:N, связь на любой справочник)
            </summary>
            <param name="relation">Guid группы параметров, описывающей отношение</param>
            <param name="objects">Список объектов, в который заносятся связанные объекты при их наличии</param>
            <returns>Значение true, если удалось получить объекты по связи; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.GetObject(System.Guid)">
            <summary>
            Возвращает объект по связи 1:1 или N:1
            </summary>
            <param name="linkGroup">Guid группы параметров, описывающей связь</param>
            <returns>Связанный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.GetObject(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Возвращает объект по связи 1:1 и N:1
            </summary>
            <param name="linkGroup">Группа параметров, описывающая связь</param>
            <returns>Связанный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.TryGetObject(System.Guid,TFlex.DOCs.Model.References.ReferenceObject@)">
            <summary>
            Возвращает объект по связи 1:1 и N:1
            </summary>
            <param name="linkGroup">Guid группы параметров, описывающей связь</param>
            <param name="linkedObject">Ссылка на связанный объект, если он существует</param>
            <returns>Значение true, если удалось получить объект по связи; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.CreateListObject(System.Guid,System.Guid)">
            <summary>
            Создаёт объект в списке объектов
            </summary>
            <param name="objectList">Guid списка объектов</param>
            <param name="listObjectClass">Guid типа создаваемого объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.CreateListObject(TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создаёт объект в списке объектов
            </summary>
            <param name="objectList">Группа параметров, описывающая список объектов</param>
            <param name="listObjectClass">Тип создаваемого объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.ClearObjectList(System.Guid)">
            <summary>
            Очищает список объектов
            </summary>
            <param name="objectList">Guid списка объектов</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.ClearObjectList(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Очищает список объектов
            </summary>
            <param name="objectList">Группа, описывающая список объектов</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.SetLinkedObject(System.Guid,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект по связи 1:1 или N:1
            </summary>
            <param name="linkGroup">Guid группы, описывающей связь</param>
            <param name="newLinkedObject">Связанный объект</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.SetLinkedObject(TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект по связи 1:1 или N:1
            </summary>
            <param name="linkGroup">Группа, описывающая связь</param>
            <param name="newLinkedObject">Связанный объект</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.AddLinkedObject(System.Guid,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект по связи 1:N, N:N или на любой справочник
            </summary>
            <param name="linkGroup">Guid группы, описывающей связь</param>
            <param name="newLinkedObject">Связанный объект</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.AddLinkedObject(TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект по связи 1:N, N:N, или на любой справочник
            </summary>
            <param name="linkGroup">Группа, описывающая связь</param>
            <param name="newLinkedObject">Связанный объект</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.RemoveLinkedObject(System.Guid,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Отключает объект по связи 1:N, N:N, или на любой справочник
            </summary>
            <param name="linkGroup">Guid группы, описывающей связь</param>
            <param name="linkedObject">Связанный объект</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.RemoveLinkedObject(TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Отключает объект по связи 1:N, N:N, или на любой справочник
            </summary>
            <param name="linkGroup">Группа, описывающая связь</param>
            <param name="linkedObject">Связанный объект</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.ClearLinks(System.Guid)">
            <summary>
            Отключает все объекты по связи 1:N, N:N, или на любой справочник
            </summary>
            <param name="linkGroup">Guid группы, описывающей связь</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.ClearLinks(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Отключает все объекты по связи 1:N, N:N, или на любой справочник
            </summary>
            <param name="linkGroup">Группа, описывающая связь</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.OnStageChanging(TFlex.DOCs.Model.Stages.Stage)">
            <summary>
            Вызывается перед изменением стадии объекта
            </summary>
            <param name="stage">Стадия</param>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.OnStageChanged(TFlex.DOCs.Model.Stages.Stage)">
            <summary>
            Вызывается при изменении стадии объекта
            </summary>
            <param name="oldStage"></param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObject.OnMoved">
            <summary>
            Вызывается после перемещения объекта
            </summary>
            <param name="up">true, если объект перемещается вверх по списку</param>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ReferenceObjectLockState">
            <summary>
            Состояние блокировки объекта справочника
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.ReferenceObjectLockState.None">
            <summary>
            Не заблокирован
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.ReferenceObjectLockState.CheckedOutForAdd">
            <summary>
            Создан на рабочем столе
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.ReferenceObjectLockState.CheckedOutForEdit">
            <summary>
            Взят на редактирование
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.ReferenceObjectLockState.CheckedOutForDelete">
            <summary>
            Взят на удаление
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.ReferenceObjectLockState.LockedByCurrentUser">
            <summary>
            Заблокирован текущим пользователем (для справочников без поддержки рабочего стола)
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.ReferenceObjectLockState.LockedByOtherUser">
            <summary>
            Заблокирован другим пользователем
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ReferenceObjectCollection">
            <summary>
            Загружаемая коллекция объектов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObjectCollection.State">
            <summary>
            Возвращает состояние загрузки коллекции объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObjectCollection.Reference">
            <summary>
            Возвращает справочник, для которого загружается коллекция объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObjectCollection.Parent">
            <summary>
            Возвращает родительский объект коллекции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection.Load(System.Int32,System.Int32)">
            <summary>
            Загружает указанное количество объектов коллекции
            </summary>
            <param name="count">Количество объектов для загрузки</param>
            <returns>Значение true, если загрузка успешно завершена, в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection.Load">
            <summary>
            Загружает все объекты коллекции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection.Reload">
            <summary>
            Перезагружает коллекцию объектов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection.GetHierarchyLinks">
            <summary>
            Возвращает список всех подключений родительского объекта коллекции к дочерним
            </summary>
            <returns>Список подключений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection.GetLoadedHierarchyLinks">
            <summary>
            Возвращает список всех подключений родительского объекта коллекции к дочерним
            </summary>
            <returns>Список подключений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection.GetAllTreeNodes">
            <summary>
            Рекурсивно загружает все объекты иерархии
            </summary>
            <returns>Список загруженных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection.RecursiveLoad">
            <summary>
            Рекурсивно загружает все объекты иерархии
            </summary>
            <returns>Список загруженных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection.RecursiveLoad(System.Boolean,TFlex.DOCs.Model.References.LoadSettings)">
            <summary>
            Рекурсивно загружает все объекты иерархии, с возможностью указать необходимость перезагрузки коллекции
            </summary>
            <param name="reload">Значение true, если требуется перезагрузить коллекцию; в противном случае - значение false</param>
            <param name="loadSettings">Настройки загрузки</param>
            <returns>Список загруженных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection.RecursiveLoad(System.Int32)">
            <summary>
            Рекурсивно загружает все объекты иерархии, с ограничением по количеству загружаемых объектов
            </summary>
            <param name="maxCount">Максимальное количество загружаемых объектов</param>
            <returns>Список загруженных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection.RecursiveLoad(System.Boolean,System.Int32)">
            <summary>
            Рекурсивно загружает все объекты иерархии, с ограничением по количеству загружаемых объектов и возможностью указать необходимость перезагрузки коллекции
            </summary>
            <param name="reload">Значение true, если требуется перезагрузить коллекцию; в противном случае - значение false</param>
            <param name="maxCount">Максимальное количество загружаемых объектов</param>
            <returns>Список загруженных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection.RecursiveLoadHierarchy(System.Int32)">
            <summary>
            Рекурсивно загружает иерархию, с возможностью ограничить количество загружаемых объектов
            </summary>
            <param name="maxCount">Максимальное количество загружаемых объектов</param>
            <returns>Список объектов DesktopObject</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection.RecursiveLoadHierarchyLinks(System.Int32)">
            <summary>
            Рекурсивно загружает все подключения иерархии, с возможностью ограничить количество загружаемых объектов
            </summary>
            <param name="maxCount">Максимальное количество загружаемых объектов</param>
            <returns>Список загруженных подключений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection.IndexOf(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает индекс указанного объекта в коллекции
            </summary>
            <param name="item">Объект справочника</param>
            <returns>Индекс объекта в коллекции</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObjectCollection.Item(System.Int32)">
            <summary>
            Возвращает объект справочника по его индексу в коллекции
            </summary>
            <param name="index">Индекс объекта в коллекции</param>
            <returns>Объект справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection.Clear">
            <summary>
            Очищает список загруженных объектов коллекции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection.Contains(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Возвращает значение, указывающее, содержится ли заданный объект в коллекции
            </summary>
            <param name="item">Объект справочника</param>
            <returns>Значение true, если указанный объект содержится в коллекции; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObjectCollection.CountLoaded">
            <summary>
            Возвращает количество загруженных объектов в коллекции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection.CopyTo(TFlex.DOCs.Model.References.ReferenceObject[],System.Int32)">
            <summary>
            Копирует коллекцию в массив, начиная с указанного индекса массива
            </summary>
            <param name="array">Массив для копирования объектов</param>
            <param name="arrayIndex">Отсчитываемый от нуля индекс массива array, с которого начинается копирование</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection.GetEnumerator">
            <summary>
            Возвращает перечислитель объектов коллекции
            </summary>
            <returns>Перечислитель объектов</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.ReferenceObjectCollection`1">
            <summary>
            Обобщенная версия загружаемой коллекции объектов справочника
            </summary>
            <typeparam name="T">Тип объектов справочника, содержащихся в коллекции</typeparam>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObjectCollection`1.AsList">
            <summary>
            Возвращает коллекцию объектов в виде списка
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection`1.IndexOf(`0)">
            <summary>
            Возвращает индекс указанного элемента в коллекции
            </summary>
            <param name="item">Объект справочника</param>
            <returns>Индекс объекта в коллекции</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.References.ReferenceObjectCollection`1.Item(System.Int32)">
            <summary>
            Возвращает объект справочника по его индексу в коллекции
            </summary>
            <param name="index">Индекс объекта в коллекции</param>
            <returns>Объект справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection`1.Contains(`0)">
            <summary>
            Возвращает значение, указывающее, содержится ли заданный объект в коллекции
            </summary>
            <param name="item">Объект справочника</param>
            <returns>Значение true, если указанный объект содержится в коллекции; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Копирует коллекцию в массив, начиная с указанного индекса массива
            </summary>
            <param name="array">Массив для копирования объектов</param>
            <param name="arrayIndex">Отсчитываемый от нуля индекс массива array, с которого начинается копирование</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection`1.Remove(`0)">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.ReferenceObjectCollection`1.GetEnumerator">
            <summary>
            Возвращает перечислитель объектов коллекции
            </summary>
            <returns>Перечислитель объектов коллекции</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.References.LoadState">
            <summary>
            Состояние загрузки коллекции
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.LoadState.NotLoaded">
            <summary>
            Не загружено
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.LoadState.PartLoaded">
            <summary>
            Загружено частично
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.References.LoadState.Loaded">
            <summary>
            Полностью загружено
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.References.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reference.LinkInfo">
            <summary>
            Возвращает информацию о связи, относительно которой подчиненный справочник вычисляет набор объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reference.LoadSettings">
            <summary>
            Возвращает параметры загрузки объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reference.PrototypeMode">
            <summary>
            Возвращает значение, указывающее, поддерживает ли справочник работу с прототипами
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reference.Prototypes">
            <summary>
            Возвращает экземпляр справочника для работы с прототипами
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reference.IsSlave">
            <summary>
            Возвращает значение, указывающее, является ли справочник подчиненным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reference.Name">
            <summary>
            Возвращает название справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reference.Icon">
            <summary>
            Возвращает иконку справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reference.ParameterGroup">
            <summary>
            Возвращает основную группу параметров справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.Refresh">
            <summary>
            Обновляет справочник
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.Refresh(System.Boolean)">
            <summary>
            Обновляет справочник
            </summary>
            <param name="objectsOnly">Значение true, если требуется обновление только объектов справочника; в противном случае - значение false</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reference.Objects">
            <summary>
            Возвращает коллекцию объектов справочника на первом уровне иерархии
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reference.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reference.Id">
            <summary>
            Возвращает ID справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.LoadLinks(System.Collections.Generic.List{TFlex.DOCs.Model.References.ReferenceObject},TFlex.DOCs.Model.References.LoadSettings)">
            <summary>
            Загружает связи для заданных объектов в соответствии с параметрами загрузки
            </summary>
            <param name="rootObjects">Список объектов</param>
            <param name="settings">Параметры загрузки</param>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.GetDeletedObjects">
            <summary>
            Возвращает список объектов справочника, находящихся в корзине
            </summary>
            <returns>Список удаленных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.RecursiveLoad(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject},TFlex.DOCs.Model.References.RelationLoadSettings.RecursiveLoadDirection)">
            <summary>
            Загружает иерархию для заданных объектов в соответствии с направлением загрузки
            </summary>
            <param name="objects">Список объектрв</param>
            <param name="loadDirection">Направление загрузки</param>
            <returns>Список загруженных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CreateReferenceObject">
            <summary>
            Создает объект справочника
            </summary>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CreateReferenceObject(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает объект справочника в указанном родительском объекте
            </summary>
            <param name="parentObject">Родительский объект</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CreateReferenceObject(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект справочника заданного типа
            </summary>
            <param name="classObject">Тип создаваемого объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CreateReferenceObject(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект справочника заданного типа в указанном родительском объекте
            </summary>
            <param name="parentObject">Родительский объект</param>
            <param name="classObject">Тип создаваемого объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CopyReferenceObject(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает копию заданного объекта
            </summary>
            <param name="prototype">Копируемый объект</param>
            <returns>Набор копий объектов для сохранения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CopyReferenceObject(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает копию заданного объекта в указанном родительском объекте
            </summary>
            <param name="prototype">Копируемый объект</param>
            <param name="parentObject">Родительский объект</param>
            <returns>Набор копий объектов для сохранения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CopyReferenceObject(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает копию заданного объекта указанного типа
            </summary>
            <param name="prototype">Копируемый объект</param>
            <param name="classObject">Тип создаваемого объекта</param>
            <returns>Набор копий объектов для сохранения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CopyReferenceObject(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Classes.ClassObject,System.Boolean)">
            <summary>
            Создает копию заданного объекта указанного типа с возможностью указать необходимость копирования дочерних объектов
            </summary>
            <param name="prototype">Копируемый объект</param>
            <param name="classObject">Тип создаваемого объекта</param>
            <param name="copyChildren">Значение true, если требуется скопировать дочерние объекты; в противном случае - значение false</param>
            <returns>Набор копий объектов для сохранения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CopyReferenceObject(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Classes.ClassObject,System.Boolean,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Создает копию заданного объекта указанного типа в заданном родительском объекте с возможностью указать необходимость копирования дочерних объектов
            </summary>
            <param name="prototype">Копируемый объект</param>
            <param name="parentObject">Родительский объект</param>
            <param name="classObject">Тип создаваемого объекта</param>
            <param name="copyChildren">Значение true, если требуется скопировать дочерние объекты; в противном случае - значение false</param>
            <param name="skip">Список идентификаторов групп и парметров, которые должны быть пропущенными при копировании</param>
            <returns>Набор копий объектов для сохранения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CopyReferenceObject(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ReferenceObject,System.Boolean,System.Boolean)">
            <summary>
            Создает копию заданного объекта в указанном родительском объекте с возможностью указать необходимость копирования дочерних и связанных объектов 
            </summary>
            <param name="prototype">Копируемый объект</param>
            <param name="parentObject">Родительский объект</param>
            <param name="copyChildren">Значение true, если требуется скопировать дочерние объекты; в противном случае - значение false</param>
            <param name="copyLinkedObjects">Значение true, если требуется скопировать связанные объекты; в противном случае - значение false</param>
            <returns>Набор копий объектов для сохранения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CopyReferenceObject(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.CopyReferenceObjectsContext)">
            <summary>
            Создает копию заданного объекта с использованием указанного контекста копирования
            </summary>
            <param name="prototype">Копируемый объект</param>
            <param name="context">Контекст копирования объектов</param>
            <returns>Набор копий объектов для сохранения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CopyReferenceObjects(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject},TFlex.DOCs.Model.References.ReferenceObject,System.Boolean,System.Boolean)">
            <summary>
            Создает копии заданных объектов в указанном родительском объекте с возможностью указать необходимость копирования дочерних и связанных объектов
            </summary>
            <param name="sourceObjects">Копируемые объекты</param>
            <param name="parentObject">Родительский объект</param>
            <param name="copyChildren">Значение true, если требуется скопировать дочерние объекты; в противном случае - значение false</param>
            <param name="copyLinkedObjects">Значение true, если требуется скопировать связанные объекты; в противном случае - значение false</param>
            <returns>Набор копий объектов для сохранения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CopyReferenceObjects(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject},TFlex.DOCs.Model.References.CopyReferenceObjectsContext)">
            <summary>
            Создает копии заданных объектов с использованием указанного контекста копирования
            </summary>
            <param name="sourceObjects">Копируемые объекты</param>
            <param name="context">Контекст копирования объектов</param>
            <returns>Набор копий объектов для сохранения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CanCreateReferenceObject(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Возвращает значение, указывающее, можно ли создать объект определенного типа в заданном родительском объекте
            </summary>
            <param name="prototype">Прототип объекта</param>
            <param name="parentObject">Родительский объект</param>
            <param name="classObject">Тип создаваемого объекта</param>
            <returns>Значение true, если можно создать объект; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.ValidateNewReferenceObject(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Проверяет, можно ли создать объект определенного типа в заданном родительском объекте. В случае неудачи выбрасывает исключение
            </summary>
            <param name="prototype">Прототип объекта</param>
            <param name="parentObject">Родительский объект</param>
            <param name="classObject">Тип создаваемого объекта</param>
        </member>
        <member name="P:TFlex.DOCs.Model.References.Reference.SearchQueries">
            <summary>
            Возвращает справочник "Поисковые запросы"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.Find(System.Int32)">
            <summary>
            Выполняет поиск объекта справочника по ID
            </summary>
            <param name="objectId">ID объекта</param>
            <returns>Найденный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.Find(System.Int32,System.Boolean)">
            <summary>
            Выполняет поиск объекта справочника по ID
            </summary>
            <param name="objectId">ID объекта</param>
            <returns>Найденный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.Find(System.Collections.Generic.ICollection{System.Int32})">
            <summary>
            Выполняет поиск объектов справочника по коллекции ID
            </summary>
            <param name="objectIds">Коллекция ID объектов</param>
            <returns>Список найденных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.Find(System.Guid)">
            <summary>
            Выполняет поиск объекта справочника по GUID
            </summary>
            <param name="objectGuid">GUID объекта</param>
            <returns>Найденный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.Find(TFlex.DOCs.Model.Structure.ParameterInfo,System.Object)">
            <summary>
            Выполняет поиск объектов справочника, у которых значение указанного параметра совпадает с заданным 
            </summary>
            <param name="parameter">Описание параметра объекта</param>
            <param name="value">Значение параметра</param>
            <returns>Список найденных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.Find(TFlex.DOCs.Model.Structure.ParameterInfo,TFlex.DOCs.Model.Search.ComparisonOperator,System.Object)">
            <summary>
            Выполняет поиск объектов справочника, у которых значение указанного параметра удовлетворяет условию, заданному оператором сравнения и значением
            </summary>
            <param name="parameter">Описание параметра объекта</param>
            <param name="op">Оператор сравнения</param>
            <param name="value">Значение параметра</param>
            <returns>Список найденных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.Find(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Classes.ClassObject})">
            <summary>
            Выполняет поиск объектов справочника, типы которых содержатся в указанной коллекции типов
            </summary>
            <param name="classes">Коллекция типов объектов</param>
            <returns>Список найденных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.Find(TFlex.DOCs.Model.Search.Filter,TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Выполняет поиск объектов справочника, удовлетворяющих условиям фильтра
            </summary>
            <param name="filter">Фильтр</param>
            <returns>Список найденных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.Find(TFlex.DOCs.Model.Search.Filter,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Выполняет поиск объектов справочника, удовлетворяющих условиям фильтра, среди дочерних объектов указанного родительского объекта
            </summary>
            <param name="filter">Фильтр</param>
            <param name="parent">Родительский объект</param>
            <returns>Список найденных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CreateLoader(TFlex.DOCs.Model.Search.Filter,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Возвращает загрузчик коллекции объектов справочника, удовлетворяющих условиям фильтра, среди дочерних объектов указанного родительского объекта
            </summary>
            <param name="filter">Фильтр</param>
            <param name="parent">Родительский объект</param>
            <returns>Загрузчик коллекции объектов справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CreateLoader(TFlex.DOCs.Model.Search.Filter,TFlex.DOCs.Model.References.ReferenceObject,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject},TFlex.DOCs.Model.Macros.MacroContext,System.Boolean)">
            <summary>
            Возвращает загрузчик коллекции объектов справочника, удовлетворяющих условиям фильтра, среди дочерних объектов указанного родительского объекта
            </summary>
            <param name="filter">Фильтр</param>
            <param name="parent">Родительский объект</param>
            <param name="sourceObjects">Объекты источника</param>
            <returns>Загрузчик коллекции объектов справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CreateLoader(TFlex.DOCs.Model.Search.PathToParameterCollection,TFlex.DOCs.Model.Search.Filter)">
            <summary>
            Выполняет поиск объектов справочника, удовлетворяющих условиям фильтра
            </summary>
            <param name="resultParameters"></param>
            <param name="filter">Фильтр</param>
            <returns>Коллекция найденных объектов справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.Find(TFlex.DOCs.Model.Search.Filter,System.Int32,TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Выполняет поиск объектов справочника, удовлетворяющих условиям фильтра, ограничивая количество возвращаемых объектов
            </summary>
            <param name="filter">Фильтр</param>
            <param name="maxCount">Максимальное количество возвращаемых объектов</param>
            <returns>Список найденных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.Find(TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Search.Filter,TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Возвращает объекты, к которым подключен указанный объект по связи на любой справочник
            </summary>
            <param name="anyReferenceLink">Связь на любой справочник</param>
            <param name="slaveObject">Объект, владельцев которого нужно найти</param>
            <param name="filter">Фильтр</param>
            <param name="formulaContext">Контекст для вычисления переменных фильтра</param>
            <returns>Список найденных объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.GetReports">
            <summary>
            Возвращает список отчетов, доступных для любых объектов справочника 
            </summary>
            <returns>Список отчетов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.GetReports(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Возвращает список отчетов, доступных для объектов указанного типа
            </summary>
            <param name="classObject">Тип объектов справочника</param>
            <returns>Список отчетов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если объекты равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.op_Equality(TFlex.DOCs.Model.References.Reference,TFlex.DOCs.Model.References.Reference)">
            <summary>
            Определяет, равны ли два объекта 
            </summary>
            <param name="obj1">Первый объект для сравнения</param>
            <param name="obj2">Второй объект для сравнения</param>
            <returns>Значение true, если объекты равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.op_Inequality(TFlex.DOCs.Model.References.Reference,TFlex.DOCs.Model.References.Reference)">
            <summary>
            Определяет, различаются ли два объекта 
            </summary>
            <param name="obj1">Первый объект для сравнения</param>
            <param name="obj2">Второй объект для сравнения</param>
            <returns>Значение true, если объекты различны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.GetHashCode">
            <summary>
            Возвращает хэш-код объекта
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns>Строковое представление</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CompareTo(TFlex.DOCs.Model.References.Reference)">
            <summary>
            Сравнивает текущий объект с другим объектом типа Reference
            </summary>
            <param name="other">Объект, который требуется сравнить с данным объектом</param>
            <returns>Значение равное нулю, если объекты равны; в противном случае - значение не равное нулю</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.GetPrivateFolder">
            <summary>
            Возвращает личную папку текущего пользователя
            </summary>
            <returns>Личная папка текущего пользователя</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CanCreateHierarchyLink(TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Classes.ClassObject,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Возвращает значение, указывающее, возможно ли подключить к указанному родительскому объекту заданного типа указанный дочерний объект заданного типа
            </summary>
            <param name="parentObject">Родительский объект</param>
            <param name="parentClass">Тип родительского объекта</param>
            <param name="childObject">Дочерний объект</param>
            <param name="childClass">Тип дочернего объекта</param>
            <returns>Значение true, если подключение возможно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CanDeleteHierarchyLink(TFlex.DOCs.Model.References.ComplexHierarchyLink)">
            <summary>
            Возвращает значение, указывающее, возможно ли удаление заданного подключения
            </summary>
            <param name="link">Подключение</param>
            <returns>Значение true, если подключение может быть удалено; в противном случае - значение false</returns>
        </member>
        <member name="E:TFlex.DOCs.Model.References.Reference.ObjectChanged">
            <summary>
            Происходит при модификации объекта
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.References.Reference.EventRaising">
            <summary>
            Происходит перед возникновением события
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.References.Reference.EventRaised">
            <summary>
            Происходит после возникновения события
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CanCreateUniqueObject(TFlex.DOCs.Model.Classes.ClassObject,System.Collections.Generic.IDictionary{System.Guid,System.Object})">
            <summary>
            Возвращает значение, указывающее, можно ли создать уникальный объект заданного типа с указанными параметрами
            </summary>
            <param name="classObject">Тип объекта</param>
            <param name="values">Карта Guid параметра к значению для проверки уникальности</param>
            <returns>Значение true, если можно создать объект с заданными параметрами; в противном случае - значение false</returns>
            <remarks>Параметр <paramref name="values"/> должен содержать все значения параметров, которые присутствуют в условии уникальности для указанного в <paramref name="classObject"/> типа</remarks>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CanCreateUniqueObject(TFlex.DOCs.Model.Classes.ClassObject,System.Collections.Generic.IDictionary{System.Guid,System.Object},TFlex.DOCs.Model.References.ReferenceObject@)">
            <summary>
            Возвращает значение, указывающее, можно ли создать уникальный объект заданного типа с указанными параметрами
            </summary>
            <param name="classObject">Тип объекта</param>
            <param name="values">Карта Guid параметра к значению для проверки уникальности</param>
            <param name="existingObject">Возвращаемое значение, содержащее уже существующий уникальный объект, если он найден</param>
            <returns>Значение true, если можно создать объект с заданными параметрами; в противном случае - значение false</returns>
            <remarks>Параметр <paramref name="values"/> должен содержать все значения параметров, которые присутствуют в условии уникальности для указанного в <paramref name="classObject"/> типа</remarks>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.CanCreateUniqueObject(TFlex.DOCs.Model.Classes.ClassObject,System.Collections.Generic.IDictionary{System.Guid,System.Object},TFlex.DOCs.Model.References.UniqueIndexCheckResult@)">
            <summary>
            Возвращает значение, указывающее, можно ли создать уникальный объект заданного типа с указанными параметрами
            </summary>
            <param name="classObject">Тип объекта</param>
            <param name="values">Карта Guid параметра к значению для проверки уникальности</param>
            <param name="checkResult">Возвращаемое значение, содержащее результат проверки уникальности объекта</param>
            <returns>Значение true, если можно создать объект с заданными параметрами; в противном случае - значение false</returns>
            <remarks>Параметр <paramref name="values"/> должен содержать все значения параметров, которые присутствуют в условии уникальности для указанного в <paramref name="classObject"/> типа</remarks>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.LoadSimpleReferences(TFlex.DOCs.Model.ServerConnection,System.Int32[])">
            <summary>
            Загрузить краткие описания справочников по их идентификаторам
            </summary>
            <param name="connection">Соединение с базой данных</param>
            <param name="referenceIDs">Список идентификаторов справочников (пустое значение - все справочники)</param>
            <returns>Краткие описания справочников (коллекция возвращается всегда). Ключ: id справочника, значение: краткое описание справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.References.Reference.LoadSimpleObjects(TFlex.DOCs.Model.ServerConnection,System.Int32,System.Int32[])">
            <summary>
            Загрузить краткие описания объектов справочника по их идентификаторам
            </summary>
            <param name="connection">Соединение с базой данных</param>
            <param name="referenceID">Идентификатор справочника</param>
            <param name="objectIDs">Список идентификаторов объектов (не задано - все объекты справочника)</param>
            <returns>Краткие описания справочников (коллекция возвращается всегда). Ключ: id справочника, значение: краткое описание справочника</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.FindServersCompletedEventArgs">
            <summary>
            Аргументы события завершения асинхронного поиска серверов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.FindServersCompletedEventArgs.Servers">
            <summary>
            Массив объектов <see cref="T:TFlex.DOCs.Model.ServerInfo"/>, содержащих информацию о найденных серверах
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Notification.EventWatcher">
            <summary>
            Наблюдатель событий
            </summary>
            <summary>
            Наблюдатель событий
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchForCreatedObjects(TFlex.DOCs.Model.ReferenceInfo,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на создание объектов указанного справочника
            </summary>
            <param name="referenceInfo">Описание справочника</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchForCreatedObjects(TFlex.DOCs.Model.References.Reference,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на создание объектов указанного справочника
            </summary>
            <param name="reference">Справочник</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchForCreatedObjects(TFlex.DOCs.Model.References.ReferenceObject,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на создание дочерних объектов указанного родительского объекта
            </summary>
            <param name="parentObject">Родительский объект</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchForCreatedObjects(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject},System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на создание дочерних объектов указанных родительских объектов
            </summary>
            <param name="parentObjects">Коллекция родительских объектов справочника</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchForChangedObjects(TFlex.DOCs.Model.ReferenceInfo,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на изменение объектов указанного справочника
            </summary>
            <param name="referenceInfo">Справочник</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchForChangedObjects(TFlex.DOCs.Model.References.Reference,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на изменение объектов указанного справочника
            </summary>
            <param name="reference">Справочник</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchForChangedObjects(TFlex.DOCs.Model.References.ReferenceObject,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на изменение дочерних объектов указанного родительского объекта
            </summary>
            <param name="parentObject">Родительский объект</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchForChangedObjects(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject},System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на изменение дочерних объектов указанных родительских объектов
            </summary>
            <param name="parentObjects">Коллекция родительских объектов</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchForDeletedObjects(TFlex.DOCs.Model.ReferenceInfo,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на удаление объектов указанного справочника
            </summary>
            <param name="referenceInfo">Описание справочника</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchForDeletedObjects(TFlex.DOCs.Model.References.Reference,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на удаление объектов указанного справочника
            </summary>
            <param name="reference">Справочник</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchForDeletedObjects(TFlex.DOCs.Model.References.ReferenceObject,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на удаление указанного объекта
            </summary>
            <param name="obj">Объект справочника</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchForDeletedObjects(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject},System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на удаление указанных объектов
            </summary>
            <param name="objects">Коллекция объектов справочника</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchForReferenceChanged(TFlex.DOCs.Model.ReferenceInfo,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на изменение указанного справочника
            </summary>
            <param name="referenceInfo">Описание справочника</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchForReferencesChanged(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.ReferenceInfo},System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на изменение указанных справочников
            </summary>
            <param name="references">Коллекция справочников</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchForReferenceChanged(TFlex.DOCs.Model.References.Reference,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на изменение указанного справочника
            </summary>
            <param name="reference">Справочник</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchCreatedObjects(TFlex.DOCs.Model.ReferenceInfo,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на создание объектов указанного справочника
            </summary>
            <param name="referenceInfo">Описание справочника</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchCreatedObjects(TFlex.DOCs.Model.References.Reference,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на создание объектов указанного справочника
            </summary>
            <param name="reference">Справочник</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchCreatedObjects(TFlex.DOCs.Model.References.ReferenceObject,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на создание дочерних объектов указанного родительского объекта
            </summary>
            <param name="parentObject">Родительский объект</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchCreatedObjects(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject},System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на создание дочерних объектов указанных родительских объектов
            </summary>
            <param name="parentObjects">Коллекция родительских объектов справочника</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchChangedObjects(TFlex.DOCs.Model.ReferenceInfo,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на изменение объектов указанного справочника
            </summary>
            <param name="referenceInfo">Справочник</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchChangedObjects(TFlex.DOCs.Model.References.Reference,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на изменение объектов указанного справочника
            </summary>
            <param name="reference">Справочник</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchChangedObjects(TFlex.DOCs.Model.References.ReferenceObject,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на изменение дочерних объектов указанного родительского объекта
            </summary>
            <param name="parentObject">Родительский объект</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchChangedObjects(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject},System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на изменение дочерних объектов указанных родительских объектов
            </summary>
            <param name="parentObjects">Коллекция родительских объектов</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchDeletedObjects(TFlex.DOCs.Model.ReferenceInfo,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на удаление объектов указанного справочника
            </summary>
            <param name="referenceInfo">Описание справочника</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchDeletedObjects(TFlex.DOCs.Model.References.Reference,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на удаление объектов указанного справочника
            </summary>
            <param name="reference">Справочник</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchDeletedObjects(TFlex.DOCs.Model.References.ReferenceObject,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на удаление указанного объекта
            </summary>
            <param name="obj">Объект справочника</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchDeletedObjects(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject},System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на удаление указанных объектов
            </summary>
            <param name="objects">Коллекция объектов справочника</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchReferenceChanged(TFlex.DOCs.Model.ReferenceInfo,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на изменение указанного справочника
            </summary>
            <param name="referenceInfo">Описание справочника</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchReferencesChanged(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.ReferenceInfo},System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на изменение указанных справочников
            </summary>
            <param name="references">Коллекция справочников</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcher.WatchReferenceChanged(TFlex.DOCs.Model.References.Reference,System.ComponentModel.ISynchronizeInvoke,TFlex.DOCs.Model.Notification.ObjectCreatedCallback)">
            <summary>
            Создает подписку на изменение указанного справочника
            </summary>
            <param name="reference">Справочник</param>
            <param name="synchronizeInvoke">Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата</param>
            <param name="callback">Делегат, определяющий метод обратного вызова</param>
            <returns>Подписка на событие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.ImmediatelyTrigger.GetExecuteTime(System.DateTime)">
            <summary>
            Возвращает время следующего запуска
            </summary>
            <param name="lastExecuteTime">Время последнего запуска</param>
            <returns>Время следующего запуска</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.ImmediatelyTrigger.Name">
            <summary>
            Возвращает строковое представление триггера
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.DayTrigger">
            <summary>
            Триггер "Ежедневно"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.DayTrigger.DayInterval">
            <summary>
            Возвращает или задает интервал выполнения действия (в днях)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.DayTrigger.Name">
            <summary>
            Возвращает наименование триггера
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.DayTrigger.GetExecuteTime(System.DateTime)">
            <summary>
            Возвращает время следующего запуска
            </summary>
            <param name="lastExecuteTime">Время последнего запуска</param>
            <returns>Время следующего запуска</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.MonthTrigger">
            <summary>
            Триггер "Ежемесячно"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.MonthTrigger.Months">
            <summary>
            Возвращает массив значений, указывающих, в какие месяцы выполняется действие
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.MonthTrigger.MonthDays">
            <summary>
            Возвращает массив значений, указывающих, в какие дни месяца выполняется действие
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.MonthTrigger.Name">
            <summary>
            Возвращает наименование триггера
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.MonthTrigger.GetExecuteTime(System.DateTime)">
            <summary>
            Возвращает время следующего запуска
            </summary>
            <param name="lastExecuteTime">Время последнего запуска</param>
            <returns>Время следующего запуска</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.ReferenceTrigger">
            <summary>
            Триггер "Изменение в справочнике"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.ReferenceTrigger.Name">
            <summary>
            Не реализовано
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.ReferenceTrigger.GetExecuteTime(System.DateTime)">
            <summary>
            Не реализовано
            </summary>
            <param name="lastExecuteTime"></param>
            <returns></returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.TimeTrigger">
            <summary>
            Триггер "Однократно"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.TimeTrigger.StartTime">
            <summary>
            Возаращает или задает время начала выполнения действия
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.TimeTrigger.Name">
            <summary>
            Возвращает строковое представление триггера
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.TimeTrigger.GetExecuteTime(System.DateTime)">
            <summary>
            Возвращает время следующего запуска
            </summary>
            <param name="lastExecuteTime">Время последнего запуска</param>
            <returns>Время следующего запуска</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.WeekTrigger">
            <summary>
            Триггер "Еженедельно"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.WeekTrigger.Item(System.DayOfWeek)">
            <summary>
            Возвращает значение, указывающее, выполняется ли действие в заданный день недели
            </summary>
            <param name="day">День недели</param>
            <returns>Значение true, если действие выполняется в заданный день недели; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.WeekTrigger.Days">
            <summary>
            Возвращает массив значений, указывающих, в какие дни недели выполняется действие
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.WeekTrigger.WeekInterval">
            <summary>
            Возвращает интервал выполнения действия (в неделях)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.WeekTrigger.Name">
            <summary>
            Возвращает наименование триггера
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.Triggers.WeekTrigger.GetExecuteTime(System.DateTime)">
            <summary>
            Возвращает время следующего запуска
            </summary>
            <param name="lastExecuteTime">Время последнего запуска</param>
            <returns>Время следующего запуска</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Notification.ServerTasks.TaskAction">
            <summary>
            Действие задачи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.TaskAction.Name">
            <summary>
            Возвращает наименование действия
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.TaskAction.Execute(TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Выполняет действие
            </summary>
            <param name="context">Контекст выполнения действия</param>
            <returns>Результат выполнения действия</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Notification.ServerTasks.Handlers.MacroTaskAction">
            <summary>
            Действие "Выполнить макрос"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.Handlers.MacroTaskAction.#ctor">
            <summary>
            Создает новый экземпляр действия
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.Handlers.MacroTaskAction.#ctor(System.Guid,System.String)">
            <summary>
            Создает новый экземпляр действия для выполнения макроса с заданным Guid
            </summary>
            <param name="macroGuid">Guid макроса</param>
            <param name="entryPoint">Точка входа макроса</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.Handlers.MacroTaskAction.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает новый экземпляр действия
            </summary>
            <param name="connection">Соединение с сервером</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.Handlers.MacroTaskAction.#ctor(TFlex.DOCs.Model.ServerConnection,System.Guid,System.String)">
            <summary>
            Создает новый экземпляр действия для выполнения макроса с заданным Guid
            </summary>
            <param name="connection">Соединение с сервером</param>
            <param name="macroGuid">Guid макроса</param>
            <param name="entryPoint">Точка входа макроса</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.Handlers.MacroTaskAction.#ctor(TFlex.DOCs.Model.References.Macros.Macro,System.String)">
            <summary>
            Создает новый экземпляр действия для выполнения указанного макроса
            </summary>
            <param name="macro">Макрос</param>
            <param name="entryPoint">Точка входа макроса</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Handlers.MacroTaskAction.MacroGuid">
            <summary>
            Возвращает или задает Guid макроса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Handlers.MacroTaskAction.Macro">
            <summary>
            Возвращает или задает макрос
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Handlers.MacroTaskAction.EntryPoint">
            <summary>
            Возвращает или задает точку входа макроса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Handlers.MacroTaskAction.Data">
            <summary>
            Возвращает или задает данные действия
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Handlers.MacroTaskAction.Name">
            <summary>
            Возвращает наименование действия
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.Handlers.MacroTaskAction.Execute(TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Выполняет действие
            </summary>
            <param name="context">Контекст выполнения действия</param>
            <returns>Результат выполнения действия</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Notification.ServerTasks.Handlers.SystemTaskAction">
            <summary>
            Действие "Системное действие"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.Handlers.SystemTaskAction.#ctor">
            <summary>
            Создает новый экземпляр действия
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Handlers.SystemTaskAction.TypeName">
            <summary>
            Возвращает или задает имя типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Handlers.SystemTaskAction.ActionExecuterType">
            <summary>
            Возвращает или задает тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Handlers.SystemTaskAction.Name">
            <summary>
            Возвращает наименование действия
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.Handlers.SystemTaskAction.Execute(TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Выполняет действие
            </summary>
            <param name="context">Контекст выполнения</param>
            <returns>Результат выполнения</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Notification.ServerTasks.TaskActionContext">
            <summary>
            Контекст выполнения действия
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.TaskActionContext.#ctor(TFlex.DOCs.Model.Notification.ServerTasks.ServerTask)">
            <summary>
            Создает новый экземпляр контекста для указанной задачи
            </summary>
            <param name="task">Задача</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.TaskActionContext.Task">
            <summary>
            Задача
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.TaskActionContext.MacroTaskActionData">
            <summary>
            Данные действия
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Notification.ServerTasks.ServerTask">
            <summary>
            Задача
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.ServerTask.#ctor">
            <summary>
            Создает новую задачу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.ServerTask.Guid">
            <summary>
            Возвращает Guid задачи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.ServerTask.Name">
            <summary>
            Возвращает или задает наименование задачи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.ServerTask.Comment">
            <summary>
            Возвращает или задает комментарий к задаче
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.ServerTask.Enabled">
            <summary>
            Возвращает или задает значение, указывающее, включена ли задача
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.ServerTask.User">
            <summary>
            Возвращает пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.ServerTask.Trigger">
            <summary>
            Возвращает или задает триггер
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.ServerTask.Action">
            <summary>
            Возвращает или задает действие
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.ServerTask.LastExecuteResult">
            <summary>
            Возвращает результат последнего запуска
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.ServerTask.LastExecuteTime">
            <summary>
            Возвращает время последнего запуска
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.ServerTask.ExecuteCount">
            <summary>
            Возвращает количество запусков
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.ServerTask.Save">
            <summary>
            Сохраняет изменения задачи
            </summary>
            <returns>Значение true, если изменения успешно сохранены; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.ServerTask.Delete">
            <summary>
            Удаляет задачу
            </summary>
            <returns>Значение true, если задача успешно удалена; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Notification.ServerTasks.Trigger">
            <summary>
            Триггер задачи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.Trigger.#ctor">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.ServerTasks.Trigger.Name">
            <summary>
            Возврщает наименование триггера
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.Trigger.GetExecuteTime(System.DateTime)">
            <summary>
            Возвращает время следующего запуска
            </summary>
            <param name="lastExecuteTime">Время последнего запуска</param>
            <returns>Время следующего запуска</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.Trigger.ToString">
            <summary>
            Возвращает строковое представление триггера
            </summary>
            <returns></returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Notification.ServerTasks.ServerTaskManager">
            <summary>
            Менеджер задач
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.ServerTaskManager.GetTasks">
            <summary>
            Возвращает список задач
            </summary>
            <returns>Список задач</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.ServerTaskManager.CreateTask">
            <summary>
            Создает новую задачу
            </summary>
            <returns>Задача</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.ServerTasks.ServerTaskManager.DeleteTask(TFlex.DOCs.Model.Notification.ServerTasks.ServerTask)">
            <summary>
            Удаляет задачу
            </summary>
            <param name="task">Задача для удаления</param>
            <returns>Значение true, если задача успешно удалена; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Notification.ObjectCreatedCallback">
            <summary>
            Делегат для метода обратного вызова, использующегося при возникновении событий справочников
            </summary>
            <param name="referenceId">Id справочника, в котором произошло событие</param>
            <param name="objectId">Id объекта, для которого произошло событие</param>
        </member>
        <member name="T:TFlex.DOCs.Model.Notification.EventWatcherLock">
            <summary>
            Подписка на событие справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Notification.EventWatcherLock.IsAlive">
            <summary>
            Возвращает значение, указывающее, действительна ли подписка
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Notification.EventWatcherLock.Dispose">
            <summary>
            Освобождает подписку
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.PasswordParameter">
            <summary>
            Параметр типа "Пароль" (установка значения вычисляет его хэш, чтение возвращает уже готовый хэш пароля)
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.PasswordParameter.#ctor(TFlex.DOCs.Model.Parameters.ParameterCollection,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает новый параметр в указанной коллекции параметров
            </summary>
            <param name="owner">Коллекция параметров</param>
            <param name="info">Описание параметра</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.PasswordParameter.SetValue(System.Object)">
            <summary>
            Установить значение параметра типа "Пароль"
            </summary>
            <param name="value">Строковое значение пароля</param>
        </member>
        <member name="F:TFlex.DOCs.Model.Parameters.PasswordParameter._oldSourceValue">
            <summary>
            Старое исходное значение (первый хэш пароля - EncryptionHashTimes.Default) - заполняется при смене пароля
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.PasswordParameter.OldSourceValue">
            <summary>
            Старое исходное значение (первый хэш пароля - EncryptionHashTimes.Default) - заполняется при смене пароля.
            Устанавливается явным представлением пароля, возвращаемое значение - первичный хэш от этого пароля
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Parameters.PasswordParameter._sourceValue">
            <summary>
            Исходное значение (первый хэш пароля - EncryptionHashTimes.Default)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.PasswordParameter.SourceValue">
            <summary>
            Исходное значение (первый хэш пароля - EncryptionHashTimes.Default).
            Устанавливается явным представлением пароля, возвращаемое значение - первичный хэш от этого пароля
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.BooleanParameter">
            <summary>
            Параметр типа "Да/Нет"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.BooleanParameter.#ctor(TFlex.DOCs.Model.Parameters.ParameterCollection,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает новый параметр в указанной коллекции параметров
            </summary>
            <param name="owner">Коллекция параметров</param>
            <param name="info">Описание параметра</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.BooleanParameter.IsEmpty">
            <summary>
            Возвращает значение, указывающее, является ли параметр пустым
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.BooleanParameter.GetBoolean">
            <summary>
            Возвращает значение параметра в формате Boolean
            </summary>
            <returns>Значение параметра в формате Boolean</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.BooleanParameter.GetTypeCode">
            <summary>
            Возвращает код типа значения параметра
            </summary>
            <returns>Код типа</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.ByteArrayParameter">
            <summary>
            Параметр типа "Двоичные данные"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ByteArrayParameter.#ctor(TFlex.DOCs.Model.Parameters.ParameterCollection,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает новый параметр в указанной коллекции параметров
            </summary>
            <param name="owner">Коллекция параметров</param>
            <param name="info">Описание параметра</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ByteArrayParameter.GetByteArray">
            <summary>
            Возвращает значение параметра в формате Byte[]
            </summary>
            <returns>Значение параметра в формате Byte[]</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ByteArrayParameter.GetTypeCode">
            <summary>
            Возвращает код типа значения параметра
            </summary>
            <returns>Код типа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ByteArrayParameter.Equals(System.Byte[],System.Byte[])">
            <summary>
            Возвращает значение, указывающее, равны ли заданные массивы байтов
            </summary>
            <param name="array1">Первый массив байтов для сравнения</param>
            <param name="array2">Первый массив байтов для сравнения</param>
            <returns>Значение true, если массивы байтов равны; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.ImageParameter">
            <summary>
            Параметр типа "Изображение"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ImageParameter.#ctor(TFlex.DOCs.Model.Parameters.ParameterCollection,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает новый параметр в указанной коллекции параметров
            </summary>
            <param name="owner">Коллекция параметров</param>
            <param name="info">Описание параметра</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ImageParameter.GetImage">
            <summary>
            Получает значение параметра в формате Image
            </summary>
            <returns>Значение параметра в формате Image</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ImageParameter.GetTypeCode">
            <summary>
            Возвращает код типа значения параметра
            </summary>
            <returns>Код типа</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.DateTimeParameter">
            <summary>
            Параметр типа "Дата и время"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Parameters.DateTimeParameter.MinValue">
            <summary>
            Возвращает минимальное значение параметра
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Parameters.DateTimeParameter.MaxValue">
            <summary>
            Возвращает максимальное значение параметра
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.DateTimeParameter.#ctor(TFlex.DOCs.Model.Parameters.ParameterCollection,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает новый параметр в указанной коллекции параметров
            </summary>
            <param name="owner">Коллекция параметров</param>
            <param name="info">Описание параметра</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.DateTimeParameter.GetDateTime">
            <summary>
            Возвращает значение параметра в формате DateTime
            </summary>
            <returns>Значение параметра в формате DateTime</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.DateTimeParameter.EmptyValue">
            <summary>
            Возвращает пустое значение параметра
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.DateTimeParameter.GetTypeCode">
            <summary>
            Возвращает код типа значения параметра
            </summary>
            <returns>Код типа</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.DateTimeParameter.IsEmpty">
            <summary>
            Возвращает значение, указывающее, является ли параметр пустым
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.FloatPointParameter`1">
            <summary>
            Параметр типа "Действительное число"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.SingleParameter">
            <summary>
            Параметр типа "Действительное число (4 байта)"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.DoubleParameter">
            <summary>
            Параметр типа "Действительное число (8 байт)"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.DecimalParameter">
            <summary>
            Параметр типа "Десятичное число"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.PercentParameter">
            <summary>
            Параметр типа "Процент"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.GuidParameter">
            <summary>
            Параметр типа "Уникальный идентификатор"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.GuidParameter.#ctor(TFlex.DOCs.Model.Parameters.ParameterCollection,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает новый параметр в указанной коллекции параметров
            </summary>
            <param name="owner">Коллекция параметров</param>
            <param name="info">Описание параметра</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.GuidParameter.GetGuid">
            <summary>
            Возвращает значение параметра в формате Guid
            </summary>
            <returns>Значение параметра в формате Guid</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.GuidParameter.GetTypeCode">
            <summary>
            Возвращает код типа значения параметра
            </summary>
            <returns>Код типа</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.IconParameter">
            <summary>
            Параметр типа "Иконка"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.IconParameter.#ctor(TFlex.DOCs.Model.Parameters.ParameterCollection,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает новый параметр в указанной коллекции параметров
            </summary>
            <param name="owner">Коллекция параметров</param>
            <param name="info">Описание параметра</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.IconParameter.Value">
            <summary>
            Возвращает или задает значение параметра
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.IconParameter.GetIcon">
            <summary>
            Возвращает значение параметра в формате IconImage
            </summary>
            <returns>Значение параметра в формате IconImage</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.IconParameter.GetByteArray">
            <summary>
            Возвращает значение параметра в формате Byte[]
            </summary>
            <returns>Значение параметра в формате Byte[]</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.IconParameter.IsNull">
            <summary>
            Возвращает значение, указывающее, является ли значение параметра равным NULL
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.IconParameter.GetTypeCode">
            <summary>
            Возвращает код типа значения параметра
            </summary>
            <returns>Код типа</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.ByteParameter">
            <summary>
            Параметр типа "Короткое целое число (1 байт)"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ByteParameter.#ctor(TFlex.DOCs.Model.Parameters.ParameterCollection,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает новый параметр в указанной коллекции параметров
            </summary>
            <param name="owner">Коллекция параметров</param>
            <param name="info">Описание параметра</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ByteParameter.GetByte">
            <summary>
            Возвращает значение параметра в формате Byte
            </summary>
            <returns>Значение параметра в формате Byte</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ByteParameter.GetTypeCode">
            <summary>
            Возвращает код типа значения параметра
            </summary>
            <returns>Код типа</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.Int16Parameter">
            <summary>
            Параметр типа "Короткое целое число (2 байта)"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Int16Parameter.#ctor(TFlex.DOCs.Model.Parameters.ParameterCollection,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает новый параметр в указанной коллекции параметров
            </summary>
            <param name="owner">Коллекция параметров</param>
            <param name="info">Описание параметра</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Int16Parameter.GetInt16">
            <summary>
            Возвращает значение параметра в формате Int16
            </summary>
            <returns>Значение параметра в формате Int16</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Int16Parameter.GetTypeCode">
            <summary>
            Возвращает код типа значения параметра
            </summary>
            <returns>Код типа</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.Int32Parameter">
            <summary>
            Параметр типа "Целое число"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Int32Parameter.#ctor(TFlex.DOCs.Model.Parameters.ParameterCollection,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает новый параметр в указанной коллекции параметров
            </summary>
            <param name="owner">Коллекция параметров</param>
            <param name="info">Описание параметра</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Int32Parameter.GetInt32">
            <summary>
            Возвращает значение параметра в формате Int32
            </summary>
            <returns>Значение параметра в формате Int32</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Int32Parameter.GetTypeCode">
            <summary>
            Возвращает код типа значения параметра
            </summary>
            <returns>Код типа</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.Int64Parameter">
            <summary>
            Параметр типа "Большое целое число"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Int64Parameter.#ctor(TFlex.DOCs.Model.Parameters.ParameterCollection,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает новый параметр в указанной коллекции параметров
            </summary>
            <param name="owner">Коллекция параметров</param>
            <param name="info">Описание параметра</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Int64Parameter.GetInt64">
            <summary>
            Возвращает значение параметра в формате Int64
            </summary>
            <returns>Значение параметра в формате Int64</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Int64Parameter.GetTypeCode">
            <summary>
            Возвращает код типа значения параметра
            </summary>
            <returns>Код типа</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.SystemParameter">
            <summary>
            Системный параметр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.SystemParameter.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли параметр доступным только для чтения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.SystemParameter.IsNull">
            <summary>
            Возвращает значение, указывающее, является ли значение параметра равным NULL
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.SystemParameter.GetTypeCode">
            <summary>
            Возвращает код типа значения параметра
            </summary>
            <returns>Код типа</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.ComplexHierarchyLinkParameters">
            <summary>
            Коллекция параметров подключения в справочнике со сложной иерархией
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ComplexHierarchyLinkParameters.Link">
            <summary>
            Возвращает подключение
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset">
            <summary>
            Интервал времени
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.Zero">
            <summary>
            Возвращает нулевой интервал
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Создает новый интервал времени
            </summary>
            <param name="years">Количество лет</param>
            <param name="months">Количество месяцев</param>
            <param name="days">Количество дней</param>
            <param name="hours">Количество часов</param>
            <param name="minutes">Количество минут</param>
            <param name="seconds">Количество секунд</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.#ctor(TFlex.DOCs.Model.Parameters.DateTimeParameterOffset)">
            <summary>
            Создает новый интервал времени на основании указанного интервала
            </summary>
            <param name="offset">Интервал времени для копирования</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.Years">
            <summary>
            Возвращает количество лет
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.Months">
            <summary>
            Возвращает количество месяцев
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.Days">
            <summary>
            Возвращает количество дней
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.Hours">
            <summary>
            Возвращает количество часов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.Minutes">
            <summary>
            Возвращает количество минут
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.Seconds">
            <summary>
            Возвращает количество секунд
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.NowWithOffset">
            <summary>
            Возвращает дату и время, полученные в результате смещения текущей даты и времени на интервал времени
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.ModifyDateTime(System.DateTime,System.Boolean)">
            <summary>
            Возвращает дату и время, полученные в результате смещений указанных даты и времени на интервал времени
            </summary>
            <param name="dateTime">Дата и время для модификации</param>
            <param name="decrement">Значение true, если смещение должно производиться назад; в противном случае - значение false</param>
            <returns>Смещенная дата и время</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.GetValueFromSubtraction(System.DateTime,System.DateTime)">
            <summary>
            Возвращает интервал времени между указанными значениями даты и времени 
            </summary>
            <param name="first">Первая дата (уменьшаемое)</param>
            <param name="second">Вторая дата (вычитаемое)</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.IsEmpty">
            <summary>
            Возвращает значение, указывающее, является ли интервал пустым
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.ToString">
            <summary>
            Возвращает строковое представление интервала
            </summary>
            <returns>Строковое представление интервала</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если объекты равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.GetHashCode">
            <summary>
            Возвращает хэш-код интервала времени
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.op_Equality(TFlex.DOCs.Model.Parameters.DateTimeParameterOffset,TFlex.DOCs.Model.Parameters.DateTimeParameterOffset)">
            <summary>
            Определяет, равны ли два указанных интервала времени
            </summary>
            <param name="first">Первый интервал для сравнения</param>
            <param name="second">Второй интервал для сравнения</param>
            <returns>Значение true, если интервалы равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.op_Inequality(TFlex.DOCs.Model.Parameters.DateTimeParameterOffset,TFlex.DOCs.Model.Parameters.DateTimeParameterOffset)">
            <summary>
            Определяет, различаются ли два указанных интервала времени
            </summary>
            <param name="first">Первый интервал для сравнения</param>
            <param name="second">Второй интервал для сравнения</param>
            <returns>Значение true, если интервалы не равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.op_GreaterThan(TFlex.DOCs.Model.Parameters.DateTimeParameterOffset,TFlex.DOCs.Model.Parameters.DateTimeParameterOffset)">
            <summary>
            Определяет, верно ли, что первый интервал времени больше, чем второй
            </summary>
            <param name="first">Первый интервал для сравнения</param>
            <param name="second">Второй интервал для сравнения</param>
            <returns>Значение true, если первый интервал больше второго; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.op_LessThan(TFlex.DOCs.Model.Parameters.DateTimeParameterOffset,TFlex.DOCs.Model.Parameters.DateTimeParameterOffset)">
            <summary>
            Определяет, верно ли, что первый интервал времени меньше, чем второй
            </summary>
            <param name="first">Первый интервал для сравнения</param>
            <param name="second">Второй интервал для сравнения</param>
            <returns>Значение true, если первый интервал меньше второго; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.Parse(System.String)">
            <summary>
            Преобразовывает указанное строковое представление интервала времени в его эквивалент DateTimeParameterOffset
            </summary>
            <param name="s">Строковое представление интервала времени</param>
            <returns>Объект, эквивалентный указанному строковому значению интервала времени</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.TryParse(System.String,TFlex.DOCs.Model.Parameters.DateTimeParameterOffset@)">
            <summary>
            Преобразовывает указанное строковое представление интервала времени в его эквивалент DateTimeParameterOffset и возвращает значение, позволяющее определить успешность преобразования
            </summary>
            <param name="s">Строковое представление интервала времени</param>
            <param name="result">Объект для записи интервала времени, эквивалентного указанному строковому значению</param>
            <returns>Значение true, если преобразование выполнено успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.Equals(TFlex.DOCs.Model.Parameters.DateTimeParameterOffset)">
            <summary>
            Возвращает значение, указывающее, равен ли заданный интервал времени текущему
            </summary>
            <param name="other">Интервал времени для сравнения</param>
            <returns>Значение true, если интервалы равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.DateTimeParameterOffset.Clone">
            <summary>
            Создает новый интервал времени на основании текущего
            </summary>
            <returns>Интервал времени</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.ParameterNotFoundException">
            <summary>
            Исключение, которое генерируется, если параметр не найден в коллекции
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.StringParameter">
            <summary>
            Параметр типа "Строка или текст"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.StringParameter.#ctor(TFlex.DOCs.Model.Parameters.ParameterCollection,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает новый параметр в указанной коллекции параметров
            </summary>
            <param name="owner">Коллекция параметров</param>
            <param name="info">Описание параметра</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.StringParameter.GetString">
            <summary>
            Возвращает значение параметра в формате String
            </summary>
            <returns>Значение параметра в формате String</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.StringParameter.GetGuid">
            <summary>
            Возвращает значение параметра в формате Guid
            </summary>
            <returns>Значение параметра в формате Guid</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.StringParameter.EmptyValue">
            <summary>
            Возвращает пустое значение параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.StringParameter.IsEmpty">
            <summary>
            Возвращает значение, указывающее, является ли параметр пустым
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.StringParameter.GetTypeCode">
            <summary>
            Возвращает код типа значения параметра
            </summary>
            <returns>Код типа</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.ReferenceObjectParameters">
            <summary>
            Коллекция параметров объекта справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectParameters.Object">
            <summary>
            Возвращает объект справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields">
            <summary>
            Коллекция системных параметров объекта справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.Id">
            <summary>
            Возвращает Id объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.Guid">
            <summary>
            Возвращает Guid объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.AuthorName">
            <summary>
            Возвращает имя автора объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.AuthorId">
            <summary>
            Возвращает Id автора объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.Author">
            <summary>
            Возвращает автора объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.CreationDate">
            <summary>
            Возвращает дату создания объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.EditorName">
            <summary>
            Возвращает имя автора последнего изменения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.EditorId">
            <summary>
            Возвращает Id автора последнего изменения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.Editor">
            <summary>
            Возвращает автора последнего изменения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.EditDate">
            <summary>
            Возвращает дату последнего изменения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.Version">
            <summary>
            Возвращает версию объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.Deleted">
            <summary>
            Возвращает значение, указывающее, является ли объект удаленным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.ClientView">
            <summary>
            Возвращает рабочее место, на котором заблокирован объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.Stage">
            <summary>
            Возвращает стадию объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.IsLinkedToNomenclature">
            <summary>
            Возвращает значение, указывающее, подключен ли объект к номенклатуре
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.Add(TFlex.DOCs.Model.Structure.SystemParameterType,System.Object)">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.ContainsKey(TFlex.DOCs.Model.Structure.SystemParameterType)">
            <summary>
            Возвращает значение, указывающее, содержится ли в данной коллекции системных параметров параметр указанного типа
            </summary>
            <param name="key">Тип системного параметра</param>
            <returns>Значение true, если параметр указанного типа содержится в коллекции; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.Keys">
            <summary>
            Возвращает коллекцию типов системных параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.Remove(TFlex.DOCs.Model.Structure.SystemParameterType)">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.TryGetValue(TFlex.DOCs.Model.Structure.SystemParameterType,System.Object@)">
            <summary>
            Получает значение указанного параметра
            </summary>
            <param name="key">Тип системного параметра</param>
            <param name="value">Значение параметра</param>
            <returns>Значение true, если значение параметра успешно получено; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.Values">
            <summary>
            Возвращает коллекцию значений системных параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.Item(TFlex.DOCs.Model.Structure.SystemParameterType)">
            <summary>
            Возвращает значение указанного параметра
            </summary>
            <param name="key">Тип системного параметра</param>
            <returns>Значение параметра</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.Add(System.Collections.Generic.KeyValuePair{TFlex.DOCs.Model.Structure.SystemParameterType,System.Object})">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.Clear">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.Contains(System.Collections.Generic.KeyValuePair{TFlex.DOCs.Model.Structure.SystemParameterType,System.Object})">
            <summary>
            Возвращает значение, указывающее, содержится ли в коллекции параметров указанная пара "тип параметра - значение параметра"
            </summary>
            <param name="item">Пара "тип параметра - значение параметра"</param>
            <returns>Значение true, если указанная пара содержится в текущей коллекции системных параметров; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.CopyTo(System.Collections.Generic.KeyValuePair{TFlex.DOCs.Model.Structure.SystemParameterType,System.Object}[],System.Int32)">
            <summary>
            Копирует коллекцию системных параметров в указанный массив пар "тип параметра - значение параметра" по заданному индексу 
            </summary>
            <param name="array">Массив пар "тип параметра - значение параметра"</param>
            <param name="arrayIndex">Индекс массива, с которого следует начинать копирование</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.Count">
            <summary>
            Возвращает количество параметров в коллекции
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли коллекция параметров доступной только для чтения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.Remove(System.Collections.Generic.KeyValuePair{TFlex.DOCs.Model.Structure.SystemParameterType,System.Object})">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ReferenceObjectSystemFields.GetEnumerator">
            <summary>
            Возвращает перечислитель пар "тип параметра - значение параметра" для текущей коллекции
            </summary>
            <returns>Перечислитель пар "тип параметра - значение параметра"</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.Parameter">
            <summary>
            Параметр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.Parameter.Value">
            <summary>
            Возвращает или задает значение параметра 
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.SetNull">
            <summary>
            Задает значение параметра равным NULL
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.SetModified">
            <summary>
            Устанавливает свойство параметра IsModified равным true (параметр был модифицирован)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.Parameter.IsEmpty">
            <summary>
            Возвращает значение, указывающее, является ли параметр пустым
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.Parameter.IsNull">
            <summary>
            Возвращает значение, указывающее, является ли значение параметра равным NULL
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.Parameter.IsModified">
            <summary>
            Возвращает значение, указывающее, был ли модифицирован параметр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.Parameter.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли параметр доступным только для чтения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.Parameter.ParameterInfo">
            <summary>
            Возвращает описание параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.Parameter.Owner">
            <summary>
            Возвращает коллекцию параметров, в которую входит данный параметр
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.ToString">
            <summary>
            Возвращает строковое представление параметра
            </summary>
            <returns>Строковое представление параметра</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.ToString(System.String)">
            <summary>
            Возвращает строковое представление параметра в указанном формате.
            </summary>
            <param name="format">Формат</param>
            <returns>Строковое представление</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.GetBoolean">
            <summary>
            Возвращает значение параметра в формате Boolean
            </summary>
            <returns>Значение параметра в формате Boolean</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.GetByte">
            <summary>
            Возвращает значение параметра в формате Byte
            </summary>
            <returns>Значение параметра в формате Byte</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.GetInt16">
            <summary>
            Возвращает значение параметра в формате Int16
            </summary>
            <returns>Значение параметра в формате Int16</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.GetInt32">
            <summary>
            Возвращает значение параметра в формате Int32
            </summary>
            <returns>Значение параметра в формате Int32</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.GetInt64">
            <summary>
            Возвращает значение параметра в формате Int64
            </summary>
            <returns>Значение параметра в формате Int64</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.GetString">
            <summary>
            Возвращает значение параметра в формате String
            </summary>
            <returns>Значение параметра в формате String</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.GetSingle">
            <summary>
            Возвращает значение параметра в формате Single
            </summary>
            <returns>Значение параметра в формате Single</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.GetDouble">
            <summary>
            Возвращает значение параметра в формате Double
            </summary>
            <returns>Значение параметра в формате Double</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.GetDecimal">
            <summary>
            Возвращает значение параметра в формате Decimal
            </summary>
            <returns>Значение параметра в формате Decimal</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.GetGuid">
            <summary>
            Возвращает значение параметра в формате Guid
            </summary>
            <returns>Значение параметра в формате Guid</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.GetByteArray">
            <summary>
            Возвращает значение параметра в формате Byte[]
            </summary>
            <returns>Значение параметра в формате Byte[]</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.GetDateTime">
            <summary>
            Возвращает значение параметра в формате DateTime
            </summary>
            <returns>Значение параметра в формате DateTime</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.GetIcon">
            <summary>
            Возвращает значение параметра в формате IconImage
            </summary>
            <returns>Значение параметра в формате IconImage</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.GetImage">
            <summary>
            Возвращает значение параметра в формате Image
            </summary>
            <returns>Значение параметра в формате Image</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.op_Explicit(TFlex.DOCs.Model.Parameters.Parameter)~System.Boolean">
            <summary>
            Определяет явное преобразование параметра в Boolean
            </summary>
            <param name="p">Преобразуемый параметр</param>
            <returns>Значение параметра в формате Boolean</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.op_Explicit(TFlex.DOCs.Model.Parameters.Parameter)~System.Byte">
            <summary>
            Определяет явное преобразование параметра в Byte
            </summary>
            <param name="p">Преобразуемый параметр</param>
            <returns>Значение параметра в формате Byte</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.op_Explicit(TFlex.DOCs.Model.Parameters.Parameter)~System.Int16">
            <summary>
            Определяет явное преобразование параметра в Int16
            </summary>
            <param name="p">Преобразуемый параметр</param>
            <returns>Значение параметра в формате Int16</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.op_Explicit(TFlex.DOCs.Model.Parameters.Parameter)~System.Int32">
            <summary>
            Определяет явное преобразование параметра в Int32
            </summary>
            <param name="p">Преобразуемый параметр</param>
            <returns>Значение параметра в формате Int32</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.op_Explicit(TFlex.DOCs.Model.Parameters.Parameter)~System.Int64">
            <summary>
            Определяет явное преобразование параметра в Int64
            </summary>
            <param name="p">Преобразуемый параметр</param>
            <returns>Значение параметра в формате Int64</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.op_Explicit(TFlex.DOCs.Model.Parameters.Parameter)~System.String">
            <summary>
            Определяет явное преобразование параметра в String
            </summary>
            <param name="p">Преобразуемый параметр</param>
            <returns>Значение параметра в формате String</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.op_Explicit(TFlex.DOCs.Model.Parameters.Parameter)~System.Single">
            <summary>
            Определяет явное преобразование параметра в Single
            </summary>
            <param name="p">Преобразуемый параметр</param>
            <returns>Значение параметра в формате Single</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.op_Explicit(TFlex.DOCs.Model.Parameters.Parameter)~System.Double">
            <summary>
            Определяет явное преобразование параметра в Double
            </summary>
            <param name="p">Преобразуемый параметр</param>
            <returns>Значение параметра в формате Double</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.op_Explicit(TFlex.DOCs.Model.Parameters.Parameter)~System.Decimal">
            <summary>
            Определяет явное преобразование параметра в Decimal
            </summary>
            <param name="p">Преобразуемый параметр</param>
            <returns>Значение параметра в формате Decimal</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.op_Explicit(TFlex.DOCs.Model.Parameters.Parameter)~System.Guid">
            <summary>
            Определяет явное преобразование параметра в GUID
            </summary>
            <param name="p">Преобразуемый параметр</param>
            <returns>Значение параметра в формате GUID</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.op_Explicit(TFlex.DOCs.Model.Parameters.Parameter)~System.Byte[]">
            <summary>
            Определяет явное преобразование параметра в Byte[]
            </summary>
            <param name="p">Преобразуемый параметр</param>
            <returns>Значение параметра в формате Byte[]</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.op_Explicit(TFlex.DOCs.Model.Parameters.Parameter)~System.DateTime">
            <summary>
            Определяет явное преобразование параметра в DateTime
            </summary>
            <param name="p">Преобразуемый параметр</param>
            <returns>Значение параметра в формате DateTime</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.op_Explicit(TFlex.DOCs.Model.Parameters.Parameter)~TFlex.DOCs.Model.IconImage">
            <summary>
            Определяет явное преобразование параметра в IconImage
            </summary>
            <param name="p">Преобразуемый параметр</param>
            <returns>Значение параметра в формате IconImage</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.op_Explicit(TFlex.DOCs.Model.Parameters.Parameter)~System.Drawing.Image">
            <summary>
            Определяет явное преобразование параметра в Image
            </summary>
            <param name="p">Преобразуемый параметр</param>
            <returns>Значение параметра в формате Image</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.ToBoolean(System.IFormatProvider)">
            <summary>
            Преобразование значения параметра из текущего типа в тип Boolean
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение параметра в формате Boolean</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.ToByte(System.IFormatProvider)">
            <summary>
            Преобразование значения параметра из текущего типа в тип Byte
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение параметра в формате Byte</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.ToChar(System.IFormatProvider)">
            <summary>
            Преобразование значения параметра из текущего типа в тип Char
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение параметра в формате Char</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.ToDateTime(System.IFormatProvider)">
            <summary>
            Преобразование значения параметра из текущего типа в тип DateTime
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение параметра в формате DateTime</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.ToDecimal(System.IFormatProvider)">
            <summary>
            Преобразование значения параметра из текущего типа в тип Decimal
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение параметра в формате Decimal</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.ToDouble(System.IFormatProvider)">
            <summary>
            Преобразование значения параметра из текущего типа в тип Double
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение параметра в формате Double</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.ToInt16(System.IFormatProvider)">
            <summary>
            Преобразование значения параметра из текущего типа в тип Int16
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение параметра в формате Int16</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.ToInt32(System.IFormatProvider)">
            <summary>
            Преобразование значения параметра из текущего типа в тип Int32
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение параметра в формате Int32</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.ToInt64(System.IFormatProvider)">
            <summary>
            Преобразование значения параметра из текущего типа в тип Int64
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение параметра в формате Int64</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.ToSByte(System.IFormatProvider)">
            <summary>
            Преобразование значения параметра из текущего типа в тип SByte
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение параметра в формате SByte</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.ToSingle(System.IFormatProvider)">
            <summary>
            Преобразование значения параметра из текущего типа в тип Single
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение параметра в формате Single</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.ToString(System.IFormatProvider)">
            <summary>
            Преобразование значения параметра из текущего типа в тип String
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение параметра в формате String</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.ToType(System.Type,System.IFormatProvider)">
            <summary>
            Преобразование значения параметра из текущего типа в заданный тип
            </summary>
            <param name="conversionType">Целевой тип значения</param>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение параметра в заданном формате</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.ToUInt16(System.IFormatProvider)">
            <summary>
            Преобразование значения параметра из текущего типа в тип UInt16
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение параметра в формате UInt16</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.ToUInt32(System.IFormatProvider)">
            <summary>
            Преобразование значения параметра из текущего типа в тип UInt32
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение параметра в формате UInt32</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.ToUInt64(System.IFormatProvider)">
            <summary>
            Преобразование значения параметра из текущего типа в тип UInt64
            </summary>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение параметра в формате UInt64</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.ToString(System.String,System.IFormatProvider)">
            <summary>
            Возвращает строковое представление текущего параметра, созданное с использованием указанного формата и сведений об особенностях формата для данного языка и региональных стандартов.
            </summary>
            <param name="format">Формат</param>
            <param name="formatProvider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Строковое представление</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter.GetTypeCode">
            <summary>
            Возвращает код типа значения параметра
            </summary>
            <returns>Код типа</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.Parameter`1">
            <summary>
            Параметр, содержащий значение определенного типа
            </summary>
            <typeparam name="T">Тип значения</typeparam>
        </member>
        <member name="F:TFlex.DOCs.Model.Parameters.Parameter`1._value">
            <summary>
            Значение
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Parameters.Parameter`1._isNull">
            <summary>
            Указывает, является ли значение параметра равным NULL
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter`1.#ctor(TFlex.DOCs.Model.Parameters.ParameterCollection,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает новый параметр в указанной коллекции
            </summary>
            <param name="owner">Коллекция параметров</param>
            <param name="info">Описание параметра</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.Parameter`1.Value">
            <summary>
            Возвращает или задает значение параметра
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.Parameter`1.op_Implicit(TFlex.DOCs.Model.Parameters.Parameter{`0})~`0">
            <summary>
            Определяет неявное преобразование параметра в T
            </summary>
            <param name="parameter">Преобразуемый параметр</param>
            <returns>Значение параметра в формате T</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.Parameter`1.EmptyValue">
            <summary>
            Возвращает пустое значение параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.Parameter`1.IsEmpty">
            <summary>
            Возвращает значение, указывающее, является ли параметр пустым
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.Parameter`1.IsNull">
            <summary>
            Возвращает значение, указывающее, является ли значение параметра равным NULL
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Parameters.ParameterCollection">
            <summary>
            Коллекция параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ParameterCollection.Item(TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
             Возвращает параметр с указанным описанием
            </summary>
            <param name="info">Описание параметра</param>
            <returns>Параметр</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ParameterCollection.Item(System.Int32)">
            <summary>
            Возвращает параметр с указанным Id
            </summary>
            <param name="parameterId">ID параметра</param>
            <returns>Параметр</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ParameterCollection.Item(System.Guid)">
            <summary>
            Возвращает параметр с указанным Guid
            </summary>
            <param name="parameterGuid">Guid параметра</param>
            <returns>Параметр</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ParameterCollection.GetParameter(TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Возвращает параметр с указанным описанием
            </summary>
            <param name="parameter">Описание параметра</param>
            <returns>Параметр</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ParameterCollection.GetParameter(System.Int32)">
            <summary>
            Возвращает параметр с указанным Id
            </summary>
            <param name="id">Id параметра</param>
            <returns>Параметр</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ParameterCollection.GetParameter(System.Guid)">
            <summary>
            Возвращает параметр с указанным Guid
            </summary>
            <param name="guid">Guid параметра</param>
            <returns>Параметр</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ParameterCollection.TryGetValue``1(System.Guid,``0@)">
            <summary>
            Возвращает значение параметра с указанным Guid
            </summary>
            <typeparam name="T">Тип возвращаемого значения</typeparam>
            <param name="guid">Guid параметра</param>
            <param name="value">Значение параметра</param>
            <returns>Значение true, если параметр присутствует в коллекции; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ParameterCollection.TrySetValue(System.Guid,System.Object)">
            <summary>
            Задает значение параметра с указанным Guid
            </summary>
            <param name="guid">Guid параметра</param>
            <param name="value">Значение параметра</param>
            <returns>Значение true, если параметр присутствует в коллекции и ему было присвоено указанное значение; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ParameterCollection.IsLoaded(System.Int32)">
            <summary>
            Возвращает значение, указывающее, загружен ли в коллекцию параметр с указанным Id
            </summary>
            <param name="parameterId">Id параметра</param>
            <returns>Значение true, если параметр загружен в коллекцию; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ParameterCollection.IsLoaded(System.Guid)">
            <summary>
            Возвращает значение, указывающее, загружен ли в коллекцию параметр с указанным Guid
            </summary>
            <param name="parameterGuid">Guid параметра</param>
            <returns>Значение true, если параметр загружен в коллекцию; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ParameterCollection.IsLoaded(TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Возвращает значение, указывающее, загружен ли в коллекцию параметр с указанным описанием
            </summary>
            <param name="info">Описание параметра</param>
            <returns>Значение true, если параметр загружен в коллекцию; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Parameters.ParameterCollection.IsModified">
            <summary>
            Возвращает значение, указывающее, является ли коллекция параметров модифицированной
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ParameterCollection.SetValues(TFlex.DOCs.Model.Parameters.ParameterCollection)">
            <summary>
            Задает значения параметров текущей коллекции путем копирования их из указанной коллекции параметров
            </summary>
            <param name="sourceCollection">Коллекция параметров для копирования значений</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ParameterCollection.SetValues(System.Collections.Generic.IDictionary{System.Int32,System.Object})">
            <summary>
            Задает значения параметров текущей коллекции путем копирования их из коллекции пар Id параметра - значение параметра
            </summary>
            <param name="values">Коллекция пар Id параметра - значение параметра</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ParameterCollection.SetValues(System.Collections.Generic.IDictionary{System.Guid,System.Object})">
            <summary>
            Задает значения параметров текущей коллекции путем копирования их из коллекции пар Guid параметра - значение параметра
            </summary>
            <param name="values">Коллекция пар Guid параметра - значение параметра</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ParameterCollection.ToValueMap">
            <summary>
            Производит преобразование текущей коллекции значений в коллекцию пар Id параметра - значение параметра
            </summary>
            <returns>Коллекция пар Id параметра - значение параметра</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ParameterCollection.ToString">
            <summary>
            Возвращает строковое представление коллекции параметров
            </summary>
            <returns>Строковое представление коллекции параметров</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ParameterCollection.IsReadOnly(TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Возвращает значение, указывающее, является ли параметр с указанным описанием доступным только для чтения
            </summary>
            <param name="info">Описание параметра</param>
            <returns>Значение true, если указанный параметр доступен только для чтения; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Parameters.ParameterCollection.GetEnumerator">
            <summary>
            Возвращает перечислитель параметров для данной коллекции
            </summary>
            <returns>Перечислитель параметров коллекции</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Plugins.Technology.TechnologyPlugin">
            <summary>
            Вспомогательный класс для работы с Технологией
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.Technology.TechnologyPlugin.UpdateOperationNumbers(TFlex.DOCs.Model.References.ReferenceObject,System.Int32,System.Int32,System.Int32)">
            <summary>
            Осуществляет нумерацию операций структурированного технологического процесса
            </summary>
            <param name="techProcess">Структурированный технологический процесс</param>
            <param name="firstNumber">Номер первой операции</param>
            <param name="numerationStep">Шаг нумерации</param>
            <param name="numberLength">Количество сиволов в номере (недостающие будут дополнены нулями)</param>
            <remarks>Если <paramref name="numberLength" /> = 0, количество символов будет вычислено автоматически по самому длинному номеру</remarks>
            <returns>Список операций, номера которых были изменены</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.Technology.TechnologyPlugin.UpdateStepNumbers(TFlex.DOCs.Model.References.ReferenceObject,System.Int32,System.Int32,System.Int32)">
            <summary>
            Осуществляет нумерацию переходов операции структурированного технологического процесса
            </summary>
            <param name="techOperation">Операция структурированного технологического процесса</param>
            <param name="firstNumber">Номер первой операции</param>
            <param name="numerationStep">Шаг нумерации</param>
            <param name="numberLength">Количество сиволов в номере (недостающие будут дополнены нулями)</param>
            <remarks>Если <paramref name="numberLength" /> = 0, количество символов будет вычислено автоматически по самому длинному номеру</remarks>
            <returns>Список переходов, номера которых были изменены</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Plugins.HtmlHelper">
            <summary>
            Класс для работы с HTML-текстом
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.HtmlHelper.InsertFirstString(System.String,System.String)">
            <summary>
            Вставляет указанную строку <paramref name="str"/> в начало тела HTML-строки <paramref name="htmlString"/>
            </summary>
            <param name="htmlString">Строка в формате HTML</param>
            <param name="str">Добавляемая строка</param>
            <returns>Результирующая строка</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.HtmlHelper.InsertFirstString(System.String,System.String[])">
            <summary>
            Добавляет указанный массив строк <paramref name="strings"/> в начало тела HTML-строки <paramref name="htmlString"/>
            </summary>
            <param name="htmlString">Строка в формате HTML</param>
            <param name="strings">Добавляемые строки</param>
            <returns>Результирующая строка</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.HtmlHelper.InsertLastString(System.String,System.String)">
            <summary>
            Добавляет указанную строку <paramref name="str"/> в конец тела HTML-строки <paramref name="htmlString"/>
            </summary>
            <param name="htmlString">Строка в формате HTML</param>
            <param name="str">Добавляемая строка</param>
            <returns>Результирующая строка</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.HtmlHelper.GetHtmlBodyText(System.String)">
            <summary>
            Возвращает строку, содержащуюся в теле HTML-текста
            </summary>
            <param name="htmlString">Строка в формате HTML</param>
            <returns>Результирующая строка</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.HtmlHelper.ReplaceNewLineSymbols(System.String)">
            <summary>
            Заменяет символы переноса строки в указанной строке
            </summary>
            <param name="str">Строка для обработки</param>
            <returns>Результирующая строка</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.HtmlHelper.InsertIntoEmptyHtml(System.String)">
            <summary>
            Создает из указанной строки текст в формате HTML
            </summary>
            <param name="str">Строка для преобразования</param>
            <returns>Строка в формате HTML</returns>
            <remarks>
            Использовать только когда неформатированный текст добавляется в HTML-тело. Все вводы заменяются на "&lt;div>&lt;/div>"
            </remarks>
        </member>
        <member name="T:TFlex.DOCs.Model.Plugins.Projects.IProjectsHelper">
            <summary>
            Вспомогательный интерфейс для связи со сборкой Projects.dll
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.Projects.IProjectsHelper.OpenWorkWindow(TFlex.DOCs.Model.References.ReferenceObject,System.IntPtr)">
            <summary>
            Открывает свойства указанной работы
            </summary>
            <param name="work">Работа</param>
            <param name="handle">
            Дескриптор окна приложения, в котором требуется открыть свойства работы. 
            В случае, если не найдено окно приложения с указанным дескриптором, свойства работы открываются в новой вкладке основного окна.
            </param>
        </member>
        <member name="T:TFlex.DOCs.Model.Plugins.AssemblyLoader">
            <summary>
            Загрузчик сборок 
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Plugins.AssemblyLoader.AssemblyInfo">
            <summary>
            Описание текущей сборки
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.AssemblyLoader.#ctor(System.String)">
            <summary>
            Создает новый экземпляр загрузчика для сборки с указанным именем
            </summary>
            <param name="assemblyFileName">Имя сборки</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.AssemblyLoader.#ctor(System.String,System.String)">
            <summary>
            Создает новый экземпляр загрузчика для загрузки указанного типа заданной сборки
            </summary>
            <param name="assemblyFileName">Имя сборки</param>
            <param name="assemblyClassName">Имя типа</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Plugins.AssemblyLoader.CurrentAssemblyDirectory">
            <summary>
            Возвращает или задает директорию, в которой находятся сборки
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.AssemblyLoader.GetClassObject">
            <summary>
            Создает объект текущего типа 
            </summary>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.AssemblyLoader.GetClassObject``1">
            <summary>
            Создает объект указанного типа
            </summary>
            <typeparam name="T">Тип создаваемого объекта</typeparam>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.AssemblyLoader.LoadAssembly(System.String)">
            <summary>
            Выполняет загрузку сборки с указанным именем
            </summary>
            <param name="fileName">Имя сборки</param>
            <returns>Загруженная сборка</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Plugins.AssemblyLoader.Plugins">
            <summary>
            Возвращает коллекцию загруженных приложений T-FLEX DOCs
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Plugins.AssemblyLoader.LoadedAssemblyes">
            <summary>
            Возвращает коллекцию загруженных сборок
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.AssemblyLoader.LoadAssembly">
            <summary>
            Загружает текущую сборку
            </summary>
            <returns>Загруженная сборка</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.AssemblyLoader.IsAssemblyLoaded">
            <summary>
            Возвращает значение, указывающее, загружена ли текущая сборка
            </summary>
            <returns>Значение true, если текущая сборка загружена; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.AssemblyLoader.IsAssemblyLoaded(System.String)">
            <summary>
            Возвращает значение, указывающее, загружена ли заданная сборка
            </summary>
            <param name="assemblyFileName">Имя файла сборки</param>
            <returns>Значение true, если заданная сборка загружена; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Plugins.ReferenceContext">
            <summary>
            Контекст вызова для поиска реализации интерфейса для справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ReferenceContext.#ctor(TFlex.DOCs.Model.ReferenceInfo)">
            <summary>
            Создает новый экземпляр контекста для указанного справочника
            </summary>
            <param name="reference">Описание справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ReferenceContext.#ctor(TFlex.DOCs.Model.ReferenceInfo,TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает новый экземпляр контекста для указанных справочника и типа объектов справочника
            </summary>
            <param name="reference">Описание справочника</param>
            <param name="classObject">Тип объектов справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ReferenceContext.#ctor(TFlex.DOCs.Model.ReferenceInfo,System.Guid)">
            <summary>
            Создает новый экземпляр контекста для указанных справочника и типа объектов справочника
            </summary>
            <param name="reference">Описание справочника</param>
            <param name="classObject">Guid типа объектов справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ReferenceContext.#ctor(System.Guid)">
            <summary>
            Создает новый экземпляр контекста для справочника с указанным Guid
            </summary>
            <param name="referenceGuid">Guid справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ReferenceContext.#ctor(System.Guid,TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает новый экземпляр контекста для указанных справочника и типа объектов справочника
            </summary>
            <param name="referenceGuid">Guid справочника</param>
            <param name="classObject">Тип объектов справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ReferenceContext.#ctor(System.Guid,System.Guid)">
            <summary>
            Создает новый экземпляр контекста для указанных справочника и типа объектов справочника
            </summary>
            <param name="referenceGuid">Guid справочника</param>
            <param name="classObjectGud">Guid типа объектов справочника</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Plugins.ReferenceContext.ClassObject">
            <summary>
            Возвращает Guid типа объектов справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ReferenceContext.GetHashCode">
            <summary>
            Возвращает хэш-код контекста
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ReferenceContext.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если заданный объект равен текущему; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ReferenceContext.ToString">
            <summary>
            Возвращает строковое представление контекста
            </summary>
            <returns>Строковое представление контекста</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Plugins.Context">
            <summary>
            Контекст вызова для поиска реализации интерфейса для конкретной ситуации
            </summary>
            <remarks>Например реализация диалога объекта справочника, конкретного класса - необходим Id справочника и Id класса</remarks>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.Context.#ctor(System.String)">
            <summary>
            Создает новый экземлпяр контекста для указанной уникальной строки
            </summary>
            <param name="contextUniqueString">Уникальная строка контекста</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.Context.#ctor(System.Type)">
            <summary>
            Создает новый экземпляр контекста для указанного типа
            </summary>
            <param name="contextType">Тип</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.Context.#ctor(System.Guid)">
            <summary>
            Создает новый экземпляр контекста для указанного уникального идентификатора
            </summary>
            <param name="contextGuid">Уникальный идентификатор</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Plugins.Context.Default">
            <summary>
            Возвращает значение, указывающее, является ли контекст контекстом по умолчанию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Plugins.Context.ContextUniqueString">
            <summary>
            Возвращает уникальную строку, представляющую контекст
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.Context.GetHashCode">
            <summary>
            Возвращает хэш-код контекста
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.Context.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если заданный объект равен текущему; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.Context.BaseEquals(TFlex.DOCs.Model.Plugins.Context)">
            <summary>
            Возвращает значение, указывающее, равен ли заданный контекст текущему
            </summary>
            <param name="obj">Контекст для сравнения</param>
            <returns>Значение true, если заданный контекст равен текущему; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.Context.ToString">
            <summary>
            Возвращает строковое представление контекста
            </summary>
            <returns>Строковое представление контекста</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Plugins.IPluginLibrary">
            <summary>
            Интерфейс, при реализации которого сборка будет считаться приложением T-FLEX DOCs (модулем расширения) 
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.IPluginLibrary.RegisterPlugin">
            <summary>
            Метод регистрации модуля (выполняется при запуске)
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.IPluginLibrary.OnCreatingVisualRepresentation(TFlex.DOCs.Model.Plugins.IModelVisualRepresentation)">
            <summary>
            Выполняется при создании визуального представления данных в интерфейсе
            </summary>
            <param name="VisualRepresentation">Создаваемое визуальное представление данных</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.IPluginLibrary.OnCreatingReferenceVisualRepresentation(TFlex.DOCs.Model.References.Reference,TFlex.DOCs.Model.Plugins.IModelVisualRepresentation)">
            <summary>
            Выполняется при создании визуального представления справочника в интерфейсе
            </summary> 
            <param name="reference">Справочник, для которого создается визуальное представление</param>
            <param name="VisualRepresentation">Создаваемое визуальное представление данных справочника</param>
        </member>
        <member name="T:TFlex.DOCs.Model.Plugins.IModelVisualRepresentation">
            <summary>
            Интерфейс для определения визуального представления данных
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Plugins.ObjectCreator">
            <summary>
            Класс для поиска и создания объектов, реализующих определенные интерфейсы
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ObjectCreator.IsExistObjectForContext``1(TFlex.DOCs.Model.Plugins.Context)">
            <summary>
            Возвращает значение, указывающее, существует ли реализация интерфейса для указанного контекста
            </summary>
            <typeparam name="T">Тип интерфейса</typeparam>
            <param name="context">Контекст</param>
            <returns>Значение true, если реализация существует; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ObjectCreator.IsExistObjectForContext``1(TFlex.DOCs.Model.Plugins.Context,System.Boolean)">
            <summary>
            Возвращает значение, указывающее, существует ли реализация интерфейса для указанного контекста
            </summary>
            <typeparam name="T">Тип интерфейса</typeparam>
            <param name="context">Контекст</param>
            <param name="findInAllAssemblies">Значение, указывающее, требуется ли выполнять поиск во всех сборках</param>
            <returns>Значение true, если реализация существует; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ObjectCreator.CreateObject``1">
            <summary>
            Создает объект, реализующий интерфейс <typeparamref name="T"/>
            </summary>
            <typeparam name="T">Тип интерфейса</typeparam>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ObjectCreator.CreateObject``1(System.String)">
            <summary>
            Создает объект, реализующий интерфейс <typeparamref name="T"/>
            </summary>
            <typeparam name="T">Тип интерфейса</typeparam>
            <param name="assemblyName">Имя сборки, содержащей нужный тип</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ObjectCreator.CreateObject``1(TFlex.DOCs.Model.Plugins.Context)">
            <summary>
            Создает объект, реализующий интерфейс <typeparamref name="T"/> для указанного контекста
            </summary>
            <typeparam name="T">Тип интерфейса</typeparam>
            <param name="context">Контекст</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ObjectCreator.TryCreateObject``1(TFlex.DOCs.Model.Plugins.Context,``0@)">
            <summary>
            Создает объект, реализующий интерфейс <typeparamref name="T"/> для указанного контекста без генерации исключения в случае неудачи
            </summary>
            <typeparam name="T">Тип интерфейса</typeparam>
            <param name="context">Контекст</param>
            <param name="createdObject">Созданный объект</param>
            <returns>Значение true, если объект успешно создан; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ObjectCreator.CreateObjectByFoundContext``1(System.Guid)">
            <summary>
            Создает объект, реализующий интерфейс <typeparamref name="T"/> для контекста, найденного по Guid справочника
            </summary>
            <typeparam name="T">Тип интерфейса</typeparam>
            <param name="reference">Guid справочника</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ObjectCreator.CreateObjectByFoundContext``1(System.Guid,TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект, реализующий интерфейс <typeparamref name="T"/> для контекста, найденного по Guid справочника и типу объектов справочника
            </summary>
            <typeparam name="T">Тип интерфейса</typeparam>
            <param name="reference">Guid справочника</param>
            <param name="classObject">Тип объектов справочника</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ObjectCreator.CreateObject(System.Type)">
            <summary>
            Создает объект указанного типа
            </summary>
            <param name="createType">Тип объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ObjectCreator.CreateObjectByFoundContext(System.Type,System.Guid)">
            <summary>
            Создает объект указанного типа для контекста, найденного по Guid справочника
            </summary>
            <param name="createType">Тип объекта</param>
            <param name="reference">Guid справочника</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ObjectCreator.CreateObject(System.Type,TFlex.DOCs.Model.Plugins.Context)">
            <summary>
            Создает объект указанного типа для заданного контекста
            </summary>
            <param name="createType">Тип объекта</param>
            <param name="context">Контекст</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Plugins.ObjectCreator.CreateObjectByFoundContext(System.Type,System.Guid,TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект указанного типа для контекста, найденного по Guid справочника и типу объектов справочника
            </summary>
            <param name="createType">Тип объекта</param>
            <param name="reference">Guid справочника</param>
            <param name="classObject">Тип объектов справочника</param>
            <returns>Созданный объект</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:TFlex.DOCs.Model.Plugins.PluginInterfacesMap" -->
        <member name="M:TFlex.DOCs.Model.Plugins.PluginInterfacesMap.#ctor">
            <summary>
            Добавление переопределенных реализаций интерфейсов в список.
            Добавление происходит по правилу - для каждого типа интерфейса существует список контекстов, и их классов.
            Например:
            
            RegisterPluginType(						- переопределяем реализацию интерфейса открытия свойств объекта справочника в модальном режиме
            typeof(UI.IReferenceObjectDialogView),  - для типа UI.IReferenceObjectDialogView
            FileReference.Instance,					- для справочника "Файлы"
            FileTypeReference.Instance.FolderType,	- для класса объекта "Папка"
            AssemblyLoader.CommonUILibrary,			- находится в сборке CommonUI
            AssemblyLoader.UINamespace + "FolderObjectDialog" - название класса, описывающего интерфейс UI.IReferenceObjectDialogView
            )
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Plugins.PluginInterfacesMap.Map">
            <summary>
            Возвращает экземпляр класса для работы
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.ReferenceCatalog">
            <summary>
            Каталог справочников
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceCatalog.Root">
            <summary>
            Возвращает корневую директорию каталога справочников
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.Reload">
            <summary>
            Перезагружает каталог справочников
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.GetAllReferences">
            <summary>
            Возвращает список описаний всех справочников
            </summary>
            <returns>Список описаний справочников</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.FindReference(System.Int32)">
            <summary>
            Выполняет поиск описания справочника по его ID
            </summary>
            <param name="referenceId">ID справочника</param>
            <returns>Описание справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.FindReference(System.Guid)">
            <summary>
            Выполняет поиск описания справочника по его GUID
            </summary>
            <param name="referenceGuid">GUID справочника</param>
            <returns>Описание справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.FindReference(TFlex.DOCs.Model.Structure.SpecialReference)">
            <summary>
            Выполняет поиск описания специального справочника
            </summary>
            <param name="reference">Тип справочника</param>
            <returns>Описание справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.FindReference(System.String)">
            <summary>
            Выполняет поиск описания справочника
            </summary>
            <param name="referenceName">Название, Guid или XmlId справочника</param>
            <returns>Описание справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.IsLocked(System.Int32)">
            <summary>
            Возвращает значение, указывающее, является ли справочник с указанным ID заблокированным
            </summary>
            <param name="referenceId">ID справочника</param>
            <returns>Значение true, если справочник заблокирован; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.IsLocked(System.Guid)">
            <summary>
            Возвращает значение, указывающее, является ли справочник с указанным GUID заблокированным
            </summary>
            <param name="referenceGuid">GUID справочника</param>
            <returns>Значение true, если справочник заблокирован; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.IsLocked(TFlex.DOCs.Model.Structure.SpecialReference)">
            <summary>
            Возвращает значение, указывающее, является ли специальный справочник заблокированным
            </summary>
            <param name="reference">Тип справочника</param>
            <returns>Значение true, если справочник заблокирован; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.CreateReferenceBuilder(TFlex.DOCs.Model.ReferenceCatalogFolder)">
            <summary>
            Создает конструктор для создания справочника в заданной папке каталога справочников
            </summary>
            <param name="folder">Папка каталога справочников</param>
            <returns>Конструктор справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.CreateFolder(System.String,TFlex.DOCs.Model.ReferenceCatalogFolder)">
            <summary>
            Создает новую папку в каталоге справочников
            </summary>
            <param name="name">Имя папки</param>
            <param name="parent">Родительская папка</param>
            <returns>Созданная папка каталога справочников</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.RenameFolder(TFlex.DOCs.Model.ReferenceCatalogFolder,System.String)">
            <summary>
            Переименовывает папку каталога справочников
            </summary>
            <param name="folder">Папка для переименования</param>
            <param name="name">Новое имя папки</param>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.DeleteFolder(TFlex.DOCs.Model.ReferenceCatalogFolder)">
            <summary>
            Удаляет папку из каталога справочников
            </summary>
            <param name="folder">Папка для удаления</param>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.MoveFolder(TFlex.DOCs.Model.ReferenceCatalogFolder,TFlex.DOCs.Model.ReferenceCatalogFolder)">
            <summary>
            Перемещает папку в пределах каталога справочников
            </summary>
            <param name="folder">Папка для перемещения</param>
            <param name="newParent">Новая родительская папка</param>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.Find(System.Int32)">
            <summary>
            Выполняет поиск описания справочника по его ID
            </summary>
            <param name="referenceId">ID справочника</param>
            <returns>Описание справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.Find(System.Guid)">
            <summary>
            Выполняет поиск описания справочника по его GUID
            </summary>
            <param name="referenceGuid">GUID справочника</param>
            <returns>Описание справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.Find(TFlex.DOCs.Model.Structure.SpecialReference)">
            <summary>
            Выполняет поиск описания специального справочника
            </summary>
            <param name="reference">Тип справочника</param>
            <returns>Описание справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.Find(System.String)">
            <summary>
            Выполняет поиск описания справочника
            </summary>
            <param name="referenceName">Название, Guid или XmlId справочника</param>
            <returns>Описание справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.RegisterSpecialReference(System.Guid,TFlex.DOCs.Model.SpecialReferenceFactory)">
            <summary>
            Регистрирует в каталоге справочников специальный справочник для работы со справочными данными
            </summary>
            <param name="parameterGroupGuid">GUID справочника или списка объектов</param>
            <param name="referenceFactory">Интерфейс для создания объектов для работы со справочными данными</param>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.GetSystemEventHandlers(System.Guid)">
            <summary>
            Возвращает список системных обработчиков событий для группы параметров с указанным Guid
            </summary>
            <param name="parameterGroupGuid">Guid группы параметров</param>
            <returns>Список системных обработчиков события</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalog.RegisterSystemEventHandler(TFlex.DOCs.Model.References.Events.ISystemEventHandlerProvider)">
            <summary>
            Регистрирует указанный системный обработчик события
            </summary>
            <param name="handler">Системный обработчик события</param>
            <returns>Значение true, если обработчик успешно зарегистрирован; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.ReferenceInfo">
            <summary>
            Описание справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceInfo.Parent">
            <summary>
            Возвращает папку каталога справочников, в которой находится справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceInfo.Description">
            <summary>
            Возвращает группу параметров, описывающую структуру справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceInfo.DescriptionLoaded">
            <summary>
            Возвращает значение, указывающее, загружена ли группа параметров, описывающая структуру справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceInfo.RefreshDescription">
            <summary>
            Обновляет группу параметров справочника
            </summary>
            <returns>Группа параметров</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceInfo.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceInfo.CreateReference">
            <summary>
            Создает экземпляр справочника для работы с данными 
            </summary>
            <returns>Экземпляр справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceInfo.CreateReference(System.Boolean)">
            <summary>
            Создает экземпляр справочника для работы с данными
            </summary>
            <param name="prototypeMode">Значение true, если требуется создать экземпляр справочника для работы с прототипами; в противном случае - значение false</param>
            <returns>Экземпляр справочника</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceInfo.IsStatic">
            <summary>
            Возвращает значение, указывающее, является ли справочник статическим (возможно создание только одного экземпляра справочника)
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceInfo.RefreshStaticReference">
            <summary>
            Очищает статический справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceInfo.Id">
            <summary>
            Возвращает ID справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceInfo.Guid">
            <summary>
            Возвращает Guid справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceInfo.Name">
            <summary>
            Возвращает название справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceInfo.Icon">
            <summary>
            Возвращает иконку справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceInfo.Visibility">
            <summary>
            Возвращает видимость справочника в интерфейсе
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceInfo.HierarchyType">
            <summary>
            Возвращает тип иерархии объектов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceInfo.ActivityStatus">
            <summary>
            Возвращает статус активности справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceInfo.SupportsDesktop">
            <summary>
            Возвращает значение, указывающее, поддерживает ли справочник историю изменений
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceInfo.SupportsRecycleBin">
            <summary>
            Возвращает значение, указывающее, поддерживает ли справочник корзину
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceInfo.SupportsNomenclature">
            <summary>
            Возвращает значение, указывающее, поддерживает ли справочник работу с номенклатурой
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceInfo.HasHierarchy">
            <summary>
            Возвращает значение, указывающее, является ли справочник иерархическим
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceInfo.ToString">
            <summary>
            Возвращает строковое представление справочника
            </summary>
            <returns>Строковое представление справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceInfo.CompareTo(TFlex.DOCs.Model.ReferenceInfo)">
            <summary>
            Сравнивает текущий объект с другим объектом того же типа
            </summary>
            <param name="other">Объект для сравнения</param>
            <returns>Значение равное нулю - объекты равны; значение больше нуля - текущий объект больше объекта для сравнения; значение меньшее нуля - текущий объект меньше объекта для сравнения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceInfo.GetLicense">
            <summary>
            Возвращает функцию для проверки лицензии на редактирование объектов справочника
            </summary>
            <returns>Лицензия</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.AllChildObjectsPathItem">
            <summary>
            Элемент пути по структуре справочника, содержащий все дочерние объекты
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.AllChildObjectsPathItem.Id">
            <summary>
            Ключ
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.AllChildObjectsPathItem.DefaultName">
            <summary>
            Все дочерние объекты
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.AllChildObjectsPathItem.#ctor(TFlex.DOCs.Model.Search.Path.GroupPathItem)">
            <summary>
            Создает новый элемент пути
            </summary>
            <param name="parent">Родительский элемент пути</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.AllChildObjectsPathItem.Name">
            <summary>
            Возвращает название элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.AllChildObjectsPathItem.Type">
            <summary>
            Возвращает тип элемента
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.AllChildObjectsPathItem.Clone(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Создает копию элемента в указанном родительском объекте
            </summary>
            <param name="parent">Родительский объект создаваемой копии</param>
            <returns>Новый элемент</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.AllChildObjectsPathItem.SupportSearchType">
            <summary>
            Возвращает значение, указывающее, как можно использовать элемент в фильтре
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.AllChildObjectsPathItem.GetOperators">
            <summary>
            Возвращает список доступных операторов сравнения
            </summary>
            <returns>Список доступных операторов сравнения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.AllChildObjectsPathItem.AddToSearchField(TFlex.DOCs.Data.Search.SearchField)">
            <summary>
            Добавить изюминку в поле для поиска
            </summary>
            <param name="searchField">Искомое поле</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.AllChildObjectsPathItem.Serialize(TFlex.DOCs.Model.Configuration.ObjectSerializationMode)">
            <summary>
            Сериализовать элемент пути
            </summary>
            <param name="mode">Режим сериализации</param>
            <returns>Сериализованный элемент</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.AllChildObjectsPathItem.FindCopyInParent(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Отыскать элемент в пути
            </summary>
            <param name="parent">Родительский элемент</param>
            <returns>true - элемент найден</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.AllChildObjectsPathItem.IsOneToMany">
            <summary>
            Возвращает значение, указывающее, содержит ли элемент отношение 1:N
            </summary>
            <returns>Значение true, если в элементе содержится отношение 1:N; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.AllChildObjectsPathItem.GetValue(System.Int32,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ComplexHierarchyLink)">
            <summary>
            Получить требуемое значение
            </summary>
            <param name="index">Порядковый номер</param>
            <param name="object">Объект</param>
            <param name="link">Элемент подключения</param>
            <returns>Значение</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.AllChildObjectsPathItem.IsLoaded(System.Int32,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ComplexHierarchyLink)">
            <summary>
            Проверить, было ли загружено указанное значение
            </summary>
            <param name="index">Порядковый номер</param>
            <param name="object">Объект</param>
            <param name="link">Элемент подключения</param>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.AllChildObjectsPathItem.Match(System.Int32,TFlex.DOCs.Model.References.ReferenceObject,TFlex.DOCs.Model.References.ComplexHierarchyLink,TFlex.DOCs.Model.Search.ComparisonOperator,System.Object)">
            <summary>
            Выполнить сравнение
            </summary>
            <param name="index">Порядковый номер</param>
            <param name="object">Объект</param>
            <param name="link">Элемент подключения</param>
            <param name="operator">Оператор сравнения</param>
            <param name="value">Значение</param>
            <returns></returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.ChildObjectsPathItem">
            <summary>
            Элемент пути по структуре справочника, содержащий дочерние объекты
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ChildObjectsPathItem.#ctor(TFlex.DOCs.Model.Search.Path.GroupPathItem)">
            <summary>
            Создает новый элемент пути
            </summary>
            <param name="parent">Родительский элемент пути</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.ChildObjectsPathItem.Name">
            <summary>
            Возвращает название элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.ChildObjectsPathItem.Type">
            <summary>
            Возвращает тип элемента
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ChildObjectsPathItem.Clone(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Создает копию элемента в указанном родительском объекте
            </summary>
            <param name="parent">Родительский объект создаваемой копии</param>
            <returns>Новый элемент</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.ChildObjectsPathItem.SupportSearchType">
            <summary>
            Возвращает значение, указывающее, как можно использовать элемент в фильтре
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ChildObjectsPathItem.GetOperators">
            <summary>
            Возвращает список доступных операторов сравнения
            </summary>
            <returns>Список доступных операторов сравнения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ChildObjectsPathItem.IsOneToMany">
            <summary>
            Возвращает значение, указывающее, содержит ли элемент отношение 1:N
            </summary>
            <returns>Значение true, если в элементе содержится отношение 1:N; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.FilePreviewImagePathItem">
            <summary>
            Элемент пути по структуре справочника "Файлы", содержащий изображения предварительного просмотра страниц файла 
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.FilePreviewImagePathItem.#ctor(TFlex.DOCs.Model.Search.Path.GroupPathItem,System.Int32)">
            <summary>
            Создает новый элемент пути
            </summary>
            <param name="parent">Родительский элемент пути</param>
            <param name="pageIndex">Номер страницы</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.FilePreviewImagePathItem.Name">
            <summary>
            Возвращает название элемента 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.FilePreviewImagePathItem.Type">
            <summary>
            Возвращает тип элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.FilePreviewImagePathItem.Icon">
            <summary>
            Возвращает иконку элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.FilePreviewImagePathItem.PageIndex">
            <summary>
            Возвращает или задаёт номер страницы изображения предварительного просмотра файла 
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.GroupPathItem">
            <summary>
            Элемент пути по структуре справочника, содержащий группу параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.GroupPathItem.#ctor(TFlex.DOCs.Model.Search.Path.PathItem,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает новый элемент пути
            </summary>
            <param name="parent">Родительский элемент пути</param>
            <param name="group">Группа параметров</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.GroupPathItem.#ctor(TFlex.DOCs.Model.Search.Path.ReferencePath,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает новый корневой элемент пути
            </summary>
            <param name="path">Путь</param>
            <param name="group">Группа параметров</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.GroupPathItem.Group">
            <summary>
            Возвращает группу параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.GroupPathItem.Path">
            <summary>
            Возвращает путь, к которому относится элемент
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.GroupPathItem.Name">
            <summary>
            Возвращает название элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.GroupPathItem.Type">
            <summary>
            Возвращает тип элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.GroupPathItem.Icon">
            <summary>
            Возвращает иконку элемента
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.GroupPathItem.GetItems">
            <summary>
            Возвращает список дочерних элементов
            </summary>
            <returns>Список дочерних элементов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.GroupPathItem.GetOperators">
            <summary>
            Возвращает список доступных операторов сравнения
            </summary>
            <returns>Список доступных операторов сравнения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.GroupPathItem.GetItems(TFlex.DOCs.Model.Search.Path.GroupPathItem,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Возвращает список дочерних элементов
            </summary>
            <param name="parent">Родительский элемент</param>
            <param name="group">Группа параметров</param>
            <returns>Список дочерних элементов</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.GroupPathItem.SupportSearchType">
            <summary>
            Возвращает значение, указывающее, как можно использовать элемент в фильтре
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.GroupPathItem.Clone(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Создает копию элемента в указанном родительском объекте
            </summary>
            <param name="parent">Родительский объект создаваемой копии</param>
            <returns>Новый элемент</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.GroupPathItem.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если объекты равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.GroupPathItem.GetHashCode">
            <summary>
            Возвращает хэш-код объекта
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.GroupPathItem.IsOneToMany">
            <summary>
            Возвращает значение, указывающее, содержит ли элемент отношение 1:N
            </summary>
            <returns>Значение true, если в элементе содержится отношение 1:N; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.HierarchyGroupPathItem">
            <summary>
            Элемент пути по структуре справочника, содержащий группу параметров подключения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.HierarchyGroupPathItem.#ctor(TFlex.DOCs.Model.Search.Path.GroupPathItem,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает новый элемент пути
            </summary>
            <param name="parent">Родительский элемент пути</param>
            <param name="hierarchyGroup">Группа параметров</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.HierarchyGroupPathItem.Name">
            <summary>
            Возвращает название элемента
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.HierarchyGroupPathItem.Clone(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Создает копию элемента в указанном родительском объекте
            </summary>
            <param name="parent">Родительский объект создаваемой копии</param>
            <returns>Новый элемент</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.HierarchyGroupPathItem.SupportSearchType">
            <summary>
            Возвращает значение, указывающее, как можно использовать элемент в фильтре
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.HierarchyGroupPathItem.GetOperators">
            <summary>
            Возвращает список доступных операторов сравнения
            </summary>
            <returns>Список доступных операторов сравнения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.HierarchyGroupPathItem.IsOneToMany">
            <summary>
            Возвращает значение, указывающее, содержит ли элемент отношение 1:N
            </summary>
            <returns>Значение true, если в элементе содержится отношение 1:N; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.LinkedObjectPathItem">
            <summary>
            Элемент пути по структуре справочника, содержащий связанный объект объекта номенклатуры
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.LinkedObjectPathItem.#ctor(TFlex.DOCs.Model.Search.Path.GroupPathItem)">
            <summary>
            Создает новый элемент пути
            </summary>
            <param name="parent">Родительский элемент пути</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.LinkedObjectPathItem.Icon">
            <summary>
            Возвращает иконку элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.LinkedObjectPathItem.Name">
            <summary>
            Возвращает название элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.LinkedObjectPathItem.Type">
            <summary>
            Возвращает тип элемента
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.LinkedObjectPathItem.GetItems">
            <summary>
            Возвращает список дочерних элементов
            </summary>
            <returns>Список дочерних элементов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.LinkedObjectPathItem.GetOperators">
            <summary>
            Возвращает список доступных операторов сравнения
            </summary>
            <returns>Список доступных операторов сравнения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.LinkedObjectPathItem.Clone(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Создает копию элемента в указанном родительском объекте
            </summary>
            <param name="parent">Родительский объект создаваемой копии</param>
            <returns>Новый элемент</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.LinkedObjectPathItem.SupportSearchType">
            <summary>
            Возвращает значение, указывающее, как можно использовать элемент в фильтре
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.LinkPathItem">
            <summary>
            Элемент пути по структуре справочника, содержащий связь
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.LinkPathItem.#ctor(TFlex.DOCs.Model.Search.Path.GroupPathItem,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает новый элемент пути
            </summary>
            <param name="parent">Родительский элемент пути</param>
            <param name="link">Группа параметров</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.LinkPathItem.#ctor(TFlex.DOCs.Model.Search.Path.ReferencePath,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает новый корневой элемент пути
            </summary>
            <param name="path">Путь</param>
            <param name="group">Группа параметров</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.LinkPathItem.GetItems">
            <summary>
            Возвращает список дочерних элементов
            </summary>
            <returns>Список дочерних элементов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.LinkPathItem.GetOperators">
            <summary>
            Возвращает список доступных операторов сравнения
            </summary>
            <returns>Список доступных операторов сравнения</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.LinkPathItem.Type">
            <summary>
            Возвращает тип элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.LinkPathItem.UseLinkSeparator">
            <summary>
            Возвращает значение, указывающее, нужно ли c этим элементом использовать ссылочный разделитель (->)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.LinkPathItem.SupportSearchType">
            <summary>
            Возвращает значение, указывающее, как можно использовать элемент в фильтре
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.LinkPathItem.Swapped">
            <summary>
            Возвращает значение, указывающее, является ли связь обратной двунаправленной связью
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.LinkPathItem.Clone(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Создает копию элемента в указанном родительском объекте
            </summary>
            <param name="parent">Родительский объект создаваемой копии</param>
            <returns>Новый элемент</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.LinkPathItem.CopyTo(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Копирует свойства текущего элемента в указанный элемент
            </summary>
            <param name="item">Элемент для копирования свойств</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.LinkPathItem.IsOneToMany">
            <summary>
            Возвращает значение, указывающее, содержит ли элемент отношение 1:N
            </summary>
            <returns>Значение true, если в элементе содержится отношение 1:N; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.LinkPathItem.Name">
            <summary>
            Возвращает название элемента
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.MasterObjectPathItem">
            <summary>
            Элемент пути по структуре справочника, содержащий владельца объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.MasterObjectPathItem.#ctor(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Создает новый элемент пути
            </summary>
            <param name="parent">Родительский элемент пути</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.MasterObjectPathItem.Name">
            <summary>
            Возвращает название элемента
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.MasterObjectPathItem.GetOperators">
            <summary>
            Возвращает список доступных операторов сравнения
            </summary>
            <returns>Список доступных операторов сравнения</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.MasterObjectPathItem.Type">
            <summary>
            Возвращает тип элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.MasterObjectPathItem.SupportSearchType">
            <summary>
            Возвращает значение, указывающее, как можно использовать элемент в фильтре
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.MasterObjectPathItem.Clone(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Создает копию элемента в указанном родительском объекте
            </summary>
            <param name="parent">Родительский объект создаваемой копии</param>
            <returns>Новый элемент</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.MasterObjectPathItem.IsOneToMany">
            <summary>
            Возвращает значение, указывающее, содержит ли элемент отношение 1:N
            </summary>
            <returns>Значение true, если в элементе содержится отношение 1:N; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.NomenclatureObjectPathItem">
            <summary>
            Элемент пути по структуре справочника, содержащий связь с объектом номенклатуры
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.NomenclatureObjectPathItem.#ctor(TFlex.DOCs.Model.Search.Path.GroupPathItem)">
            <summary>
            Создает новый элемент пути
            </summary>
            <param name="parent">Родительский элемент пути</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.NomenclatureObjectPathItem.Name">
            <summary>
            Возвращает название элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.NomenclatureObjectPathItem.Type">
            <summary>
            Возвращает тип элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.NomenclatureObjectPathItem.UseLinkSeparator">
            <summary>
            Возвращает значение, указывающее, нужно ли c этим элементом использовать ссылочный разделитель (->)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.NomenclatureObjectPathItem.SupportSearchType">
            <summary>
            Возвращает значение, указывающее, как можно использовать элемент в фильтре
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.NomenclatureObjectPathItem.GetOperators">
            <summary>
            Возвращает список доступных операторов сравнения
            </summary>
            <returns>Список доступных операторов сравнения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.NomenclatureObjectPathItem.Clone(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Создает копию элемента в указанном родительском объекте
            </summary>
            <param name="parent">Родительский объект создаваемой копии</param>
            <returns>Новый элемент</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.ParameterPathItem">
            <summary>
            Элемент пути по структуре справочника, содержащий параметр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.ParameterPathItem.Parameter">
            <summary>
            Возвращает параметр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.ParameterPathItem.Name">
            <summary>
            Возвращает название элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.ParameterPathItem.Type">
            <summary>
            Возвращает тип элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.ParameterPathItem.Icon">
            <summary>
            Возвращает иконку элемента
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ParameterPathItem.GetItems">
            <summary>
            Возвращает список дочерних элементов
            </summary>
            <returns>Список дочерних элементов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ParameterPathItem.GetOperators">
            <summary>
            Возвращает список доступных операторов сравнения
            </summary>
            <returns>Список доступных операторов сравнения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ParameterPathItem.Clone(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Создает копию элемента в указанном родительском объекте
            </summary>
            <param name="parent">Родительский объект создаваемой копии</param>
            <returns>Новый элемент</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ParameterPathItem.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если объекты равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ParameterPathItem.GetHashCode">
            <summary>
            Возвращает хэш-код объекта
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.ReferencePath">
            <summary>
            Путь по структуре справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.#ctor(TFlex.DOCs.Model.ReferenceInfo)">
            <summary>
            Создает новый экземпляр класса для справочника
            </summary>
            <param name="reference">Описание справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает новый экземпляр класса для группы параметров
            </summary>
            <param name="masterGroup">Группа параметров</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.#ctor(TFlex.DOCs.Model.Search.Path.ReferencePath)">
            <summary>
            Создает новый экземпляр класса на основании другого экземпляра
            </summary>
            <param name="source">Объект ReferencePath, на основании которого инициализируется новый экземпляр класса</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.#ctor">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.CreateRootPathItem(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает корневой элемент пути
            </summary>
            <param name="group">Группа параметров</param>
            <returns>Элемент пути для группы параметров</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.ReferencePath.MasterGroup">
            <summary>
            Возвращает корневую группу параметров пути
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.ReferencePath.CurrentItem">
            <summary>
            Возвращает текущий элемент пути
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.AddGroup(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Добавляет к пути группу параметров
            </summary>
            <param name="group">Группа параметров</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.AddGroup(TFlex.DOCs.Model.Structure.ParameterGroup,System.Boolean)">
            <summary>
            Добавляет к пути группу параметров
            </summary>
            <param name="group">Группа параметров</param>
            <param name="throwOnError">Значение true, если требуется генерация исключения в случае неудачи; в противном случае - значение false</param>
            <returns>Значение true, если добавление произошло успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.AddSwappedLink(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Добавляет к пути обратную двунаправленную связь
            </summary>
            <param name="linkGroup"></param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.AddSwappedLink(TFlex.DOCs.Model.Structure.ParameterGroup,System.Boolean)">
            <summary>
            Добавляет к пути обратную двунаправленную связь
            </summary>
            <param name="linkGroup">Группа параметров, описывающая двунаправленную связь</param>
            <param name="throwOnError">Значение true, если требуется генерация исключения в случае неудачи; в противном случае - значение false</param>
            <returns>Значение true, если добавление произошло успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.AddChildObjects">
            <summary>
            Добавляет к пути дочерние объекты
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.AddChildObjects(System.Boolean)">
            <summary>
            Добавляет к пути дочерние объекты
            </summary>
            <param name="throwOnError">Значение true, если требуется генерация исключения в случае неудачи; в противном случае - значение false</param>
            <returns>Значение true, если добавление произошло успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.AddAllChildObjects">
            <summary>
            Добавляет к пути все дочерние объекты
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.AddAllChildObjects(System.Boolean)">
            <summary>
            Добавляет к пути все дочерние объекты
            </summary>
            <param name="throwOnError">Значение true, если требуется генерация исключения в случае неудачи; в противном случае - значение false</param>
            <returns>Значение true, если добавление произошло успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.AddParameter(TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Добавляет к пути параметр
            </summary>
            <param name="parameter">Описание параметра</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.AddParameter(TFlex.DOCs.Model.Structure.ParameterInfo,System.Boolean)">
            <summary>
            Добавляет к пути параметр
            </summary>
            <param name="parameter">Описание параметра</param>
            <param name="throwOnError">Значение true, если требуется генерация исключения в случае неудачи; в противном случае - значение false</param>
            <returns>Значение true, если добавление произошло успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.AddSignature">
            <summary>
            Добавляет к пути подпись
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.AddSignature(System.Boolean)">
            <summary>
            Добавляет к пути подпись
            </summary>
            <param name="throwOnError">Значение true, если требуется генерация исключения в случае неудачи; в противном случае - значение false</param>
            <returns>Значение true, если добавление произошло успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.AddSignature(TFlex.DOCs.Model.Signatures.SignatureType,System.Boolean)">
            <summary>
            Добавляет к пути тип подписи
            </summary>
            <param name="type">Тип подписи</param>
            <param name="throwOnError">Значение true, если требуется генерация исключения в случае неудачи; в противном случае - значение false</param>
            <returns>Значение true, если добавление произошло успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.AddSignatureParameter(TFlex.DOCs.Model.Signatures.SignatureParameter,System.Boolean)">
            <summary>
            Добавляет к пути параметр подписи
            </summary>
            <param name="parameter">Параметр подписи</param>
            <param name="throwOnError">Значение true, если требуется генерация исключения в случае неудачи; в противном случае - значение false</param>
            <returns>Значение true, если добавление произошло успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.AddFilePreviewImage(System.Int32,System.Boolean)">
            <summary>
            Добавляет к пути изображение файла
            </summary>
            <param name="pageIndex">Номер страницы</param>
            <param name="throwOnError">Значение true, если требуется генерация исключения в случае неудачи; в противном случае - значение false</param>
            <returns>Значение true, если добавление произошло успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.AddNomenclatureObject(System.Boolean)">
            <summary>
            Добавляет к пути связь с объектом номенклатуры
            </summary>
            <param name="throwOnError">Значение true, если требуется генерация исключения в случае неудачи; в противном случае - значение false</param>
            <returns>Значение true, если добавление произошло успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.AddLinkedObject(System.Boolean)">
            <summary>
            Добавляет к пути связанный объект объекта номенклатуры
            </summary>
            <param name="throwOnError"></param>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.AddMasterObject(System.Boolean)">
            <summary>
            Добавляет к пути владельца объекта 
            </summary>
            <param name="throwOnError">Значение true, если требуется генерация исключения в случае неудачи; в противном случае - значение false</param>
            <returns>Значение true, если добавление произошло успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.RemoveLast">
            <summary>
            Удаляет последний элемент пути
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.SetPathToItem(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Задает путь к выбранному элементу
            </summary>
            <param name="item">Элемент пути</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.GetSubpath(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Получает отрезок пути с корневой группой параметров group
            </summary>
            <param name="group">Группа параметров</param>
            <returns>Путь</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.GetRelativePath(TFlex.DOCs.Model.Search.Path.ReferencePath,System.Boolean)">
            <summary>
            Получает отрезок пути относительно initialPath
            </summary>
            <returns>Относительный путь</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.IsOneToMany">
            <summary>
            Возвращает значение, указывающее, является ли путь путем ко многим объектам
            </summary>
            <returns>Значение true, если путь является путем ко многим объектам; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.ToString">
            <summary>
            Возвращает строковое представление пути
            </summary>
            <returns>Строковое представление</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.Serialize(TFlex.DOCs.Model.Configuration.ObjectSerializationMode,System.Boolean)">
            <summary>
            Сериализует путь в строковое представление
            </summary>
            <param name="mode">Режим сериализации элементов</param>
            <param name="includeRootItem">Значение true, если требуется включить корневой элемент; в противном случае - значение false</param>
            <returns>Строковое представление</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.ReferencePath.Items">
            <summary>
            Возвращает список элементов пути
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.Equals(System.Object)">
            <summary>
            Определяет, равны ли значения этого экземпляра и указанного объекта 
            </summary>
            <param name="obj">Объект для сравнения с данным</param>
            <returns>Значение true, если объекты равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.GetHashCode">
            <summary>
            Возвращает хэш-код для текущего объекта
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.IndexOf(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Возвращает индекс указанного элемента в списке элементов пути
            </summary>
            <param name="item">Элемент пути</param>
            <returns>Индекс элемента</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.ReferencePath.Item(System.Int32)">
            <summary>
            Возвращает элемент пути по его индексу
            </summary>
            <param name="index">Индекс элемента в списке элементов</param>
            <returns>Элемент пути</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.Add(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Добавляет к пути элемент
            </summary>
            <param name="item">Элемент пути</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.Clear">
            <summary>
            Очищает путь
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.Contains(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Возвращает значение, указывающе, содержится ли элемент в списке элементов пути
            </summary>
            <param name="item">Элемент пути</param>
            <returns>Значение true в случае, если указанный элемент содержится в списке элементов пути; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.CopyTo(TFlex.DOCs.Model.Search.Path.PathItem[],System.Int32)">
            <summary>
            Копирует спиок элементов пути в массив, начиная с указанного индекса массива.
            </summary>
            <param name="array">Массив для копирования элементов пути</param>
            <param name="arrayIndex">Отсчитываемый от нуля индекс массива array, с которого начинается копирование</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.ReferencePath.Count">
            <summary>
            Возвращает количество элементов в списке элементов пути
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.GetEnumerator">
            <summary>
            Возвращает перечислитель элементов пути 
            </summary>
            <returns>Перечислитель элементов пути</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.Clone">
            <summary>
            Создает новый путь, который является копией текущего
            </summary>
            <returns>Новый путь, являющийся копией текущего</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.Parse(System.String)">
            <summary>
            Преобразовывает заданное строковое представление пути в эквивалентный ему объект ReferencePath
            </summary>
            <param name="str">Строковое представление пути</param>
            <returns>Объект, эквивалентный пути, содержащемуся в параметре str</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.Parse(System.String,TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Преобразовывает заданное строковое представление пути в эквивалентный ему объект ReferencePath
            </summary>
            <param name="str">Строковое представление пути</param>
            <param name="connection">Соединение с сервером</param>
            <returns>Объект, эквивалентный пути, содержащемуся в параметре str</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.TryParse(System.String,TFlex.DOCs.Model.Search.Path.ReferencePath@)">
            <summary>
            Преобразовывает заданное строковое представление пути в эквивалентный ему объект ReferencePath
            </summary>
            <param name="str">Строковое представление пути</param>
            <param name="path">Объект ReferencePath для записи полученного объекта</param>
            <returns>Значение true в случае, если преобразование прошло успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.TryParse(System.String,TFlex.DOCs.Model.ServerConnection,TFlex.DOCs.Model.Search.Path.ReferencePath@)">
            <summary>
            Преобразовывает заданное строковое представление пути в эквивалентный ему объект ReferencePath
            </summary>
            <param name="str">Строковое представление пути</param>
            <param name="connection">Соединение с сервером</param>
            <param name="path">Объект ReferencePath для записи полученного объекта</param>
            <returns>Значение true в случае, если преобразование прошло успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.Parse(System.String,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Преобразовывает заданное строковое представление пути в эквивалентный ему объект ReferencePath
            </summary>
            <param name="str">Строковое представление пути</param>
            <param name="masterGroup">Корневая группа пути</param>
            <returns>Объект, эквивалентный пути, содержащемуся в параметре str</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePath.TryParse(System.String,TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Model.Search.Path.ReferencePath@)">
            <summary>
            Преобразовывает заданное строковое представление пути в эквивалентный ему объект ReferencePath
            </summary>
            <param name="str">Строковое представление пути</param>
            <param name="masterGroup">Корневая группа пути</param>
            <param name="path">Объект ReferencePath для записи полученного объекта</param>
            <returns>Значение true в случае, если преобразование прошло успешно; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.PathItem">
            <summary>
            Элемент пути по структуре справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.PathItem.#ctor(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Создает новый элемент пути
            </summary>
            <param name="parent">Родительский элемент пути</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.PathItem.Parent">
            <summary>
            Возвращает родительский элемент
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.PathItem.Items">
            <summary>
            Возвращает коллекцию дочерних элементов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.PathItem.AddItems(System.Collections.Generic.List{TFlex.DOCs.Model.Search.Path.PathItem})">
            <summary>
            Добавляет элементы в коллекцию дочерних элементов
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.PathItem.ReloadItems">
            <summary>
            Обнуляет коллекцию дочерних элементов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.PathItem.Operators">
            <summary>
            Возвращает возможные операторы сравнения для элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.PathItem.Path">
            <summary>
            Возвращает путь, к которому относится данный элемент
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.PathItem.Name">
            <summary>
            Возвращает название элемента 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.PathItem.Type">
            <summary>
            Возвращает тип элемента
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.PathItem.IsOneToMany">
            <summary>
            Возвращает значение, указывающее, содержит ли элемент отношение 1:N
            </summary>
            <returns>Значение true, если в элементе содержится отношение 1:N; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.PathItem.ToString">
            <summary>
            Возвращает строковое представление элемента
            </summary>
            <returns>Строковое представление элемента</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.PathItem.Icon">
            <summary>
            Возвращает иконку элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.PathItem.SupportsSearch">
            <summary>
            Возвращает значение, указывающее, возможно ли использование элемента в фильтре
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.PathItem.SupportSearchType">
            <summary>
            Возвращает значение, указывающее, как можно использовать элемент в фильтре
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.PathItem.GetItems">
            <summary>
            Возвращает список дочерних элементов
            </summary>
            <returns>Список дочерних элементов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.PathItem.GetOperators">
            <summary>
            Возвращает список доступных операторов сравнения
            </summary>
            <returns>Список доступных операторов сравнения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.PathItem.Clone(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Создает копию элемента в указанном родительском объекте
            </summary>
            <param name="parent">Родительский объект создаваемой копии</param>
            <returns>Новый элемент</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.PathItem.CopyTo(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Копирует свойства текущего элемента в указанный элемент
            </summary>
            <param name="item">Элемент для копирования свойств</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.PathItem.UseLinkSeparator">
            <summary>
            Возвращает значение, указывающее, нужно ли c этим элементом использовать ссылочный разделитель (->)
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.SupportSearchTypes">
            <summary>
            Способ использования элемента в фильтре
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.SupportSearchTypes.Supported">
            <summary>
            Полная поддержка поиска
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.SupportSearchTypes.SupportedByChildren">
            <summary>
            Поиск поддерживается только дочерними элементами, а самим элементом не поддерживается
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.SupportSearchTypes.NotSupported">
            <summary>
            Полностью не поддерживается
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.PathItemType">
            <summary>
            Тип элемента пути по структуре справочника
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.PathItemType.Group">
            <summary>
            Группа параметров
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.PathItemType.Link">
            <summary>
            Связь
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.PathItemType.Parameter">
            <summary>
            Параметр
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.PathItemType.SystemParameters">
            <summary>
            Системные параметры
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.PathItemType.ChildObjects">
            <summary>
            Дочерние объекты
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.PathItemType.Signature">
            <summary>
            Подпись
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.PathItemType.SignatureType">
            <summary>
            Тип подписи
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.PathItemType.SignatureParameter">
            <summary>
            Параметр подписи
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.PathItemType.NomenclatureObject">
            <summary>
            Объект номенклатуры
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.PathItemType.LinkedObject">
            <summary>
            Связанный объект объекта номенклатуры
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.PathItemType.MasterObject">
            <summary>
            Владелец
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.PathItemType.ParentObject">
            <summary>
            Родительский объект
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.PathItemType.RootObject">
            <summary>
            Корневой объект
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.PathItemType.DescendantObjects">
            <summary>
            Все дочерние объекты
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.PathItemType.FilePreviewImage">
            <summary>
            Изображение файла
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.PathItemType.AllChildObjects">
            <summary>
            Все дочерние объекты
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.Path.PathItemType.SignatureTypes">
            <summary>
            Типы подписи
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.ReferencePathCollection">
            <summary>
            Коллекция путей по структуре справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePathCollection.#ctor">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePathCollection.#ctor(TFlex.DOCs.Model.ReferenceInfo)">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="mainReference">Описание справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePathCollection.#ctor(TFlex.DOCs.Model.ReferenceInfo,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Search.Path.ReferencePath})">
            <summary>
            Создает новый экземпляр класса
            </summary>
            <param name="mainReference">Описание справочника</param>
            <param name="parameters">Коллекция путей</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.ReferencePathCollection.MainReference">
            <summary>
            Возвращает/задает описание справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePathCollection.AddRange(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Search.Path.ReferencePath})">
            <summary>
            Добавляет указанную коллекцию путей в текущую коллекцию
            </summary>
            <param name="items">Коллекция путей для добавления</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePathCollection.IndexOf(TFlex.DOCs.Model.Search.Path.ReferencePath)">
            <summary>
            Возвращает индекс указанного пути в коллекции
            </summary>
            <param name="item">Путь</param>
            <returns>Индекс пути</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePathCollection.Insert(System.Int32,TFlex.DOCs.Model.Search.Path.ReferencePath)">
            <summary>
            Добавляет путь в коллекцию по указанному индексу
            </summary>
            <param name="index">Индекс для добавления нового пути</param>
            <param name="item">Путь, который нужно добавить</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePathCollection.RemoveAt(System.Int32)">
            <summary>
            Удаляет из коллекции путь, находящийся по указанному индексу
            </summary>
            <param name="index">Индекс в коллекции</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.ReferencePathCollection.Item(System.Int32)">
            <summary>
            Возвращает путь, находящийся по указанному индексу
            </summary>
            <param name="index">Индекс пути в коллекции</param>
            <returns>Путь</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePathCollection.Add(TFlex.DOCs.Model.Search.Path.ReferencePath)">
            <summary>
            Добавляет путь в коллекцию
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePathCollection.Clear">
            <summary>
            Очищает коллекцию
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePathCollection.Contains(TFlex.DOCs.Model.Search.Path.ReferencePath)">
            <summary>
            Возвращает значение, указывающее, содержится ли в коллекции указанный путь
            </summary>
            <param name="item">Путь для поиска в коллекции</param>
            <returns>Значение true, если путь содержится в коллекции; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePathCollection.CopyTo(TFlex.DOCs.Model.Search.Path.ReferencePath[],System.Int32)">
            <summary>
            Копирует коллекцию путей в массив, начиная с указанного индекса массива.
            </summary>
            <param name="array">Массив для копирования путей</param>
            <param name="arrayIndex">Отсчитываемый от нуля индекс массива array, с которого начинается копирование</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.ReferencePathCollection.Count">
            <summary>
            Возвращает количество путей в коллекции
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.ReferencePathCollection.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли коллекция доступной только для чтения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePathCollection.Remove(TFlex.DOCs.Model.Search.Path.ReferencePath)">
            <summary>
            Удаляет путь из коллекции
            </summary>
            <param name="item">Путь для удаления</param>
            <returns>Значение true, если путь успешно удален; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePathCollection.GetEnumerator">
            <summary>
            Возвращает перечислитель путей
            </summary>
            <returns>Перечислитель путей</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.ReferencePathCollection.Clone">
            <summary>
            Создает новую коллекцию путей, которая является копией текущей
            </summary>
            <returns>Новая коллекция путей, являющаяся копией текущей</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.SignatureParameterItem">
            <summary>
            Элемент пути по структуре справочника, содержащий параметр подписи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignatureParameterItem.#ctor(TFlex.DOCs.Model.Search.Path.SignatureTypeItem,TFlex.DOCs.Model.Signatures.SignatureParameter,System.Int32)">
            <summary>
            Создает новый элемент пути
            </summary>
            <param name="parent">Тип подписи</param>
            <param name="parameter">Параметр подписи</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignatureParameterItem.#ctor(TFlex.DOCs.Model.Search.Path.SignaturePathItem,TFlex.DOCs.Model.Signatures.SignatureParameter,System.Int32)">
            <summary>
            Создает новый элемент пути
            </summary>
            <param name="parent">Подписи</param>
            <param name="parameter">Параметр подписи</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SignatureParameterItem.Icon">
            <summary>
            Возвращает иконку элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SignatureParameterItem.Name">
            <summary>
            Возвращает название элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SignatureParameterItem.Type">
            <summary>
            Возвращает тип элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SignatureParameterItem.Parameter">
            <summary>
            Возвращает параметр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SignatureParameterItem.SignatureIndex">
            <summary>
            Возвращает номер подписи, для которой надо вернуть значение
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignatureParameterItem.GetItems">
            <summary>
            Возвращает список дочерних элементов
            </summary>
            <returns>Список дочерних элементов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignatureParameterItem.GetOperators">
            <summary>
            Возвращает список доступных операторов сравнения
            </summary>
            <returns>Список доступных операторов сравнения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignatureParameterItem.Clone(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Создает копию элемента в указанном родительском объекте
            </summary>
            <param name="parent">Родительский объект создаваемой копии</param>
            <returns>Новый элемент</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.SignaturePathItem">
            <summary>
            Элемент пути по структуре справочника, содержащий подпись
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignaturePathItem.#ctor(TFlex.DOCs.Model.Search.Path.GroupPathItem)">
            <summary>
            Создает новый элемент пути
            </summary>
            <param name="parent">Родительский элемент пути</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SignaturePathItem.Name">
            <summary>
            Возвращает название элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SignaturePathItem.Type">
            <summary>
            Возвращает тип элемента
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignaturePathItem.GetItems">
            <summary>
            Возвращает список дочерних элементов
            </summary>
            <returns>Список дочерних элементов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignaturePathItem.GetOperators">
            <summary>
            Возвращает список доступных операторов сравнения
            </summary>
            <returns>Список доступных операторов сравнения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignaturePathItem.Clone(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Создает копию элемента в указанном родительском объекте
            </summary>
            <param name="parent">Родительский объект создаваемой копии</param>
            <returns>Новый элемент</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignaturePathItem.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если объекты равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignaturePathItem.GetHashCode">
            <summary>
            Возвращает хэш-код объекта
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.SignatureTypeItem">
            <summary>
            Элемент пути по структуре справочника, содержащий тип подписи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignatureTypeItem.#ctor(TFlex.DOCs.Model.Search.Path.SignatureTypesItem,TFlex.DOCs.Model.Signatures.SignatureType)">
            <summary>
            Создает новый элемент пути
            </summary>
            <param name="parent">Подпись</param>
            <param name="type">Тип подписи</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SignatureTypeItem.Name">
            <summary>
            Возвращает название элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SignatureTypeItem.SupportSearchType">
            <summary>
            Возвращает значение, указывающее, как можно использовать элемент в фильтре
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SignatureTypeItem.Type">
            <summary>
            Возвращает тип элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SignatureTypeItem.Icon">
            <summary>
            Возвращает иконку элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SignatureTypeItem.SignatureType">
            <summary>
            Возвращает тип подписи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignatureTypeItem.GetItems">
            <summary>
            Возвращает список дочерних элементов
            </summary>
            <returns>Список дочерних элементов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignatureTypeItem.GetOperators">
            <summary>
            Возвращает список доступных операторов сравнения
            </summary>
            <returns>Список доступных операторов сравнения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignatureTypeItem.Clone(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Создает копию элемента в указанном родительском объекте
            </summary>
            <param name="parent">Родительский объект создаваемой копии</param>
            <returns>Новый элемент</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.SignatureTypesItem">
            <summary>
            Элемент пути по структуре справочника, содержащий типы подписей
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SignatureTypesItem.Name">
            <summary>
            Возвращает название элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SignatureTypesItem.Type">
            <summary>
            Возвращает тип элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SignatureTypesItem.Icon">
            <summary>
            Возвращает иконку элемента
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignatureTypesItem.GetItems">
            <summary>
            Возвращает список дочерних элементов
            </summary>
            <returns>Список дочерних элементов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignatureTypesItem.GetOperators">
            <summary>
            Возвращает список доступных операторов сравнения
            </summary>
            <returns>Список доступных операторов сравнения</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SignatureTypesItem.SupportSearchType">
            <summary>
            Возвращает значение, указывающее, возможно ли использование элемента в фильтре
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignatureTypesItem.Clone(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Создает копию элемента в указанном родительском объекте
            </summary>
            <param name="parent">Родительский объект создаваемой копии</param>
            <returns>Новый элемент</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignatureTypesItem.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если объекты равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SignatureTypesItem.GetHashCode">
            <summary>
            Возвращает хэш-код объекта
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Path.SystemParametersPathItem">
            <summary>
            Элемент пути по структуре справочника, содержащий системные параметры
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SystemParametersPathItem.Name">
            <summary>
            Возвращает название элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SystemParametersPathItem.Type">
            <summary>
            Возвращает тип элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SystemParametersPathItem.Group">
            <summary>
            Возвращает группу параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SystemParametersPathItem.GetItems">
            <summary>
            Возвращает список дочерних элементов
            </summary>
            <returns>Список дочерних элементов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SystemParametersPathItem.GetOperators">
            <summary>
            Возвращает список доступных операторов сравнения
            </summary>
            <returns>Список доступных операторов сравнения</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Path.SystemParametersPathItem.SupportSearchType">
            <summary>
            Возвращает значение, указывающее, возможно ли использование элемента в фильтре
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SystemParametersPathItem.Clone(TFlex.DOCs.Model.Search.Path.PathItem)">
            <summary>
            Создает копию элемента в указанном родительском объекте
            </summary>
            <param name="parent">Родительский объект создаваемой копии</param>
            <returns>Новый элемент</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SystemParametersPathItem.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если объекты равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Path.SystemParametersPathItem.GetHashCode">
            <summary>
            Возвращает хэш-код объекта
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.ComparisonOperator">
            <summary>
            Оператор сравнения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.Equal">
            <summary>
            Возвращает оператор "="
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.NotEqual">
            <summary>
            Возвращает оператор "!="
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsOneOf">
            <summary>
            Возвращает оператор "Входит в список"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsNotOneOf">
            <summary>
            Возвращает оператор "Не входит в список"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.GreaterThan">
            <summary>
            Возвращает оператор ">"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.LessThan">
            <summary>
            Возвращает оператор "&lt;"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.GreaterThanOrEqual">
            <summary>
            Возвращает оператор ">="
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.LessThanOrEqual">
            <summary>
            Возвращает оператор "&lt;="
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsYesterday">
            <summary>
            Возвращает оператор "Вчера"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsTomorrow">
            <summary>
            Возвращает оператор "Завтра"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsToday">
            <summary>
            Возвращает оператор "Сегодня"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsDuringPreviousSevenDays">
            <summary>
            Возвращает оператор "В течение предыдущих семи дней"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsDuringNextSevenDays">
            <summary>
            Возвращает оператор "В течение следующих семи дней"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsPreviousWeek">
            <summary>
            Возвращает оператор "На прошлой неделе"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsNextWeek">
            <summary>
            Возвращает оператор "На следующей неделе"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsCurrentWeek">
            <summary>
            Возвращает оператор "На этой неделе"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsPreviousMonth">
            <summary>
            Возвращает оператор "В предыдущем месяце"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsNextMonth">
            <summary>
            Возвращает оператор "В следующем месяце"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsCurrentMonth">
            <summary>
            Возвращает оператор "В текущем месяце"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsPreviousYear">
            <summary>
            Возвращает оператор "В предыдущем году"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsNextYear">
            <summary>
            Возвращает оператор "В следующем году"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsCurrentYear">
            <summary>
            Возвращает оператор "В текущем году"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsEarlierThanToday">
            <summary>
            Возвращает оператор "Ранее сегодняшнего дня"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsLaterThanToday">
            <summary>
            Возвращает оператор "Позднее сегодняшнего дня"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsDuringPreviousHour">
            <summary>
            Возвращает оператор "В течение предыдущего часа"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsDuringNextHour">
            <summary>
            Возвращает оператор "В течение следующего часа"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsNull">
            <summary>
            Возвращает оператор "Не содержит данных"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsNotNull">
            <summary>
            Возвращает оператор "Содержит какие-либо данные"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.ContainsSubstring">
            <summary>
            Возвращает оператор "Содержит"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.NotContainSubstring">
            <summary>
            Возвращает оператор "Не содержит"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.StartsWithSubstring">
            <summary>
            Возвращает оператор "Начинается с"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.EndsWithSubstring">
            <summary>
            Возвращает оператор "Заканчивается на"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsEmptyString">
            <summary>
            Возвращает оператор "Не содержит текст"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsNotEmptyString">
            <summary>
            Возвращает оператор "Содержит текст"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.MatchMask">
            <summary>
            Возвращает оператор "Соответствует маске"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.NotMatchMask">
            <summary>
            Возвращает оператор "Не соответствует маске"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsInheritFrom">
            <summary>
            Возвращает оператор "Порождён от"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsNotInheritFrom">
            <summary>
            Возвращает оператор "Не порождён от"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsCurrentUser">
            <summary>
            Возвращает оператор "Текущий пользователь"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsNotCurrentUser">
            <summary>
            Возвращает оператор "Не текущий пользователь"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsIncludedInGroup">
            <summary>
            Возвращает оператор "Входит в группу"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsNotIncludedInGroup">
            <summary>
            Возвращает оператор "Не входит в группу"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsLockedByCurrentUser">
            <summary>
            Возвращает оператор "Заблокирован текущим пользователем"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsLockedByUser">
            <summary>
            Возвращает оператор "Заблокирован пользователем"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.IsLocked">
            <summary>
            Возвращает оператор "Заблокирован любым пользователем"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperator.AllChildren">
            <summary>
            Возвращает оператор "Все дочерние объекты"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.ComparisonOperator.GetOperator(TFlex.DOCs.Model.Search.ComparisonOperatorType)">
            <summary>
            Возвращает оператор сравнения по его типу
            </summary>
            <param name="type">Тип оператора сравнения</param>
            <returns>Оператор сравнения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.ComparisonOperator.GetAllOperators">
            <summary>
            Возвращает список всех операторов сравнения
            </summary>
            <returns>Список операторов сравнения</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.ComparisonOperator.Type">
            <summary>
            Возвращает тип оператора
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.ComparisonOperator.Compare(System.Object,System.Object)">
            <summary>
            Возвращает значение, указывающее, выполняется ли условие оператора сравнения для указанных операндов
            </summary>
            <param name="firstOperand">Первый операнд</param>
            <param name="secondOperand">Второй операнд</param>
            <returns>Значение true, если условие оператора выполняется для указанных операндов; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.ComparisonOperator.SupportsSecondOperand">
            <summary>
            Возвращает значение, указывающее, поддерживается ли оператором сравнения второй операнд
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.ComparisonOperator.RequireValueList">
            <summary>
            Возвращает значение, указывающее, должен ли быть операнд списком значений
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.ComparisonOperator.GetHashCode">
            <summary>
            Возвращает хэш-код оператора сравнения
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.ComparisonOperator.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если объекты равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.ComparisonOperator.op_Equality(TFlex.DOCs.Model.Search.ComparisonOperator,TFlex.DOCs.Model.Search.ComparisonOperator)">
            <summary>
            Определяет, равны ли указанные операции
            </summary>
            <param name="x">Первая операция для сравнения</param>
            <param name="y">Вторая операция для сравнения</param>
            <returns>Значение true, если операции равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.ComparisonOperator.op_Inequality(TFlex.DOCs.Model.Search.ComparisonOperator,TFlex.DOCs.Model.Search.ComparisonOperator)">
            <summary>
            Определяет, различаются ли указанные операции
            </summary>
            <param name="x">Первая операция для сравнения</param>
            <param name="y">Вторая операция для сравнения</param>
            <returns>Значение true, если операции различаются; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.ComparisonOperatorType">
            <summary>
            Тип оператора сравнения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.Equal">
            <summary>
            =
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.NotEqual">
            <summary>
            !=
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsOneOf">
            <summary>
            Входит в список
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsNotOneOf">
            <summary>
            Не входит в список
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.GreaterThan">
            <summary>
            >
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.LessThan">
            <summary>
            &lt;
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.GreaterThanOrEqual">
            <summary>
            >=
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.LessThanOrEqual">
            <summary>
            &lt;=
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsYesterday">
            <summary>
            Вчера
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsTomorrow">
            <summary>
            Завтра
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsToday">
            <summary>
            Сегодня
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsDuringPreviousSevenDays">
            <summary>
            В течение предыдущих семи дней
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsDuringNextSevenDays">
            <summary>
            В течение следующих семи дней
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsPreviousWeek">
            <summary>
            На прошлой неделе
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsNextWeek">
            <summary>
            На следующей неделе
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsCurrentWeek">
            <summary>
            На этой неделе
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsPreviousMonth">
            <summary>
            В предыдущем месяце
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsNextMonth">
            <summary>
            В следующем месяце
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsCurrentMonth">
            <summary>
            В текущем месяце
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsPreviousYear">
            <summary>
            В предыдущем году
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsNextYear">
            <summary>
            В следующем году
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsCurrentYear">
            <summary>
            В текущем году
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsEarlierThanToday">
            <summary>
            Ранее сегодняшнего дня
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsLaterThanToday">
            <summary>
            Позднее сегодняшнего дня
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsDuringPreviousHour">
            <summary>
            В течение предыдущего часа
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsDuringNextHour">
            <summary>
            В течение следующего часа
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsNull">
            <summary>
            Не содержит данных
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsNotNull">
            <summary>
            Содержит какие-либо данные
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.ContainsSubstring">
            <summary>
            Содержит
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.NotContainSubstring">
            <summary>
            Не содержит
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.StartsWithSubstring">
            <summary>
            Начинается с
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.EndsWithSubstring">
            <summary>
            Заканчивается на
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsEmptyString">
            <summary>
            Не содержит текст
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsNotEmptyString">
            <summary>
            Содержит текст
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.MatchMask">
            <summary>
            Соответствует маске
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.NotMatchMask">
            <summary>
            Не соответствует маске
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsInheritFrom">
            <summary>
            Порождён от
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsNotInheritFrom">
            <summary>
            Не порождён от
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsCurrentUser">
            <summary>
            Текущий пользователь
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsNotCurrentUser">
            <summary>
            Не текущий пользователь
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsIncludedInGroup">
            <summary>
            Входит в группу
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsNotIncludedInGroup">
            <summary>
            Не входит в группу
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsLockedByCurrentUser">
            <summary>
            Заблокирован текущим пользователем
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsLockedByUser">
            <summary>
            Заблокирован пользователем
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.IsLocked">
            <summary>
            Заблокирован любым пользователем
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.ComparisonOperatorType.AllChildren">
            <summary>
            Все дочерние объекты
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.ParameterTerm">
            <summary>
            Условие для параметра объекта справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Filter">
            <summary>
            Фильтр
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Filter.#ctor">
            <summary>
            Создает новый экземпляр фильтра
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Filter.#ctor(TFlex.DOCs.Model.ReferenceInfo)">
            <summary>
            Создает новый экземпляр фильтра для справочника с указанным описанием
            </summary>
            <param name="reference">Описание справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Filter.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает новый экземпляр фильтра для указанной группы параметров
            </summary>
            <param name="masterGroup">Группа параметров</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Filter.#ctor(TFlex.DOCs.Model.Search.Filter)">
            <summary>
            Создает новый экземпляр фильтра на основании уже существующего экземпляра
            </summary>
            <param name="source">Фильтр для копирования свойств</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Filter.Dispose">
            <summary>
            Освобождает используемые ресурсы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Filter.Terms">
            <summary>
            Возвращает корневую группу условий фильтра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Filter.Variables">
            <summary>
            Возвращает коллекцию переменных фильтра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Filter.MainReference">
            <summary>
            Возвращает описание справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Filter.MasterGroup">
            <summary>
            Возвращает группу параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Filter.SourceReference">
            <summary>
            Возвращает описание справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Filter.SerializationMode">
            <summary>
            Возвращает или задает режим сериализации
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Filter.Validate(TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Проверяет фильтр на допустимость
            </summary>
            <param name="formulaContext">Контекст</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Filter.IsValid(TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Возвращает значение, указывающее, является ли фильтр допустимым
            </summary>
            <param name="formulaContext">Контекст</param>
            <returns>Значение true, если фильтр является допустимым; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Filter.Match(System.Object,TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Возвращает значение, указывающее, соответствует ли указанный объект условиям фильтра
            </summary>
            <param name="obj">Объект для проверки</param>
            <param name="formulaContext">Контекст</param>
            <returns>Значение true, если объект соответствует условиям фильтра; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Filter.ToString">
            <summary>
            Возвращает строковое представление фильтра
            </summary>
            <returns>Строковое представление фильтра</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Filter.GetParameters">
            <summary>
            Возвращает коллекцию описаний параметров, которые входят в фильтр
            </summary>
            <returns>Коллекция описаний параметров, которые входят в фильтр</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Filter.Parse(System.String,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Перобразовывает заданное строковое представление фильтра в эквивалентный ему объект фильтра
            </summary>
            <param name="str">Строковое представление фильтра</param>
            <param name="masterGroup">Группа параметров, для которой создается фильтр</param>
            <returns>Фильтр, эквивалентный указанному строковому представлению</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Filter.TryParse(System.String,TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Model.Search.Filter@)">
            <summary>
            Перобразовывает заданное строковое представление фильтра в эквивалентный ему объект фильтра
            </summary>
            <param name="str">Строковое представление фильтра</param>
            <param name="masterGroup">Группа параметров, для которой создается фильтр</param>
            <param name="filter">Фильтр, эквивалентный указанному строковому представлению</param>
            <returns>Значение true, если объект фильтра успешно получен; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Filter.Serialize">
            <summary>
            Сериализует объект в строку формата XML 
            </summary>
            <returns>Строка в формате XML, представляющая текущий фильтр</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Filter.Deserialize(System.String)">
            <summary>
            Десериализует фильтр из указанной строки формата XML
            </summary>
            <param name="xml">Строка в формате XML, представляющая фильтр</param>
            <returns>Фильтр, десериализованный из указанной строки</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Filter.Deserialize(System.String,TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Десериализует фильтр из указанной строки формата XML
            </summary>
            <param name="xml">Строка в формате XML, представляющая фильтр</param>
            <param name="connection">Соединение с сервером</param>
            <returns>Фильтр, десериализованный из указанной строки</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.ReferenceObjectTerm">
            <summary>
            Условие фильтра для объектов справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.ReferenceObjectTerm.#ctor">
            <summary>
            Создает новое условие
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.ReferenceObjectTerm.#ctor(TFlex.DOCs.Model.Search.LogicalOperator)">
            <summary>
            Создает новое условие с указанием логического оператора
            </summary>
            <param name="logicalOperator">Логический оператор</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.ReferenceObjectTerm.#ctor(TFlex.DOCs.Model.Search.TermGroup)">
            <summary>
            Создает новое условие в указанной группе условий
            </summary>
            <param name="owner">Родительская группа условий</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.ReferenceObjectTerm.#ctor(TFlex.DOCs.Model.Search.TermGroup,TFlex.DOCs.Model.Search.LogicalOperator)">
            <summary>
            Создает новое условие в указанной группе условий
            </summary>
            <param name="owner">Группа условий</param>
            <param name="logicalOperator">Логический оператор</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.ReferenceObjectTerm.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает новое условие для указанной группы параметров
            </summary>
            <param name="masterGroup">Группа параметров</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.ReferenceObjectTerm.#ctor(TFlex.DOCs.Model.Search.ReferenceObjectTerm,TFlex.DOCs.Model.Search.TermGroup)">
            <summary>
            Создает новое условие на основании указанного условия в заданной группе условий
            </summary>
            <param name="source">Условие, на основании которого создается новый экземпляр условия</param>
            <param name="owner">Группа условий</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.ReferenceObjectTerm.Path">
            <summary>
            Возвращает путь к параметру условия
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.ReferenceObjectTerm.ParameterName">
            <summary>
            Возвращает имя параметра условия
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.ReferenceObjectTerm.Operator">
            <summary>
            Возвращает оператор сравнения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.ReferenceObjectTerm.AsReferenceObjectTerm">
            <summary>
            Приводит текущий объект к типу <see cref="T:TFlex.DOCs.Model.Search.ReferenceObjectTerm"/>
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.ReferenceObjectTerm.Match(System.Object,TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Возвращает значение, указывающее, соответствует ли указанный объект условию
            </summary>
            <param name="obj">Объект для проверки</param>
            <param name="formulaContext">Контекст</param>
            <returns>Значение true, если объект соответствует условию; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.ReferenceObjectTerm.Clear">
            <summary>
            Очищает условие
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.ReferenceObjectTerm.Clone(TFlex.DOCs.Model.Search.TermGroup)">
            <summary>
            Создает свою копию в указанной группе условий  
            </summary>
            <param name="owner">Группа условий</param>
            <returns>Созданный элемент группы условий</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.ReferenceObjectTerm.CreateSearchTerm">
            <summary>
            Создать условия для поиска
            </summary>
            <returns></returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.SortOrder">
            <summary>
            Порядок сортировки
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.SortOrder.Unspecified">
            <summary>
            Не определен
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.SortOrder.Ascending">
            <summary>
            По возрастанию
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Search.SortOrder.Descending">
            <summary>
            По убыванию
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.Term">
            <summary>
            Условие фильтра
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Term.Dispose">
            <summary>
            Освобождает используемые ресурсы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Term.ParameterName">
            <summary>
            Возвращает имя параметра условия
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Term.ParameterDescription">
            <summary>
            Возвращает описание параметра условия
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Term.Operator">
            <summary>
            Возвращает или задает оператор сравнения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Term.Value">
            <summary>
            Возвращает или задает значение для сравнения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.Term.AsTerm">
            <summary>
            Приводит текущий объект к типу <see cref="T:TFlex.DOCs.Model.Search.Term"/> 
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Term.Clear">
            <summary>
            Очищает условие
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.Term.ToString">
            <summary>
            Возвращает строковое представление условия
            </summary>
            <returns>Строковое представление условия</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.TermGroup">
            <summary>
            Группа условий фильтра
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.#ctor">
            <summary>
            Создает новую группу условий
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.#ctor(TFlex.DOCs.Model.Search.TermGroup)">
            <summary>
            Создает новую группу условий в указанной родительской группе 
            </summary>
            <param name="owner">Родительская группа условий</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.#ctor(TFlex.DOCs.Model.Search.TermGroup,TFlex.DOCs.Model.Search.LogicalOperator)">
            <summary>
            Создает новую группу условий в указанной родительской группе с заданным логическим оператором
            </summary>
            <param name="owner">Родительская группа условий</param>
            <param name="logicalOperator">Логический оператор</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.#ctor(TFlex.DOCs.Model.Search.TermGroup,TFlex.DOCs.Model.Search.TermGroup)">
            <summary>
            Создает новую группу условий на основании указанной группы в заданной родительской группе
            </summary>
            <param name="source">Группа условий для копирования</param>
            <param name="owner">Родительская группа условий</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.Dispose">
            <summary>
            Освобождает используемые ресурсы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.TermGroup.Filter">
            <summary>
            Возвращает фильтр, в который входит данная группа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.TermGroup.IsRoot">
            <summary>
            Возвращает значение, указывающее, является ли группа корневой в фильтре
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.AddTerm(TFlex.DOCs.Model.Structure.ParameterInfo,TFlex.DOCs.Model.Search.ComparisonOperator,System.Object,TFlex.DOCs.Model.Structure.ParameterGroup[])">
            <summary>
            Добавляет новое условие в группу
            </summary>
            <param name="parameter">Описание параметра</param>
            <param name="op">Оператор сравнения</param>
            <param name="value">Значение для сравнения</param>
            <param name="groups">Массив групп параметров для описания пути по к параметру</param>
            <returns>Добавленное условие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.AddTerm(System.String,TFlex.DOCs.Model.Search.ComparisonOperator,System.Object)">
            <summary>
            Добавляет новое условие в группу
            </summary>
            <param name="path">Путь по структуре справочника</param>
            <param name="op">Оператор сравнения</param>
            <param name="value">Значение для сравнения</param>
            <returns>Добавленное условие</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.AddGroup(TFlex.DOCs.Model.Search.LogicalOperator)">
            <summary>
            Добавляет дочернюю группу условий в текущую группу
            </summary>
            <param name="logicalOperator">Логический оператор</param>
            <returns>Добавленная группа условий</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.GroupTerms(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Search.TermGroupItem})">
            <summary>
            Группирует указанную коллекцию условий, входящих в данную группу
            </summary>
            <param name="terms">Коллекция условий, входящих в данную группу</param>
            <returns>Новая группа условий, содержащая указанную коллекцию условий</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.Ungroup">
            <summary>
            Разгруппирует данную группу и перемещает все ее элементы в родительскую группу
            </summary>
            <returns>Список элементов группы условий, перемещенных в родительскую группу</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.RemoveEmptyGroups(System.Boolean)">
            <summary>
            Удаляет из текущей группы элементы, которые являются пустыми группами
            </summary>
            <param name="recursive">Значение true, если требуется удалять элементы в дочерних группах; в противном случае - значение false</param>
            <returns>Список групп условий, удалённых в результате операции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.Normalize">
            <summary>
            Удаляет из текущей группы пустые группы и разгруппирует группы, содержащие один элемент
            </summary>
            <returns>Список групп условий, удаленных в результате операции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.RemoveErrorItems(System.Boolean)">
            <summary>
            Удаляет из текущей группы элементы, которые находятся в ошибочном состоянии
            </summary>
            <param name="recursive">Значение true, если требуется удалять элементы в дочерних группах; в противном случае - значение false</param>
            <returns>Список элементов группы, удаленных в результате операции</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.TermGroup.AsGroup">
            <summary>
            Приводит текущий объект к типу <see cref="T:TFlex.DOCs.Model.Search.TermGroup"/>
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.Match(System.Object,TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Возвращает значение, указывающее, соответствует ли указанный объект условиям группы
            </summary>
            <param name="obj">Объект для проверки</param>
            <param name="formulaContext">Контекст</param>
            <returns>Значение true, если объект соответствует условиям группы; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.ToString">
            <summary>
            Возвращает строковое представление группы условий
            </summary>
            <returns>Строковое представление группы условий</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.GetText">
            <summary>
            Возвращает текстовое представление группы условий
            </summary>
            <returns>Текстовое представление группы условий</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.IndexOf(TFlex.DOCs.Model.Search.TermGroupItem)">
            <summary>
            Возвращает индекс указанного элемента в текущей группе условий
            </summary>
            <param name="item">Элемент группы условий</param>
            <returns>Индекс элемента в группе</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.Insert(System.Int32,TFlex.DOCs.Model.Search.TermGroupItem)">
            <summary>
            Добавляет в текущую группу условий указанный элемент по заданному индексу
            </summary>
            <param name="index">Индекс, по которому следует вставить элемент</param>
            <param name="item">Элемент, добавляемый в группу условий</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.RemoveAt(System.Int32)">
            <summary>
            Удаляет из текущей группы условий элемент с указанным индексом
            </summary>
            <param name="index">Индекс элемента в группе</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.TermGroup.Item(System.Int32)">
            <summary>
            Возвращает элемент, находящийся в группе условий по указанному индексу
            </summary>
            <param name="index">Индекс элемента в группе</param>
            <returns>Элемент, находящийся в группе условий по указанному индексу</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.Add(TFlex.DOCs.Model.Search.TermGroupItem)">
            <summary>
            Добавляет указанный элемент в текущую группу условий
            </summary>
            <param name="item">Элемент для добавления</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.Clear">
            <summary>
            Очищает текущую группу условий
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.Contains(TFlex.DOCs.Model.Search.TermGroupItem)">
            <summary>
            Возвращает значение, указывающее, содержится ли заданный элемент в группе условий
            </summary>
            <param name="item">Элемент для проверки</param>
            <returns>Значение true, если элемент содержится в группе условий; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.CopyTo(TFlex.DOCs.Model.Search.TermGroupItem[],System.Int32)">
            <summary>
            Копирует элементы группы условий в заданный массив элементов, начиная с указанного индекса
            </summary>
            <param name="array">Массив элементов</param>
            <param name="arrayIndex">Индекс в массиве элементов</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.TermGroup.Count">
            <summary>
            Возвращает количество элементов в группе условий
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.TermGroup.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли группа условий доступной только для чтения 
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.Remove(TFlex.DOCs.Model.Search.TermGroupItem)">
            <summary>
            Удаляет указанный элемент из текущей группы условий
            </summary>
            <param name="item">Элемент для удаления</param>
            <returns>Значение true, если элемент успешно удален из группы; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.GetEnumerator">
            <summary>
            Возвращает перечислитель элементов в группе условий
            </summary>
            <returns>Перечислитель элементов в группе условий</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.Clone(TFlex.DOCs.Model.Search.Filter)">
            <summary>
            Копирует текущую группу условий в указанный фильтр
            </summary>
            <param name="newFilter">Фильтр, в который должна быть скопирована группа условий</param>
            <returns>Новая группа условий</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroup.Clone(TFlex.DOCs.Model.Search.TermGroup)">
            <summary>
            Копирует текущую группу условий в указанную группу условий
            </summary>
            <param name="owner">Группа условий, в которую должна быть скопирована текущая группа</param>
            <returns>Новая группа условий</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.TermGroupItem">
            <summary>
            Элемент группы условий
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroupItem.Dispose">
            <summary>
            Освобождает используемые ресурсы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.TermGroupItem.IsGroup">
            <summary>
            Возвращает значение, указывающее, является ли текущий элемент группой условий
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.TermGroupItem.IsTerm">
            <summary>
            Возвращает значение, указывающее, является ли текущий элемент условием
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.TermGroupItem.IsReferenceObjectTerm">
            <summary>
            Возвращает значение, указывающее, является ли текущий элемент условием для объектов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.TermGroupItem.AsGroup">
            <summary>
            Преобразует текущий элемент к типу <see cref="T:TFlex.DOCs.Model.Search.TermGroup"/> (если он является группой условий)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.TermGroupItem.AsTerm">
            <summary>
            Преобразует текущий элемент к типу <see cref="T:TFlex.DOCs.Model.Search.Term"/> (если он является условием)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.TermGroupItem.AsReferenceObjectTerm">
            <summary>
            Преобразует текущий элемент к типу <see cref="T:TFlex.DOCs.Model.Search.ReferenceObjectTerm"/> (если он является условием для объектов справочника)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.TermGroupItem.LogicalOperator">
            <summary>
            Логический оператор, которым текущий элемент соединяется с предыдущим элементом в группе условий
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.TermGroupItem.Owner">
            <summary>
            Группа условий фильтра, которой принадлежит текущий элемент
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.TermGroupItem.IsError">
            <summary>
            Возвращает значение, указывающее, находится ли элемент в ошибочном состоянии
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroupItem.Match(System.Object,TFlex.DOCs.Model.Macros.MacroContext)">
            <summary>
            Возвращает значение, указывающее, соответствует ли указанный объект условиям текущего элемента
            </summary>
            <param name="obj">Объект для проверки</param>
            <param name="formulaContext">Контекст</param>
            <returns>Значение true, если объект соответствует условиям текущего элемента; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroupItem.Clone(TFlex.DOCs.Model.Search.TermGroup)">
            <summary>
            Создает копию текущего элемента в указанной группе условий
            </summary>
            <param name="owner">Группа условий</param>
            <returns>Новый элемент группы условий</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroupItem.Clone">
            <summary>
            Создает копию текущего элемента
            </summary>
            <returns>Новый элемент группы условий</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.LogicalOperator">
            <summary>
            Логический оператор для соединения элементов в группе условий
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.LogicalOperatorExtensions">
            <summary>
            Методы расширения для логического оператора
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.LogicalOperatorExtensions.GetName(TFlex.DOCs.Model.Search.LogicalOperator)">
            <summary>
            Возвращает наименование логического оператора
            </summary>
            <param name="logicalOperator">Логический оператор</param>
            <returns>Наименование логического оператора</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Search.TermGroupItemNotValidException">
            <summary>
            Исключение, которое генерируется при наличии ошибки в элементе группы условий
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroupItemNotValidException.#ctor(System.String,TFlex.DOCs.Model.Search.TermGroupItem)">
            <summary>
            Инициализирует новый экземпляр класса указанным сообщением и элементом группы условий
            </summary>
            <param name="message">Сообщение</param>
            <param name="item">Элемент группы условий, в котором найдена ошибка</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Search.TermGroupItemNotValidException.#ctor(System.String,TFlex.DOCs.Model.Search.TermGroupItem,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса указанным сообщением, элементом группы условий и ссылкой на внутреннее исключение, которое стало причиной данного исключения
            </summary>
            <param name="message">Сообщение</param>
            <param name="item">Элемент группы условий, в котором найдена ошибка</param>
            <param name="innerException">Исключение, вызвавшее текущее исключение</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Search.TermGroupItemNotValidException.Item">
            <summary>
            Элемент группы условий, вызвавший исключение
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.DataExchange.DataExchangeGateway">
            <summary>
            Менеджер экспорта-импорта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.DataExchange.DataExchangeGateway.Export(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.ReferenceInfo},TFlex.DOCs.Model.DataExchange.ExportOptions)">
            <summary>
            Экспортирует коллекцию справочников с указанными настройками экспорта
            </summary>
            <param name="references">Коллекция справочников для экспорта</param>
            <param name="options">Настройки экспорта</param>
        </member>
        <member name="M:TFlex.DOCs.Model.DataExchange.DataExchangeGateway.Export(TFlex.DOCs.Model.ServerConnection,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.ReferenceInfo},TFlex.DOCs.Model.DataExchange.ExportOptions)">
            <summary>
            Экспортирует коллекцию справочников с указанными настройками экспорта
            </summary>
            <param name="references">Коллекция справочников для экспорта</param>
            <param name="options">Настройки экспорта</param>
        </member>
        <member name="M:TFlex.DOCs.Model.DataExchange.DataExchangeGateway.Export(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject},TFlex.DOCs.Model.DataExchange.ExportOptions)">
            <summary>
            Экспортирует коллекцию объектов справочника с указанными настройками экспорта
            </summary>
            <param name="objects">Коллекция объектов справочника</param>
            <param name="options">Настройки экспорта</param>
        </member>
        <member name="M:TFlex.DOCs.Model.DataExchange.DataExchangeGateway.Export(TFlex.DOCs.Model.ServerConnection,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject},TFlex.DOCs.Model.DataExchange.ExportOptions)">
            <summary>
            Экспортирует коллекцию объектов справочника с указанными настройками экспорта
            </summary>
            <param name="objects">Коллекция объектов справочника</param>
            <param name="options">Настройки экспорта</param>
        </member>
        <member name="M:TFlex.DOCs.Model.DataExchange.DataExchangeGateway.Import(TFlex.DOCs.Model.DataExchange.ImportOptions)">
            <summary>
            Импортирует данные с указанными настройками импорта
            </summary>
            <param name="options">Настройки импорта</param>
        </member>
        <member name="M:TFlex.DOCs.Model.DataExchange.DataExchangeGateway.Import(TFlex.DOCs.Model.ServerConnection,TFlex.DOCs.Model.DataExchange.ImportOptions)">
            <summary>
            Импортирует данные с указанными настройками импорта
            </summary>
            <param name="options">Настройки импорта</param>
        </member>
        <member name="T:TFlex.DOCs.Model.DataExchange.ExportEncryptionMode">
            <summary>
            Режим экспорта зашифрованных данных
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportEncryptionMode.Disabled">
            <summary>
            Зашифрованные данные не экспортируются
            (данный режим пока не реализован)
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportEncryptionMode.Decrypted">
            <summary>
            Зашифрованные данные экспортируются в расшифрованном виде
            (если открыты соответствующие сертификаты, иначе будут пустые значения)
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportEncryptionMode.Encrypted">
            <summary>
            Зашифрованные данные экспортируются в зашифрованном виде (как есть в базе данных)
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.DataExchange.ImportEncryptionMode">
            <summary>
            Режим импорта зашифрованных данных
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ImportEncryptionMode.Disabled">
            <summary>
            Зашифрованные данные не импортируются
            (данный режим пока не реализован)
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ImportEncryptionMode.Decrypted">
            <summary>
            Зашифрованные данные импортируются в расшифрованном виде
            (если открыты соответствующие сертификаты, иначе будут пустые значения)
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ImportEncryptionMode.Encrypted">
            <summary>
            Зашифрованные данные импортируются в зашифрованном виде (как есть в базе данных)
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.DataExchange.ExportObjectsMode">
            <summary>
            Режим экспорта объектов справочника
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportObjectsMode.None">
            <summary>
            Экспортировать справочники без объектов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportObjectsMode.All">
            <summary>
            Экспортировать все объекты выбранных справочников
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportObjectsMode.Specified">
            <summary>
            Экспортировать выбранные объекты
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportObjectsMode.SpecifiedAndChildren">
            <summary>
            Экспортировать выбранные и вложенные объекты
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.DataExchange.ExportLinkedObjectsMode">
            <summary>
            Режим экспорта связанных справочников
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportLinkedObjectsMode.None">
            <summary>
            Не экспортировать связанные справочники
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportLinkedObjectsMode.DependentObjects">
            <summary>
            Экспорировать только связанные объекты связанных справочников
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportLinkedObjectsMode.DependentObjectsAndStructure">
            <summary>
            Экспортировать связанные объекты и структуру связанных справочников
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportLinkedObjectsMode.All">
            <summary>
            Экспортировать все объекты и структуру связанных справочников
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.DataExchange.ExportDialogsMode">
            <summary>
            Режим экспорта диалогов справочника
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportDialogsMode.None">
            <summary>
            Не экспортировать диалоги
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportDialogsMode.ClientDialogs">
            <summary>
            Экспортировать только диалоги клиента T-FLEX DOCs
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportDialogsMode.WebDialogs">
            <summary>
            Экспортировать только диалоги web-клиента
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportDialogsMode.All">
            <summary>
            Экспортировать все диалоги
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.DataExchange.ExportCallback">
            <summary>
            Делегат, определяющий метод обратного вызова для уведомления о ходе выполнения операции экспорта
            </summary>
            <param name="messages">Сообщения</param>
            <param name="counter">Количество выполненных операций</param>
            <param name="totalCount">Общее число операций</param>
            <returns>Значение true, ели требуется продолжить экспорт; значение false - если требуется отменить экспорт</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.DataExchange.ExportOptions">
            <summary>
            Настройки экспорта
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportOptions.EncryptionMode">
            <summary>
            Режим экспорта зашифрованных данных
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportOptions.ObjectsMode">
            <summary>
            Режим экспорта объектов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportOptions.DialogsMode">
            <summary>
            Режим экспорта диалогов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportOptions.LinkedObjectsMode">
            <summary>
            Режим экспорта связанных справочников
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportOptions.IncludeStructure">
            <summary>
            Значение, указывающее, требуется ли экспортировать структуру и типы
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportOptions.IncludePrototypes">
            <summary>
            Значение, указывающее, требуется ли экспортировать прототипы
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportOptions.IncludeViews">
            <summary>
            Значение, указывающее, требуется ли экспортировать настройки видов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.DataExchange.ExportOptions.IncludeDialogs">
            <summary>
            Значение, указывающее, требуется ли экспортировать пользовательские диалоги
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportOptions.IncludeMacros">
            <summary>
            Значение, указывающее, требуется ли экспортировать связанные макросы
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportOptions.FileName">
            <summary>
            Имя файла для экспорта
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportOptions.UsePackage">
            <summary>
            Значение, указывающее, требуется ли упаковка всех данных в один файл
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportOptions.Callback">
            <summary>
            Метод обратного вызова для уведомления вызывающей строны о ходе выполнения операции
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ExportOptions.SynchronizeInvoke">
            <summary>
            Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.DataExchange.ExportOptions.#ctor">
            <summary>
            Создает новый экземпляр настроек экспорта 
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.DataExchange.ImportMode">
            <summary>
            Режим импорта объектов
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.DataExchange.ImportCallback">
            <summary>
            Делегат, определяющий метод обратного вызова для уведомления о ходе выполнения операции импорта
            </summary>
            <param name="messages">Сообщения</param>
            <param name="counter">Количество выполненных операций</param>
            <param name="totalCount">Общее число операций</param>
            <returns>Значение true, ели требуется продолжить импорт; значение false - если требуется отменить импорт</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.DataExchange.ImportOptions">
            <summary>
            Настройки импорта
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ImportOptions.FileName">
            <summary>
            Путь к файлу ddx
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ImportOptions.Mode">
            <summary>
            Режим импорта объектов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ImportOptions.IncludeObjects">
            <summary>
            Значение, указывающее, требуется ли импортировать объекты
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ImportOptions.IncludeViews">
            <summary>
            Значение, указывающее, требуется ли импортировать настройки отображения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ImportOptions.IncludeDialogs">
            <summary>
            Значение, указывающее, требуется ли импортировать диалоги
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ImportOptions.Callback">
            <summary>
            Метод обратного вызова для уведомления вызывающей строны о ходе выполнения операции
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.DataExchange.ImportOptions.SynchronizeInvoke">
            <summary>
            Объект, обеспечивающий возможность синхронного или асинхронного выполнения делегата
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Desktop.Changelist">
            <summary>
            Изменение
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.Changelist.Number">
            <summary>
            Номер изменения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.Changelist.User">
            <summary>
            Пользователь
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.Changelist.UserName">
            <summary>
            Имя пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.Changelist.HostName">
            <summary>
            Рабочее место
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.Changelist.Date">
            <summary>
            Дата изменения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.Changelist.Comment">
            <summary>
            Комментарий
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.Changelist.Label">
            <summary>
            Название версии
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Changelist.FindObjectInChangelist(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Выполняет поиск изменения указанного объекта в текущем изменении
            </summary>
            <param name="referenceObject">Объект справочника</param>
            <returns>Изменение объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Changelist.ToString">
            <summary>
            Возвращает строковое представление изменения
            </summary>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Changelist.GetHashCode">
            <summary>
            Возвращает хэш-код изменения
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Changelist.Equals(System.Object)">
            <summary>
            Определяет, равен ли указанный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если указанный объект равен текущему; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Changelist.GetEnumerator">
            <summary>
            Возвращает перечислитель изменений объектов, выполненных в текущем изменении
            </summary>
            <returns>Перечислитель изменений объектов</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Desktop.ChangelistObject">
            <summary>
            Изменение объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.ChangelistObject.Changelist">
            <summary>
            Возвращает изменение
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.ChangelistObject.Id">
            <summary>
            Возвращает Id изменения объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.ChangelistObject.Guid">
            <summary>
            Возвращает Guid изменения объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.ChangelistObject.Reference">
            <summary>
            Возвращает описание справочника, объект которого был изменен
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.ChangelistObject.ReferenceObject">
            <summary>
            Возвращает измененный объект справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.ChangelistObject.CurrentReferenceObject">
            <summary>
            Возвращает актуальную версию измененного объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.ChangelistObject.Name">
            <summary>
            Возвращает наименование изменения объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.ChangelistObject.Version">
            <summary>
            Возвращает версию объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.ChangelistObject.Class">
            <summary>
            Возвращает тип объекта справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.ChangelistObject.Icon">
            <summary>
            Возвращает иконку изменения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.ChangelistObject.ChangeTypeIcon">
            <summary>
            Возвращает иконку типа изменения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.ChangelistObject.IsAdded">
            <summary>
            Возвращает значение, указывающее, является ли тип изменения "Добавлением"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.ChangelistObject.IsDeleted">
            <summary>
            Возвращает значение, указывающее, является ли тип изменения "Удалением"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.ChangelistObject.IsUpdated">
            <summary>
            Возвращает значение, указывающее, является ли тип изменения "Изменением"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.ChangelistObject.IsRestored">
            <summary>
            Возвращает значение, указывающее, является ли тип изменения "Восстановлением"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.ChangelistObject.IsLabeled">
            <summary>
            Возвращает значение, указывающее, является ли тип изменения "Созданием версии"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.ChangelistObject.SourceVersion">
            <summary>
            Возвращает предыдущую версию объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.ChangelistObject.IsPrototype">
            <summary>
            Возвращает значение, указывающее, является ли объект изменения прототипом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.ChangelistObject.ChangeTypeDescription">
            <summary>
            Возвращает строковое описание типа изменения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.ChangelistObject.GetHashCode">
            <summary>
            Возвращает хэш-код изменения объекта
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.ChangelistObject.Equals(System.Object)">
            <summary>
            Определяет, равен ли указанный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если указанный объект равен текущему; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.ChangelistObject.ToString">
            <summary>
            Возвращает строковое представление изменения объекта
            </summary>
            <returns>Строковое представление изменения объекта</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Desktop.Desktop">
            <summary>
            Рабочий стол
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.CheckOut(TFlex.DOCs.Model.References.DesktopObject,System.Boolean)">
            <summary>
            Выполняет взятие указанного объекта на редактирование
            </summary>
            <param name="desktopObject">Объект справочника</param>
            <param name="delete">Значение true, если объект берется на редактирование для удаления; в противном случае - значение false</param>
            <returns>Коллекция объектов, взятых на редактирование в результате операции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.CheckOut(TFlex.DOCs.Model.References.DesktopObject,System.Boolean,System.Object)">
            <summary>
            Выполняет взятие указанного объекта на редактирование
            </summary>
            <param name="desktopObject">Объект справочника</param>
            <param name="delete">Значение true, если объект берется на редактирование для удаления; в противном случае - значение false</param>
            <param name="context">Контекст вызова</param>
            <returns>Коллекция объектов, взятых на редактирование в результате операции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.CheckOut(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject},System.Boolean)">
            <summary>
            Выполняет взятие коллекции объектов на редактирование
            </summary>
            <param name="objects">Коллекция объектов справочника</param>
            <param name="delete">Значение true, если объекты берутся на редактирование для удаления; в противном случае - значение false</param>
            <returns>Коллекция объектов, взятых на редактирование в результате операции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.CheckOut(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject},System.Boolean,System.Object)">
            <summary>
            Выполняет взятие коллекции объектов на редактирование
            </summary>
            <param name="objects">Коллекция объектов справочника</param>
            <param name="delete">Значение true, если объекты берутся на редактирование для удаления; в противном случае - значение false</param>
            <param name="context">Контекст вызова</param>
            <returns>Коллекция объектов, взятых на редактирование в результате операции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.CheckIn(TFlex.DOCs.Model.References.DesktopObject,System.String,System.Boolean)">
            <summary>
            Выполняет применение изменений для объекта
            </summary>
            <param name="desktopObject">Объект справочника</param>
            <param name="comment">Комментарий к изменению</param>
            <param name="executeCallBack">Значение true, если следует отображать диалог "Применение изменений" для подтверждения операции пользователем; в противном случае - значение false</param>
            <returns>Коллекция объектов, для которых были применены изменения в результате операции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.CheckIn(TFlex.DOCs.Model.References.DesktopObject,System.String,System.Boolean,System.Object)">
            <summary>
            Выполняет применение изменений для объекта
            </summary>
            <param name="desktopObject">Объект справочника</param>
            <param name="comment">Комментарий к изменению</param>
            <param name="executeCallBack">Значение true, если следует отображать диалог "Применение изменений" для подтверждения операции пользователем; в противном случае - значение false</param>
            <param name="context">Контекст вызова</param>
            <returns>Коллекция объектов, для которых были применены изменения в результате операции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.CheckIn(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject},System.String,System.Boolean)">
            <summary>
            Выполняет применение изменений для коллекции объектов
            </summary>
            <param name="objects">Коллекция объектов справочника</param>
            <param name="comment">Комментарий к изменению</param>
            <param name="executeCallBack">Значение true, если следует отображать диалог "Применение изменений" для подтверждения операции пользователем; в противном случае - значение false</param>
            <returns>Коллекция объектов, для которых были применены изменения в результате операции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.CheckIn(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject},System.String,System.Boolean,System.Object)">
            <summary>
            Выполняет применение изменений для коллекции объектов
            </summary>
            <param name="objects">Коллекция объектов справочника</param>
            <param name="comment">Комментарий к изменению</param>
            <param name="executeCallBack">Значение true, если следует отображать диалог "Применение изменений" для подтверждения операции пользователем; в противном случае - значение false</param>
            <param name="context">Контекст вызова</param>
            <returns>Коллекция объектов, для которых были применены изменения в результате операции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.UndoCheckOut(TFlex.DOCs.Model.References.DesktopObject)">
            <summary>
            Выполняет отмену изменений для указанного объекта
            </summary>
            <param name="desktopObject">Объект справочника</param>
            <returns>Коллекция объектов, для которых были отменены изменения в результате операции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.UndoCheckOut(TFlex.DOCs.Model.References.DesktopObject,System.Object)">
            <summary>
            Выполняет отмену изменений для указанного объекта
            </summary>
            <param name="desktopObject">Объект справочника</param>
            <param name="context">Контекст вызова</param>
            <returns>Коллекция объектов, для которых были отменены изменения в результате операции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.UndoCheckOut(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject})">
            <summary>
            Выполняет отмену изменений для коллекции объектов
            </summary>
            <param name="objects">Коллекция объектов справочника</param>
            <returns>Коллекция объектов, для которых были отменены изменения в результате операции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.UndoCheckOut(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject},System.Object)">
            <summary>
            Выполняет отмену изменений для коллекции объектов
            </summary>
            <param name="objects">Коллекция объектов справочника</param>
            <param name="context">Контекст вызова</param>
            <returns>Коллекция объектов, для которых были отменены изменения в результате операции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.AddLabel(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject},System.String,System.String)">
            <summary>
            Создает версии указанных объектов
            </summary>
            <param name="objects">Коллекция объектов справочника</param>
            <param name="label">Название версии</param>
            <param name="comment">Комментарий</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.GetCheckedOutObjects">
            <summary>
            Возвращает список объектов, взятых на редактирование на текущем рабочем месте
            </summary>
            <returns>Список объектов, взятых на редактирование на текущем рабочем месте</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.GetCheckedOutObjects(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Возвращает список объектов, взятых на редактирование на текущем рабочем месте
            </summary>
            <returns>Список объектов, взятых на редактирование на текущем рабочем месте</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.GetCheckedOutObjects(TFlex.DOCs.Model.ClientView)">
            <summary>
            Возвращает список объектов, взятых на редактирование на указанном рабочем месте
            </summary>
            <param name="clientView">Рабочее место пользователя</param>
            <returns>Список объектов, взятых на редактирование на указанном рабочем месте</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.GetCheckedOutObjects(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.ClientView})">
            <summary>
            Возвращает список объектов, взятых на редактирование на указанных рабочих местах
            </summary>
            <param name="clientView">Коллекция рабочих мест пользователя</param>
            <returns>Список объектов, взятых на редактирование на указанных рабочих местах</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.GetAllCheckedOutObjects">
            <summary>
            Возвращает список всех объектов, взятых на редактирование
            </summary>
            <returns>Список всех объектов, взятых на редактирование</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.GetAllCheckedOutObjects(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Возвращает список всех объектов, взятых на редактирование
            </summary>
            <returns>Список всех объектов, взятых на редактирование</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.GetCurrentUserHistory(System.Boolean)">
            <summary>
            Возвращает список изменений, выполненных текущим пользователем
            </summary>
            <param name="withLabel">Значение true, если нужно получить только именованные изменения; в противном случае - значение false</param>
            <returns>Список изменений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.GetCurrentUserHistory(TFlex.DOCs.Model.ServerConnection,System.Boolean)">
            <summary>
            Возвращает список изменений, выполненных текущим пользователем
            </summary>
            <param name="withLabel">Значение true, если нужно получить только именованные изменения; в противном случае - значение false</param>
            <returns>Список изменений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.GetCurrentUserHistory(TFlex.DOCs.Model.Desktop.HistoryFilters,System.Boolean)">
            <summary>
            Возвращает список изменений, выполненных текущим пользователем
            </summary>
            <param name="filters">Фильтр истории изменений</param>
            <param name="withLabel">Значение true, если нужно получить только именованные изменения; в противном случае - значение false</param>
            <returns>Список изменений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.GetUserHistory(TFlex.DOCs.Model.References.Users.User,System.Boolean)">
            <summary>
            Возвращает список изменений, выполненных указанным пользователем
            </summary>
            <param name="user">Пользователь</param>
            <param name="withLabel">Значение true, если нужно получить только именованные изменения; в противном случае - значение false</param>
            <returns>Список изменений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.GetUserHistory(TFlex.DOCs.Model.References.Users.User,TFlex.DOCs.Model.Desktop.HistoryFilters,System.Boolean)">
            <summary>
            Возвращает список изменений, выполненных указанным пользователем
            </summary>
            <param name="user">Пользователь</param>
            <param name="filters">Фильтр истории изменений</param>
            <param name="withLabel">Значение true, если нужно получить только именованные изменения; в противном случае - значение false</param>
            <returns>Список изменений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.GetAllUserHistory(System.Boolean)">
            <summary>
            Возвращает список изменений, выполненных всеми пользователями
            </summary>
            <param name="withLabel">Значение true, если нужно получить только именованные изменения; в противном случае - значение false</param>
            <returns>Список изменений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.GetAllUserHistory(TFlex.DOCs.Model.ServerConnection,System.Boolean)">
            <summary>
            Возвращает список изменений, выполненных всеми пользователями
            </summary>
            <param name="withLabel">Значение true, если нужно получить только именованные изменения; в противном случае - значение false</param>
            <returns>Список изменений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.GetAllUserHistory(TFlex.DOCs.Model.Desktop.HistoryFilters,System.Boolean)">
            <summary>
            Возвращает список изменений, выполненных всеми пользователями
            </summary>
            <param name="filters">Фильтр истории изменений</param>
            <param name="withLabel">Значение true, если нужно получить только именованные изменения; в противном случае - значение false</param>
            <returns>Список изменений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.GetObjectChangelists(TFlex.DOCs.Model.References.ReferenceObject,System.Boolean)">
            <summary>
            Возвращает список изменений указанного объекта
            </summary>
            <param name="referenceObject">Объект справочника</param>
            <param name="withLabel">Значение true, если нужно получить только именованные изменения; в противном случае - значение false</param>
            <returns>Список изменений объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.Restore(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject},System.String,System.Boolean)">
            <summary>
            Выполняет восстановление указанных объектов
            </summary>
            <param name="objects">Коллекция объектов справочника</param>
            <param name="comment">Комментарий</param>
            <param name="skipLinks">Значение true, если при восстановлении не следует восстанавливать связанные объекты; в противном случае - значение false</param>
            <returns>Список объектов, восстановленных в результате операции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.CheckOutVersion(TFlex.DOCs.Model.References.ReferenceObject,System.Int32)">
            <summary>
            Делает актуальной указанную версию заданного объекта
            </summary>
            <param name="referenceObject">Объект справочника</param>
            <param name="version">Номер версии</param>
            <returns>Объект справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.Desktop.ClearRecycleBin(System.Collections.Generic.List{TFlex.DOCs.Model.References.DesktopObject})">
            <summary>
            Удаляет из корзины указанные объекты
            </summary>
            <param name="desktopObjects">Список объектов для удаления</param>
            <returns>Значение true, если удаление объектов из корзины завершено успешно; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Desktop.DesktopOperationInfo">
            <summary>
            Описание операции рабочего стола
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.DesktopOperationInfo.Type">
            <summary>
            Возвращает тип операции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.DesktopOperationInfo.GetObjects">
            <summary>
            Возвращает список всех объектов, для которых выполняется операция
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.DesktopOperationInfo.Items">
            <summary>
            Возвращает коллекцию корневых элементов операции
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.DesktopOperationInfo.Comment">
            <summary>
            Возвращает или задает комментарий к операции
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.DesktopOperationInfo.KeepCheckedOut">
            <summary>
            Возвращает или задает значение, указывающее, необходимо ли оставить объекты в работе
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.DesktopOperationInfo.Remove(TFlex.DOCs.Model.Desktop.DesktopOperationItem)">
            <summary>
            Удаляет корневой элемент из операции
            </summary>
            <param name="item">Элемент операции</param>
            <returns>Значение true, если элемент успешно удален; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.DesktopOperationInfo.Add(TFlex.DOCs.Model.References.DesktopObject)">
            <summary>
            Добавляет объект к списку элементов операции
            </summary>
            <param name="desktopObject">Объект, поддерживающий механизм рабочего стола</param>
            <returns>Элемент операции рабочего стола</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.DesktopOperationInfo.ToString">
            <summary>
            Возвращает строковое представление операции рабочего стола
            </summary>
            <returns>Строковое представление операции</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Desktop.DesktopOperationType">
            <summary>
            Тип операции рабочего стола
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Desktop.DesktopOperationType.CheckOut">
            <summary>
            Взятие на редактирование
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Desktop.DesktopOperationType.CheckOutForDelete">
            <summary>
            Взятие на редактирование для удаления
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Desktop.DesktopOperationType.CheckIn">
            <summary>
            Применение изменений
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Desktop.DesktopOperationType.UndoCheckOut">
            <summary>
            Отмена изменений
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Desktop.DesktopOperationType.Restore">
            <summary>
            Восстановление
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Desktop.DesktopOperationItem">
            <summary>
            Элемент операции рабочего стола
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.DesktopOperationItem.Item">
            <summary>
            Возвращает объект, над которым выполняется операция
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.DesktopOperationItem.ReferenceId">
            <summary>
            Возвращает Id справочника, к которому относится объект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.DesktopOperationItem.ObjectId">
            <summary>
            Возвращает Id объекта, над которым выполняется операция
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.DesktopOperationItem.DependentItems">
            <summary>
            Список элементов операции, зависимых от текущего элемента
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.DesktopOperationItem.GetAllDependentItems">
            <summary>
            Список всех зависимых элементов операции
            </summary>
            <returns>Список элементов операции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.DesktopOperationItem.ToString">
            <summary>
            Возвращает строковое представление элемента операции
            </summary>
            <returns>Строковое представление элемента операции</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Desktop.DesktopObjectsException">
            <summary>
            Исключение, возникающее при ошибке в операции рабочего стола
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.DesktopObjectsException.#ctor(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject})">
            <summary>
            Инициализирует новый экземпляр класса заданным набором объектов
            </summary>
            <param name="objects">Коллекция объектов, для которых не может быть выполнена операция</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.DesktopObjectsException.#ctor(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject},System.String)">
            <summary>
            Инициализирует новый экземпляр класса заданным набором объектов и указанным сообщением об ошибке
            </summary>
            <param name="objects">Коллекция объектов, для которых не может быть выполнена операция</param>
            <param name="message">Сообщение об ошибке</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.DesktopObjectsException.#ctor(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject},System.String,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса заданным набором объектов, указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="objects">Коллекция объектов, для которых не может быть выполнена операция</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="innerException">Исключение, вызвавшее текущее исключение</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.DesktopObjectsException.Objects">
            <summary>
            Возвращает коллекцию объектов, для которых не может быть выполнена операция
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.DesktopObjectsException.GetObjectsString">
            <summary>
            Возвращает строковое представление коллекции объектов, для которых не может быть выполнена операция 
            </summary>
            <returns></returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Desktop.CanNotCheckOutException">
            <summary>
            Исключение, возникающее при ошибке в операции "Взятие на редактирование"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.CanNotCheckOutException.#ctor(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject})">
            <summary>
            Инициализирует новый экземпляр класса заданным набором объектов
            </summary>
            <param name="objects">Коллекция объектов, для которых не может быть выполнена операция "Взятие на редактирование"</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.CanNotCheckOutException.#ctor(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject},System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса заданным набором объектов и ссылкой на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="objects">Коллекция объектов, для которых не может быть выполнена операция "Взятие на редактирование"</param>
            <param name="innerException">Исключение, вызвавшее текущее исключение</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.CanNotCheckOutException.Message">
            <summary>
            Возвращает сообщение об ошибке
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Desktop.CanNotCheckInException">
            <summary>
            Исключение, возникающее при ошибке в операции "Применение изменений"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.CanNotCheckInException.#ctor(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject})">
            <summary>
            Инициализирует новый экземпляр класса заданным набором объектов
            </summary>
            <param name="objects">Коллекция объектов, для которых не может быть выполнена операция "Применение изменений"</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.CanNotCheckInException.#ctor(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject},System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса заданным набором объектов и ссылкой на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="objects">Коллекция объектов, для которых не может быть выполнена операция "Применение изменений"</param>
            <param name="innerException">Исключение, вызвавшее текущее исключение</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.CanNotCheckInException.Message">
            <summary>
            Возвращает сообщение об ошибке
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Desktop.CanNotUndoCheckOutException">
            <summary>
            Исключение, возникающее при ошибке в операции "Отмена изменений"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.CanNotUndoCheckOutException.#ctor(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject})">
            <summary>
            Инициализирует новый экземпляр класса заданным набором объектов
            </summary>
            <param name="objects">Коллекция объектов, для которых не может быть выполнена операция "Отмена изменений"</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.CanNotUndoCheckOutException.#ctor(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject},System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса заданным набором объектов и ссылкой на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="objects">Коллекция объектов, для которых не может быть выполнена операция "Отмена изменений"</param>
            <param name="innerException">Исключение, вызвавшее текущее исключение</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.CanNotUndoCheckOutException.Message">
            <summary>
            Возвращает сообщение об ошибке
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Desktop.CanNotRestoreException">
            <summary>
            Исключение, возникающее при ошибке в операции "Восстановление"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.CanNotRestoreException.#ctor(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject})">
            <summary>
            Инициализирует новый экземпляр класса заданным набором объектов
            </summary>
            <param name="objects">Коллекция объектов, для которых не может быть выполнена операция "Восстановление"</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.CanNotRestoreException.#ctor(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.DesktopObject},System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса заданным набором объектов и ссылкой на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="objects">Коллекция объектов, для которых не может быть выполнена операция "Восстановление"</param>
            <param name="innerException">Исключение, вызвавшее текущее исключение</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.CanNotRestoreException.Message">
            <summary>
            Возвращает сообщение об ошибке
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Desktop.HistoryFilters">
            <summary>
            Фильтр истории изменений
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.HistoryFilters.#ctor">
            <summary>
            Создает новый экземпляр фильтра
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Desktop.HistoryFilters.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает новый экземпляр фильтра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.HistoryFilters.FromDateTime">
            <summary>
            Дата изменения "От"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.HistoryFilters.ToDateTime">
            <summary>
            Дата изменения "До"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.HistoryFilters.FromChangelistNumber">
            <summary>
            Номер изменения "От"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.HistoryFilters.ToChangelistNumber">
            <summary>
            Номер изменения "До"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Desktop.HistoryFilters.HostName">
            <summary>
            Рабочее место
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Diagnostics.ConnectionInfo">
            <summary>
            Информация о подключении пользователя к серверу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Diagnostics.ConnectionInfo.ConnectionCount">
            <summary>
            Возвращает количество подключений
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Diagnostics.ConnectionInfo.GetLockedLicenses">
            <summary>
            Возвращает список используемых лицензий
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Diagnostics.ConnectionInfo.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns>Строковое представление объекта</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Diagnostics.ModelException">
            <summary>
            Базовое исключение API DOCs
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Diagnostics.ModelException.Code">
            <summary>
            Возвращает код ошибки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Diagnostics.ModelException.Message">
            <summary>
            Возвращает сообщение об ошибке
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Diagnostics.ModelException.ErrorDetails">
            <summary>
            Возвращает подробности ошибки
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Diagnostics.ServerNotFoundException">
            <summary>
            Исключение, возникающее, если сервер недоступен или не существует
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Diagnostics.ServerNotRespondingException">
            <summary>
            Исключение, возникающее, если сервер не отвечает
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Diagnostics.ConnectionLostException">
            <summary>
            Исключение, возникающее, если потеряно соединение с сервером
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Diagnostics.CommunicationErrorException">
            <summary>
            Исключение, возникающее в случае ошибки при обмене данными с сервером
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Diagnostics.UserReferenceNotAvailableException">
            <summary>
            Исключение, возникающее, если недоступен справочник "Группы и пользователи"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Diagnostics.ServerErrorException">
            <summary>
            Исключение, возникающее при ошибке на сервере
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Diagnostics.InternalServerErrorException">
            <summary>
            Исключение, возникающее при внутренней ошибке сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Diagnostics.InternalServerErrorException.ErrorDetails">
            <summary>
            Возвращает подробности ошибки
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Diagnostics.DatabaseServerErrorException">
            <summary>
            Исключение, возникающее при ошибке обращения к серверу БД
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.AuthorizationErrorException">
            <summary>
            Исключение, возникающее при ошибке соединения с сервером из-за неправильного логина или пароля
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.LicenseException">
            <summary>
            Исключение, возникающее при ошибке соединения с сервером из-за отсутствия доступных лицензий
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.ConfigurationAccessException">
            <summary>
            Исключение, возникающее при ошибке соединения с сервером из-за отсутствия доступа к конфигурации
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.ImportErrorException">
            <summary>
            Исключение, возникающее при ошибке импорта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ImportErrorException.ImportFileVersion">
            <summary>
            Версия импортируемого файла
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.ExportErrorException">
            <summary>
            Исключение, возникающее при ошибке экспорта
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.ImportCanceledException">
            <summary>
            Исключение, возникающее при отмене импорта пользователем
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.ExportCanceledException">
            <summary>
            Исключение, возникающее при отмене экспорта пользователем
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.ConcurrencyException">
            <summary>
            Исключение, возникающее при ошибке соединения с сервером из-за несовместимости версий клиента и сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ConcurrencyException.ServerVersion">
            <summary>
            Возвращает версию сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ConcurrencyException.RequiredServerVersion">
            <summary>
            Возвращает версию сервера, необходимую для данного клиента
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.ParameterNotFoundException">
            <summary>
            Исключение, возникающее при ошибке "Параметр не найден"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.ParameterGroupNotFoundException">
            <summary>
            Исключение, возникающее при ошибке "Не найдена группа параметров или справочник"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.ParameterSystemProtectedException">
            <summary>
            Исключение, возникающее при ошибке "Параметр заблокирован системным типом"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.ParameterGroupSystemProtectedException">
            <summary>
            Исключение, возникающее при ошибке "Группа параметров или справочник являются системными. Изменение невозможно"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.ParameterNotSavedException">
            <summary>
            Исключение, возникающее при ошибке "Не удалось сохранить параметр"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.ParameterGroupNotSavedException">
            <summary>
            Исключение, возникающее при ошибке "Не удалось сохранить группу параметров или справочник"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.ObjectHasChildrenException">
            <summary>
            Исключение, возникающее при ошибке "Объект содержит входящие объекты - удаление невозможно"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.TableNameReservedException">
            <summary>
            Исключение, возникающее при ошибке "Имя таблицы зарезервировано для системных приложений"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.ServerConnection">
            <summary>
            Соединение с сервером приложений
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.ServerConnection._bytesSent">
            <summary>
             Возвращает количество отправленных байт (в сжатом виде)
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.ServerConnection._bytesReceived">
            <summary>
            Возвращает количество полученных байт (в сжатом виде)
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.ServerConnection._unzippedBytesReceived">
            <summary>
            Возвращает количество отправленных байт (в распакованном виде)
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.ServerConnection._unzippedBytesSent">
            <summary>
            Возвращает количество полученных байт (в распакованном виде)
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.ServerConnection.Certificates">
            <summary>
            Коллекция сертификатов, для которых пользователь указал код доступа
            (если соединение создаётся из ServerGateway, то данное поле будет заполнено автоматически)
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.ServerConnection.ConnectionLost">
            <summary>
            Событие, возникающее при потере соединения
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.ServerConnection.ConnectionRestored">
            <summary>
            Событие, возникающее при восстановлении соединения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.#ctor">
            <summary>
            Создать соединение с сервером
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.Open(TFlex.DOCs.Model.ConnectionParameters)">
            <summary>
            Подключается к серверу использую заданные параметры подключения
            </summary>
            <param name="parameters">Параметры подключения</param>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.Open(System.Boolean,System.Nullable{System.Guid})">
            <summary>
            Подключается к серверу с использованием текущего логина либо с отображением диалога подключения
            </summary>
            <param name="reregister">Значение true, если требуется всегда показывать диалог подключения</param>
            <param name="configuration">Конфигурация</param>
            <returns>Значение true, если соединение установлено, в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.Open(System.String,System.Nullable{System.Guid})">
            <summary>
            Подключается к серверу с использованием авторизации Windows
            </summary>
            <param name="server">Имя сервера</param>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.Open(System.String,TFlex.PdmFramework.Login.MD5HashString,System.String,System.Nullable{System.Guid},System.Net.IWebProxy)">
            <summary>
            Подключается к серверу с использованием авторизации сервера
            </summary>
            <param name="userName">Имя пользователя</param>
            <param name="password">Пароль пользователя</param>
            <param name="server">Имя сервера</param>
            <param name="configurationGuid">Конфигурация</param>
            <param name="proxy">Настройки proxy-сервера</param>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.Close">
            <summary>
            Отключается от сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerConnection.ConnectionParameters">
            <summary>
            Возвращает параметры текущего подключения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.SetConnectionParameters">
            <summary>
            Установить параметры подключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerConnection.WorkingFolder">
            <summary>
            Возвращает путь к рабочей папке пользователя
            </summary>
            <returns>Путь к рабочей папке</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.SetWorkingFolder(System.String)">
            <summary>
            Задает рабочую папку пользователя
            </summary>
            <param name="path">Путь к рабочей папке</param>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerConnection.IsConnected">
            <summary>
            Возвращает статус соединения (подключено/отключено)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerConnection.IsDemo">
            <summary>
            Возвращает значение, указывающее, является ли текущая версия ознакомительной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerConnection.Version">
            <summary>
            Возвращает версию сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerConnection.EvaluationTime">
            <summary>
            Возвращает дату прекращения работы ознакомительной версии
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerConnection.UpdateVersion">
            <summary>
            Возвращает версию, доступную для обновления
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerConnection.UpdateRequestRequired">
            <summary>
            Возвращает true, если для обновления необходимо подтверждение пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerConnection.Callback">
            <summary>
            Возвращает или задаёт интерфейс обратных вызовов API T-FLEX DOCs
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerConnection.ServerName">
            <summary>
            Возвращает имя сервера
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.GetActiveConnections">
            <summary>
            Возвращает список активных соединений
            </summary>
            <returns>Список активных соединений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.GetAvailableLicenses">
            <summary>
            Возвращает список доступных лицензий
            </summary>
            <returns>Список доступных лицензий</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.GetLicenseKeyInfo">
            <summary>
            Возвращает информацию о ключе
            </summary>
            <returns>Информация о ключе</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.GetClientConfigurations">
            <summary>
            Возвращает список конфигураций системы
            </summary>
            <returns>Список конфигураций</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.GetWebConfigurations">
            <summary>
            Возвращает список веб-конфигураций системы
            </summary>
            <returns>Список конфигураций</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.GetConfigurations">
            <summary>
            Возвращает список всех конфигураций системы (клиент + web)
            </summary>
            <returns>Список конфигураций</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.ExportConfigurations(System.IO.Stream,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Configuration.BaseConfiguration})">
            <summary>
            Выполняет экспорт указанной коллекции конфигураций в заданный поток
            </summary>
            <param name="stream">Поток для экспорта конфигураций</param>
            <param name="configurations">Коллекция конфигураций для экспорта</param>
            <returns>Значение true, если конфигурации успешно экспортированы; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.ImportConfigurations(System.IO.Stream)">
            <summary>
            Выполняет импорт конфигураций системы из указанного потока
            </summary>
            <param name="stream">Поток, содержащий конфигурации</param>
            <returns>Возвращает список импортированных конфигураций</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerConnection.CurrentConfiguration">
            <summary>
            Возвращает текущую конфигурацию системы
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.GetCertificatesInfo">
            <summary>
            Получить Guid и названия открытых сертификатов
            </summary>
            <returns>Коллекция Guid и названий открытых сертификатов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.CloseCertificate(TFlex.DOCs.Model.References.Certificate.Certificate)">
            <summary>
            Закрыть сертификат
            </summary>
            <param name="certificate">Закрываемый сертификат</param>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.CloseCertificate(System.Guid)">
            <summary>
            Закрыть сертификат
            </summary>
            <param name="certificateGuid">Guid закрываемого сертификата</param>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.CloseCertificates">
            <summary>
            Закрыть все сертификаты и открытые ключи шифрования
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.SendCertificates">
            <summary>
            Отправить сертификаты на сервер приложений, открыть симметричные ключи шифрования
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerConnection.Mail">
            <summary>
            Возвращает почтовую службу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerConnection.BytesSent">
            <summary>
            Возвращает количество отправленных байт (в сжатом виде)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerConnection.BytesReceived">
            <summary>
            Возвращает количество полученных байт (в сжатом виде)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerConnection.UnzippedBytesSent">
            <summary>
            Возвращает количество отправленных байт (в распакованном виде)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerConnection.UnzippedBytesReceived">
            <summary>
            Возвращает количество полученных байт (в распакованном виде)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerConnection.SentPercentsZipped">
            <summary>
            Коэффициент сжатия исходящего трафика, в процентах
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerConnection.ReceivedPercentsZipped">
            <summary>
            Коэффициент сжатия входящего трафика, в процентах
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerConnection.IsCertificateItemsEmpty">
            <summary>
            Коллекция пустая
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.GetOpenedCertificate(System.Guid)">
            <summary>
            Получить описание открытого сертификата из текущего указанного соединения с СУБД
            </summary>
            <param name="certificateGuid">Guid искомого сертификата</param>
            <returns>Описание открытого сертификата либо null</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.IsCertificateOpened(System.Guid,System.Boolean)">
            <summary>
            Максимально быстро проверить, открыт ли указанный сертификат
            </summary>
            <param name="certificateGuid">Guid проверяемого сертификата</param>
            <param name="checkExpiration">true - дополнительно проверяется срок действия сертификата</param>
            <returns>true - сертификат открыт, срок действия не истёк</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.GetCertificateKeyName(System.Guid)">
            <summary>
            Получить имя симметричного ключа шифрования для указанного открытого сертификата
            </summary>
            <param name="certificateGuid">Guid искомого сертификата</param>
            <returns>Имя симметричного ключа шифрования или String.Empty</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.ClearCertificateItems">
            <summary>
            Очистить коллекцию открытых сертификатов
            (все изменения передаются на сервер приложений)
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerConnection.AddCertificateItem(TFlex.DOCs.Common.Encryption.CertificateSessionItem)">
            <summary>
            Добавить или заменить информацию об открытом сертификате
            (все изменения передаются на сервер приложений)
            </summary>
            <param name="item">Информация об открытом сертификате</param>
        </member>
        <member name="T:TFlex.DOCs.Model.ConnectionLostEventArgs">
            <summary>
            Параметры события потери соединения с сервером
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ConnectionLostEventArgs.Restore">
            <summary>
            Возвращает или задаёт необходимость восстановить соединение
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.ServerSearcher">
            <summary>
            Класс для поиска доступных серверов T-FLEX DOCs
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerSearcher.#ctor">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerSearcher.Timeout">
            <summary>
            Возвращает или задает время ожидания операции поиска
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerSearcher.Dispose">
            <summary>
            Освобождает используемые ресурсы
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerSearcher.FindServers">
            <summary>
            Выполняет поиск доступных серверов
            </summary>
            <returns>Массив объектов <see cref="T:TFlex.DOCs.Model.ServerInfo"/>, содержащих информацию о доступных серверах</returns>
        </member>
        <member name="E:TFlex.DOCs.Model.ServerSearcher.ServerFound">
            <summary>
            Событие, возникающее при нахождении сервера при асинхронном поиске
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.ServerSearcher.FindServersCompleted">
            <summary>
            Событие, возникающее при завершении асинхронного поиска серверов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerSearcher.FindServersAsync(System.Object)">
            <summary>
            Начинает асинхронный поиск доступных серверов
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerSearcher.CancelFindServers(System.Object)">
            <summary>
            Отменяет поиск серверов
            </summary>
            <param name="state"></param>
        </member>
        <member name="T:TFlex.DOCs.Model.ServerFoundEventArgs">
            <summary>
            Аргументы события обнаружения сервера при асинхронном поиске
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerFoundEventArgs.Server">
            <summary>
            Возвращает описание найденного сервера
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.ServerInfo">
            <summary>
            Описание сервера T-FLEX DOCs
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.ServerInfo.Empty">
            <summary>
            Возвращает пустое описание
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Создает описание сервера
            </summary>
            <param name="name">Имя сервера</param>
            <param name="instance">Имя экземпляра</param>
            <param name="version">Версия сервера</param>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerInfo.Name">
            <summary>
            Возвращает имя сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerInfo.Instance">
            <summary>
            Возвращает имя экземпляра сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerInfo.IsEmpty">
            <summary>
            Возвращает значение, указывающее, является ли описание пустым
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerInfo.GetHashCode">
            <summary>
            Возвращает хэш-код объекта
            </summary>
            <returns>Хэш-код в виде 32-битного целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerInfo.op_Equality(TFlex.DOCs.Model.ServerInfo,TFlex.DOCs.Model.ServerInfo)">
            <summary>
            Возвращает значение, указывающее, равны ли указанные объекты
            </summary>
            <param name="first">Первый объект для сравнения</param>
            <param name="second">Второй объект для сравнения</param>
            <returns>Значение true, если объекты равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerInfo.op_Inequality(TFlex.DOCs.Model.ServerInfo,TFlex.DOCs.Model.ServerInfo)">
            <summary>
            Возвращает значение, указывающее, различаются ли указанные объекты
            </summary>
            <param name="first">Первый объект для сравнения</param>
            <param name="second">Второй объект для сравнения</param>
            <returns>Значение true, если объекты различаются; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerInfo.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если заданный объект равен текущему; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerInfo.ToString">
            <summary>
            Возвращает строковое представление объекта
            </summary>
            <returns>Строковое представление объекта</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.SpecialReferenceFactory">
            <summary>
            Базовый класс для создания экземпляров специального справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.SpecialReferenceFactory.IsStatic">
            <summary>
            Возвращает значение, указывающее, является ли справочник статическим (возможно создание только одного экземпляра справочника)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.SpecialReferenceFactory.ReferenceType">
            <summary>
            Возвращает тип, описывающий справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.SpecialReferenceFactory.ClassTreeType">
            <summary>
            Возвращает тип, описывающий дерево типов справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.SpecialReferenceFactory.LoadRequiredParameters(TFlex.DOCs.Model.References.LoadSettings,System.Boolean)">
            <summary>
            
            </summary>
            <param name="settings"></param>
            <param name="oneToOneLink"></param>
        </member>
        <member name="T:TFlex.DOCs.Model.SpecialReferenceFactory`2">
            <summary>
            Обобщенный базовый класс для создания экземпляров специального справочника
            </summary>
            <typeparam name="TReference">Тип, описывающий справочник</typeparam>
            <typeparam name="TClassTree">Тип, описывающий дерево типов справочника</typeparam>
        </member>
        <member name="M:TFlex.DOCs.Model.SpecialReferenceFactory`2.CreateReference(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает экземпляр справочника
            </summary>
            <param name="masterGroup">Группа параметров справочника</param>
            <returns>Справочник</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.SpecialReferenceFactory`2.CreateClassTree(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает дерево типов справочника
            </summary>
            <param name="masterGroup">Группа параметров справочника</param>
            <returns>Дерево типов справочника</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.SpecialReferenceFactory`2.ReferenceType">
            <summary>
            Возвращает тип, описывающий справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.SpecialReferenceFactory`2.ClassTreeType">
            <summary>
            Возвращает тип, описывающий дерево типов справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.ParameterGroupManager">
            <summary>
            Базовый тип для объекта, содержащего группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ParameterGroupManager.Guid">
            <summary>
            Возвращает Guid объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ParameterGroupManager.Id">
            <summary>
            Возвращает Id объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ParameterGroupManager.GetRelations">
            <summary>
            Возвращает коллекцию групп параметров объекта
            </summary>
            <returns>Коллекция групп параметров</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ParameterGroupManager.FindRelation(System.Guid)">
            <summary>
            Производит поиск группы параметров по ее Guid
            </summary>
            <param name="groupGuid">Guid группы параметров</param>
            <returns>Группа параметров</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ParameterGroupManager.GetLinks">
            <summary>
            Возвращает коллекцию групп параметров, являющихся связями
            </summary>
            <returns>Коллекция групп параметров</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ParameterGroupManager.GetOneToOneRelations">
            <summary>
            Возвращает коллекцию групп параметров, являющихся отношениями 1:1
            </summary>
            <returns>Коллекция групп параметров</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ParameterGroupManager.GetOneToManyRelations">
            <summary>
            Возвращает коллекцию групп параметров, являющихся отношениями 1:N
            </summary>
            <returns>Коллекция групп параметров</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ParameterGroupManager.GetOneToManyRelations(System.Boolean)">
            <summary>
            Возвращает коллекцию групп параметров, являющихся отношениями 1:N (с возможностью указать, требуется ли включать в результат связи на любой справочник)
            </summary>
            <param name="includeAnyReferenceLinks">Значение true, если требуется включить связи на любой справочник; в противном случае - значение false</param>
            <returns>Коллекция групп параметров</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.ParameterGroupManager.OneToOneParameters">
            <summary>
            Возвращает коллекцию параметров, входящих в группы параметров 1:1 
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ParameterGroupManager.GetRequiredParameters">
            <summary>
            Возвращает список параметров, обязательных для заполнения
            </summary>
            <returns>Список описаний параметров</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.ParameterGroupManager.OneToOneTables">
            <summary>
            Возвращает коллекцию групп параметров, являющихся группами параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ParameterGroupManager.OneToOneLinks">
            <summary>
            Возвращает коллекцию групп параметров, являющихся связями 1:1
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ParameterGroupManager.OneToManyTables">
            <summary>
            Возвращает коллекцию групп параметров, являющихся списками объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ParameterGroupManager.OneToManyLinks">
            <summary>
            Возвращает коллекцию групп параметров, являющихся связями 1:N
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ParameterGroupManager.AnyReferenceLinks">
            <summary>
            Возвращает коллекцию групп параметров, являющихся связями на любой справочник
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ParameterGroupManager.GetEventHandlers(TFlex.DOCs.Model.References.Events.ParameterGroupEvent)">
            <summary>
            Возвращает список обработчиков указанного события (в случае, если событие не указано - список обработчиков всех событий)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ParameterGroupManager.Events">
            <summary>
            Возвращает коллекцию событий, возможных для объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ParameterGroupManager.GetAllGroups">
            <summary>
            Возвращает коллекцию всех вложенных групп параметров
            </summary>
            <returns>Коллекция всех вложенных групп параметров</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ParameterGroupManager.FindOneToManyTable(System.Int32)">
            <summary>
            Производит поиск списка объектов по его Id
            </summary>
            <param name="id">Id списка объектов</param>
            <returns>Группа параметров, описывающая список объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ParameterGroupManager.FindOneToManyTable(System.Guid)">
            <summary>
            Производит поиск списка объектов по его Guid
            </summary>
            <param name="guid">Guid списка объектов</param>
            <returns>Группа параметров, описывающая список объектов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ParameterGroupManager.FindOneToManyTable(System.String)">
            <summary>
            Производит поиск списка объектов по его имени
            </summary>
            <param name="guid">Имя списка объектов</param>
            <returns>Группа параметров, описывающая список объектов</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Signatures.SignatureState">
            <summary>
            Состояние подписи
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Signatures.SignatureState.AddedOnly">
            <summary>
            Добавлена
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Signatures.SignatureState.UserLocked">
            <summary>
            Установлена пользователем
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Signatures.Signature">
            <summary>
            Подпись
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.Signature.SignatureTypeCollection">
            <summary>
            Возвращает коллекцию типов подписей
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.Signature.Signatures">
            <summary>
            Возвращает коллекцюи подписей, в которую входит данная подпись
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.Signature.Id">
            <summary>
            Возвращает Id подписи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.Signature.TypeId">
            <summary>
            Возвращает Id типа подписи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.Signature.SignatureObjectType">
            <summary>
            Возвращает тип подписи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.Signature.UserObject">
            <summary>
            Возвращает пользователя или группу пользователей, назначенных для подписи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.Signature.State">
            <summary>
            Возвращает состояние подписи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.Signature.UserId">
            <summary>
            Возвращает Id пользователя или группы пользователей
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.Signature.UserName">
            <summary>
            Возвращает наименование пользователя или группы пользователей
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.Signature.SignatureDate">
            <summary>
            Возвращает дату установки подписи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.Signature.Resolution">
            <summary>
            Возвращает резолюцию к подписи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Signatures.Signature.Edit">
            <summary>
            Выполняет редактирование подписи
            </summary>
            <returns>Значение true, если подпись успешно отредактирована; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.Signature.CanDelete">
            <summary>
            Возвращает значение, указывающее, может ли подпись быть удалена
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Signatures.Signature.Delete">
            <summary>
            Удаляет подпись
            </summary>
            <returns>Значение true, если подпись успешно удалена; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.Signature.Item(TFlex.DOCs.Model.Signatures.SignatureParameter)">
            <summary>
            Возвращает значение указанного параметра подписи
            </summary>
            <param name="parameter">Параметр подписи</param>
            <returns>Значение параметра</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Signatures.SignatureParameter">
            <summary>
            Параметр подписи
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Signatures.SignatureParameter.LastName">
            <summary>
            Фамилия пользователя
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Signatures.SignatureParameter.ShortName">
            <summary>
            Короткое имя пользователя
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Signatures.SignatureParameter.Date">
            <summary>
            Дата подписания
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Signatures.SignatureParameter.Resolution">
            <summary>
            Резолюция
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Signatures.SignatureParameter.SignatureImage">
            <summary>
            Изображение подписи
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Signatures.SignatureParameter.Type">
            <summary>
            Тип подписи
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Signatures.SignatureParameter.IsSet">
            <summary>
            Установлена
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Signatures.SignatureParameter.User">
            <summary>
            Пользователь
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Signatures.SignatureParameterExtensions">
            <summary>
            Методы расширения для параметров подписи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Signatures.SignatureParameterExtensions.GetName(TFlex.DOCs.Model.Signatures.SignatureParameter)">
            <summary>
            Возвращает наименование параметра
            </summary>
            <param name="parameter">Параметр подписи</param>
            <returns>Наименование параметра</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Signatures.SignatureParameterExtensions.GetValueType(TFlex.DOCs.Model.Signatures.SignatureParameter)">
            <summary>
            Возвращает тип значения параметра подписи
            </summary>
            <param name="parameter">Параметр подписи</param>
            <returns>Тип значения параметра</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Signatures.SignatureCollection">
            <summary>
            Коллекция подписей объекта справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Signatures.SignatureCollection.#ctor(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Создает экземпляр класса для указанного объекта справочника
            </summary>
            <param name="referenceObject">Объект справочника</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.SignatureCollection.Types">
            <summary>
            Возвращает коллекцию возможных типов подписей
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.SignatureCollection.Object">
            <summary>
            Возврщает объект справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Signatures.SignatureCollection.Add(TFlex.DOCs.Model.Signatures.SignatureType,TFlex.DOCs.Model.References.Users.UserReferenceObject)">
            <summary>
            Добавляет подпись
            </summary>
            <param name="type">Тип подписи</param>
            <param name="user">Пользователь или группа пользователей</param>
            <returns>Добавленная подпись</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Signatures.SignatureCollection.AddAndSign(TFlex.DOCs.Model.Signatures.SignatureType,System.String)">
            <summary>
            Подписывает объект подписью указанного типа
            </summary>
            <param name="type">Тип подписи</param>
            <param name="resolution">Резолюция</param>
            <returns>Добавленная подпись</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Signatures.SignatureCollection.AddAndSign(TFlex.DOCs.Model.Signatures.SignatureType,TFlex.DOCs.Model.References.Users.UserReferenceObject,System.String)">
            <summary>
            Подписывает объект подписью указанного типа от имени заданного пользователя
            </summary>
            <param name="type">Тип подписи</param>
            <param name="user">Пользователь</param>
            <param name="resolution">Резолюция</param>
            <returns>Добавленная подпись</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Signatures.SignatureCollection.Clear(System.Boolean)">
            <summary>
            Сбрасывает подписи объекта
            </summary>
            <param name="setNotActual">Значение true, если требуется сделать подписи неактуальными (возможно только для объектов без поддержки рабочего стола); значение false - если требуется удалить подписи</param>
            <returns>Значение true, если подписи успешно сброшены; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Signatures.SignatureCollection.GetEnumerator">
            <summary>
            Возвращает перечислитель подписей для текущей коллекции
            </summary>
            <returns>Перечислитель подписей</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Signatures.SignatureType">
            <summary>
            Тип подписи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.SignatureType.Id">
            <summary>
            Возвращает Id типа подписи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.SignatureType.Guid">
            <summary>
            Возвращает Guid типа подписи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.SignatureType.Name">
            <summary>
            Возвращает наименование типа подписи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.SignatureType.Description">
            <summary>
            Возвращает описание типа подписи
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Signatures.SignatureType.ValidateUserAccess(TFlex.DOCs.Model.References.Users.UserReferenceObject,TFlex.DOCs.Model.Signatures.SignatureState,System.Boolean)">
            <summary>
            Возвращает значение, указывающее, является ли тип подписи доступным для указанного пользователя
            </summary>
            <param name="user">Объект справочника группы и пользователи</param>
            <returns>Значение true, если конфигурация доступна для указанного пользователя; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Signatures.SignatureType.IsSignatureTypeInUse">
            <summary>
            Возвращает значение, указывающее, является ли тип подписи используемым
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Signatures.SignatureType.Edit">
            <summary>
            Выполняет редактирование типа подписи
            </summary>
            <returns>Значение true, если тип подписи успешно отредактирован; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Signatures.SignatureType.Delete">
            <summary>
            Удаляет тип подписи
            </summary>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Signatures.SignatureType.ToString">
            <summary>
            Возвращает строковое представление типа подписи
            </summary>
            <returns>Строковое представление типа подписи</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Signatures.SignatureTypes">
            <summary>
            Коллекция типов подписей
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Signatures.SignatureTypes.#ctor">
            <summary>
            Создает новый экземпляр коллекции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Signatures.SignatureTypes.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает новый экземпляр коллекции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Signatures.SignatureTypes.AddSignatureType(System.String,System.String)">
            <summary>
            Добавляет новый тип подписи в коллекцию
            </summary>
            <param name="name">Наименование</param>
            <param name="description">Описание</param>
            <returns>Созданный тип подписи</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Signatures.SignatureTypes.GetEnumerator">
            <summary>
            Возвращает перечислитель типов подписей для коллекции
            </summary>
            <returns>Перечислитель типов подписей</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Stages.Scheme">
            <summary>
            Схема переходов стадий
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Scheme.#ctor">
            <summary>
            Создает новую схему переходов стадий
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Scheme.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает новую схему переходов стадий
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.Scheme.Id">
            <summary>
            Возвращает Id схемы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.Scheme.Guid">
            <summary>
            Возвращает Guid схемы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.Scheme.Name">
            <summary>
            Возвращает или задает наименование схемы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.Scheme.Comment">
            <summary>
            Возвращает или задает комментарий к схеме
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.Scheme.Stages">
            <summary>
            Возвращает коллекцию стадий текущей схемы
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Scheme.AddStage(TFlex.DOCs.Model.Stages.Stage)">
            <summary>
            Подключает указанную стадию к текущей схеме
            </summary>
            <param name="stage">Стадия</param>
            <returns>Стадия, подключенная к текущей схеме</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Scheme.BeginChanges">
            <summary>
            Переводит схему в состояние редактирования
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Scheme.EndChanges">
            <summary>
            Завершает редактирование схемы
            </summary>
            <returns>Значение true, если завершение редактирования выполнено успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Scheme.CancelChanges">
            <summary>
            Отменяет сделанные изменения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Scheme.Delete">
            <summary>
            Удаляет схему
            </summary>
            <returns>Значение true, если удаление выполнено успешно; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.Scheme.Changing">
            <summary>
            Возвращает значение, указывающее, находится ли схема в состоянии редактирования
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Scheme.ToString">
            <summary>
            Возвращает строковое представление схемы
            </summary>
            <returns>Строковое представление схемы</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Scheme.GetSchemes">
            <summary>
            Возвращает список всех схем переходов стадий в системе
            </summary>
            <returns>список всех схем переходов стадий в системе</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Scheme.GetSchemes(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Возвращает список всех схем переходов стадий в системе
            </summary>
            <returns>список всех схем переходов стадий в системе</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Stages.SchemeStage">
            <summary>
            Стадия в схеме переходов стадий
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.SchemeStage.Id">
            <summary>
            Возвращает Id стадии
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.SchemeStage.Guid">
            <summary>
            Возвращает Guid стадии
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.SchemeStage.Scheme">
            <summary>
            Возвращает схему
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.SchemeStage.Stage">
            <summary>
            Возврщает стадию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.SchemeStage.IsAdded">
            <summary>
            Возвращает значение, указывающее, является ли стадия добавленной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.SchemeStage.IsDeleted">
            <summary>
            Возвращает значение, указывающее, является ли стадия удаленной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.SchemeStage.Transitions">
            <summary>
            Возвращает список переходов из текущей стадии
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.SchemeStage.GetNextStages">
            <summary>
            Возвращает список стадий, в которые есть переходы из текущей стадии
            </summary>
            <returns>Список стадий, доступных из текущей стадии</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.SchemeStage.AddTransition(TFlex.DOCs.Model.Stages.SchemeStage,System.Boolean,System.Boolean)">
            <summary>
            Добавляет переход из текущей стадии в указанную
            </summary>
            <param name="stage">Стадия для перехода</param>
            <param name="isAutomatic">Значение true, если переключение по данному переходу должно быть автоматическим; в противном случае - значение false</param>
            <returns>Созданный переход между стадиями</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.SchemeStage.Delete">
            <summary>
            Удаляет стадию из схемы
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.SchemeStage.GetHashCode">
            <summary>
            Возвращает хэш-код стадии
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.SchemeStage.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если заданный объект равен текущему; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.SchemeStage.ToString">
            <summary>
            Возвращает строковое представление стадии
            </summary>
            <returns>Строковое представление стадии</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.SchemeStage.GetEnumerator">
            <summary>
            Возвращает перечислитель переходов для текущей стадии
            </summary>
            <returns>Перечислитель переходов для стадии</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Stages.SchemeStageTransition">
            <summary>
            Переход между стадиями в схеме
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.SchemeStageTransition.FromStage">
            <summary>
            Стадия, из которой осуществляется переход
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.SchemeStageTransition.ToStage">
            <summary>
            Стадия, в которую осуществляется переход
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.SchemeStageTransition.IsAutomatic">
            <summary>
            Возвращает значение, указывающее, является ли переключение по данному переходу автоматическим
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.SchemeStageTransition.IsManual">
            <summary>
            Возвращает значение, указывающее, является ли переключение по данному переходу ручным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.SchemeStageTransition.IsAdded">
            <summary>
            Возвращает значение, указывающее, является ли переход добавленным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.SchemeStageTransition.IsDeleted">
            <summary>
            Возврщает значение, указывающее, является ли переход удаленным
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.SchemeStageTransition.Delete">
            <summary>
            Удаляет переход
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Stages.Stage">
            <summary>
            Стадия
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.#ctor">
            <summary>
            Создает новую стадию
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает новую стадию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.Stage.Id">
            <summary>
            Возвращает Id стадии
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.Stage.Guid">
            <summary>
            Возвращает Guid стадии
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.Stage.Name">
            <summary>
            Возвращает или задает наименование стадии
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.Stage.Comment">
            <summary>
            Возвращает или задает комментарий к стадии
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.Stage.RequireModificationNotice">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли для смены данной стадии выпуск извещения об изменениях
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.Stage.SetModificationNoticeReady">
            <summary>
            Возвращает или задает значение, указывающее, переводит ли данная стадия извещение об изменениях в состояние готовности
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.BeginChanges">
            <summary>
            Переводит стадию в состояние редактирования
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.EndChanges">
            <summary>
            Завершает редактирование стадии
            </summary>
            <returns>Значение true, если завершение редактирования стадии выполнено успешно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.CancelChanges">
            <summary>
            Отменяет сделанные изменения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.Delete">
            <summary>
            Удаляет текущую стадию
            </summary>
            <returns>Значение true, если стадия успешно удалена; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Stages.Stage.Changing">
            <summary>
            Возвращает значение, указывающее, находится ли схема в состоянии редактирования
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.ToString">
            <summary>
            Возвращает строковое представление стадии
            </summary>
            <returns>Строковое представление стадии</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.SetObjectsStage(TFlex.DOCs.Model.Stages.Stage,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject})">
            <summary>
            Устанавливает указанную стадию набору объектов
            </summary>
            <param name="stage">Стадия</param>
            <param name="objects">Коллекция объектов справочника</param>
            <returns>Список объектов, для которых была установлена указанная стадия</returns>
            <remarks>Если пользователь не является администратором, стадия устанавливается только у объектов, у которых она не задана</remarks>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.ChangeObjectsStage(TFlex.DOCs.Model.Stages.Stage,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject})">
            <summary>
            Меняет стадии заданных объектов на указанную стадию (только в том случае, если для стадии объекта допустим такой переход)
            </summary>
            <param name="stage">Стадия</param>
            <param name="objects">Коллекция объектов справочника</param>
            <returns>Список объектов, для которых была установлена указанная стадия</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.AutomaticChangeObjectsStage(TFlex.DOCs.Model.Stages.Stage,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject})">
            <summary>
            Меняет стадии заданных объектов на указанную стадию (только в том случае, если для стадии объекта допустим такой переход в автоматическом режиме)
            </summary>
            <param name="stage">Стадия</param>
            <param name="objects">Коллекция объектов справочника</param>
            <returns>Список объектов, для которых была установлена указанная стадия</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.Clear(TFlex.DOCs.Model.ServerConnection,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject})">
            <summary>
            Удаляет стадию у набора объектов
            </summary>
            <param name="stage">Стадия</param>
            <param name="objects">Коллекция объектов справочника</param>
            <returns>Список объектов, для которых была установлена указанная стадия</returns>
            <remarks>Если пользователь не является администратором, стадия устанавливается только у объектов, у которых она не задана</remarks>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.Set(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject})">
            <summary>
            Устанавливает указанную стадию набору объектов
            </summary>
            <param name="objects">Коллекция объектов справочника</param>
            <returns>Список объектов, для которых была установлена указанная стадия</returns>
            <remarks>Если пользователь не является администратором, стадия устанавливается только у объектов, у которых она не задана</remarks>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.Change(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject})">
            <summary>
            Меняет стадии заданных объектов на указанную стадию (только в том случае, если для стадии объекта допустим такой переход)
            </summary>
            <param name="objects">Коллекция объектов справочника</param>
            <returns>Список объектов, для которых была установлена указанная стадия</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.AutomaticChange(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.References.ReferenceObject})">
            <summary>
            Меняет стадии заданных объектов на указанную стадию (только в том случае, если для стадии объекта допустим такой переход в автоматическом режиме)
            </summary>
            <param name="objects">Коллекция объектов справочника</param>
            <returns>Список объектов, для которых была установлена указанная стадия</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.GetStages">
            <summary>
            Возвращает список всех стадий в системе 
            </summary>
            <returns>Список стадий</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.GetStages(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Возвращает список всех стадий в системе 
            </summary>
            <returns>Список стадий</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.GetStages(TFlex.DOCs.Model.ReferenceInfo)">
            <summary>
            Возвращает список стадий, допустимых для объектов указанного справочника
            </summary>
            <param name="reference">Описание справочника</param>
            <returns>Список стадий, допустимых для объектов справочника</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.Find(System.Guid)">
            <summary>
            Производит поиск стадии по ее Guid
            </summary>
            <param name="stageGuid">Guid стадии</param>
            <returns>Стадия</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.Find(TFlex.DOCs.Model.ServerConnection,System.Guid)">
            <summary>
            Производит поиск стадии по ее Guid
            </summary>
            <param name="stageGuid">Guid стадии</param>
            <returns>Стадия</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.Find(System.String)">
            <summary>
            Производит поиск стадии по ее наименованию
            </summary>
            <param name="stageName">Наименование стадии</param>
            <returns>Стадия</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.Find(TFlex.DOCs.Model.ServerConnection,System.String)">
            <summary>
            Производит поиск стадии по ее наименованию
            </summary>
            <param name="stageName">Наименование стадии</param>
            <returns>Стадия</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Stages.Stage.LoadSimpleStages(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Загрузить краткие описания стадий
            </summary>
            <param name="connection">Соединение с базой данных</param>
            <returns>Краткие описания стадий (коллекция возвращается всегда). Ключ: id стадии, значение: краткое описание стадии</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.Builders.ParameterGroupActivationException">
            <summary>
            Исключение, которое вызывается при ошибке активации справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.Builders.ObjectFormatBuilder">
            <summary>
            Конструктор отображения объектов справочника или списка объектов
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.Builders.ObjectParameterFormatBuilder">
            <summary>
            Конструктор параметра отображения объекта
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.Builders.UniqueIndexBuilder">
            <summary>
            Конструктор условия уникальности
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.UniqueIndexBuilder.#ctor(TFlex.DOCs.Model.ReferenceInfo)">
            <summary>
            Создает экземпляр класса для создания нового условия уникальности для указанного справочника
            </summary>
            <param name="reference">Описание справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.UniqueIndexBuilder.#ctor(TFlex.DOCs.Model.Structure.UniqueIndex)">
            <summary>
            Создает экземпляр класса для редактирования указанного условия уникальности
            </summary>
            <param name="index">Условие уникальности</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.UniqueIndexBuilder.IsAdded">
            <summary>
            Возвращает значение, указывающее, является ли условие уникальности добавленным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.UniqueIndexBuilder.IsModified">
            <summary>
            Возвращает значение, указывающее, является ли условие уникальности измененным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.UniqueIndexBuilder.Reference">
            <summary>
            Возвращает описание справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.UniqueIndexBuilder.Index">
            <summary>
            Возвращает условие уникальности
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.UniqueIndexBuilder.Name">
            <summary>
            Возвращает или задает наименование
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.UniqueIndexBuilder.Parameters">
            <summary>
            Возвращает коллекцию параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.UniqueIndexBuilder.Save">
            <summary>
            Сохраняет условие уникальности
            </summary>
            <returns>Условие уникальности</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.UniqueIndexBuilder.ToString">
            <summary>
            Возвращает строковое представление условия уникальности
            </summary>
            <returns>Строковое представление условия уникальности</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.Builders.UniqueIndexBuilder.Parameter">
            <summary>
            Уникальный параметр
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.UniqueIndexBuilder.Parameter.#ctor(TFlex.DOCs.Model.Structure.Builders.UniqueIndexBuilder,TFlex.DOCs.Model.Structure.ParameterInfo,System.Boolean)">
            <summary>
            Создает экземпляр параметра
            </summary>
            <param name="builder">Конструктор условия уникальности</param>
            <param name="info">Описание параметра</param>
            <param name="checkEmptyValue">Значение, указывающее, нужно ли проверять пустые значения для данного параметра при проверке уникальности</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.UniqueIndexBuilder.Parameter.Builder">
            <summary>
            Возвращает конструктор условия, к которому относится параметр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.UniqueIndexBuilder.Parameter.CheckEmptyValue">
            <summary>
            Возвращает или задает значение, указывающее, нужно ли проверять пустые значения для данного параметра при проверке уникальности
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.Builders.UniqueIndexBuilder.ParameterCollection">
            <summary>
            Коллекция уникальных параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.UniqueIndexBuilder.Delete(TFlex.DOCs.Model.Structure.UniqueIndex)">
            <summary>
            Удаляет указанное условие уникальности
            </summary>
            <param name="index">Условие уникальности</param>
            <returns>Значение true, если удаление успешно завершено; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder">
            <summary>
            Конструктор свойств параметра
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList">
            <summary>
            Конструируемый список значений
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList.ParameterInfo">
            <summary>
            Возвращает описание параметра, для которого конструируется список значений
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList.Builder">
            <summary>
            Возвращает конструктор параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList.Type">
            <summary>
            Возвращает тип параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList.IsEditable">
            <summary>
            Возвращает или задает значение, указывающее, допускается ли редактирование значений
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList.IsExpandable">
            <summary>
            Возвращает или задает значение, указывающее, является ли список значений пополняемым пользователем
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList.CanAdd">
            <summary>
            Возвращает значение, указывающее, возможно ли добавление значений в список
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList.CanEdit">
            <summary>
            Возвращает значение, указывающее, возможно ли редактирование списка
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList.CanDelete">
            <summary>
            Возвращает значение, указывающее, возможно ли удаление значений из списка
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList.Clone">
            <summary>
            Создает копию списка значений параметра
            </summary>
            <returns>Список значений параметра</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList.Add(TFlex.DOCs.Model.Structure.ListValue)">
            <summary>
            Добавляет значение в список значений
            </summary>
            <param name="item">Добавляемое значение</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList.Clear">
            <summary>
            Очищает список значений
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList.Insert(System.Int32,TFlex.DOCs.Model.Structure.ListValue)">
            <summary>
            Вставляет значение в список значений по указанному индексу
            </summary>
            <param name="index">Индекс в списке значений</param>
            <param name="item">Добавляемое значение</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли список значений доступным только для чтения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList.Remove(TFlex.DOCs.Model.Structure.ListValue)">
            <summary>
            Удаляет значение из списка значений
            </summary>
            <param name="item">Удаляемое значение</param>
            <returns>Значение true, если значение успешно удалено из списка; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList.RemoveAt(System.Int32)">
            <summary>
            Удаляет из списка значение по указанному индексу
            </summary>
            <param name="index">Индекс в списке значений</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList.Item(System.Int32)">
            <summary>
            Возвращает или задает значение, находящееся в списке по указанному индексу
            </summary>
            <param name="index">Индекс в списке значений</param>
            <returns>Значение по указанному индексу</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList.SetValues(TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList)">
            <summary>
            Формирует состав списка значений на основании указанного конструируемого списка
            </summary>
            <param name="list">Конструируемый список значений</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ValueList.SetValues(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Structure.ListValue})">
            <summary>
            Формирует состав списка значений на основании указанной коллекции значений списка
            </summary>
            <param name="values">Коллекция значений списка</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.#ctor(TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает экземпляр класса для редактирования указанного параметра
            </summary>
            <param name="info">Описание параметра</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает экземпляр класса для создания параметра
            </summary>
            <param name="group">Группа параметров - владелец создаваемого параметра</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Создает экземпляр класса для создания нового параметра на основании уже существующего
            </summary>
            <param name="group">Группа параметров - владелец создаваемого параметра</param>
            <param name="sourceParameter">Описание параметра, на основании которого создается новый параметр</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.CopyFrom(TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Копирует свойства из указанного параметра
            </summary>
            <param name="sourceParameter">Описание параметра</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ParameterInfo">
            <summary>
            Возвращает описание параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ParameterGroup">
            <summary>
            Возвращает описание группы параметров, в которую входит параметр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.IsAdded">
            <summary>
            Возвращает значение, указывающее, является ли параметр добавленным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.IsModified">
            <summary>
            Возвращает значение, указывающее, является ли параметр модифицированным
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.Save">
            <summary>
            Сохраняет параметр
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.Delete(TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Удаляет указанный параметр
            </summary>
            <param name="parameter">Описание параметра</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.Type">
            <summary>
            Возвращает или задает тип параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.Name">
            <summary>
            Возвращает или задает наименование параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.Comment">
            <summary>
            Возвращает или задает комментарий к параметру
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.MaxLength">
            <summary>
            Возвращает или задает максимальную длину поля
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ParameterFormat">
            <summary>
            Возвращает или задает формат параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.FieldName">
            <summary>
            Возвращает или задает имя поля (в БД)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.IsVisible">
            <summary>
            Возвращает или задает видимость параметра в интерфейсе
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.CertificateGuid">
            <summary>
            Идентификатор сертификата, который назначен параметру для шифрования
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.AllowEdit">
            <summary>
            Возвращает или задает значение, указывающее, разрешено ли редактирование параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.AllowChangeFromGrid">
            <summary>
            Возвращает или задает значение, указывающее, поддерживает ли параметр прозрачное редактирование
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.AllowNull">
            <summary>
            Возвращает или задает значение, указывающее, поддерживает ли параметр пустые значения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.AlwaysPresent">
            <summary>
            Возвращает или задает значение, указывающее, является ли параметр обязательным для заполнения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.DefaultValue">
            <summary>
            Возвращает или задает значение параметра по умолчанию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.IsIndexed">
            <summary>
            Возвращает или задает значение, указывающее, является ли параметр индексированным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.Unit">
            <summary>
            Возвращает или задает единицу измерения параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ContainsValueList">
            <summary>
            Возвращает или задает значение, указывающее, содержит ли параметр список значений
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.ParameterValueList">
            <summary>
            Возвращает список значений параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.UserControl">
            <summary>
            Возвращает или задает элемент управления
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.PreviousPropertiesState">
            <summary>
            Предыдущее состояние ключевых свойств параметра в виде коллекции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterInfoBuilder.FixParameterState">
            <summary>
            Зафиксировать текущее состояние параметра
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.Builders.LinkGroupBuilder">
            <summary>
            Конструктор группы параметров, описывающей связь
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.LinkGroupBuilder.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает экземпляр класса для редактирования указанной связи
            </summary>
            <param name="group">Группа параметров, описывающая связь</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.LinkGroupBuilder.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает экземпляр класса для создания новой связи
            </summary>
            <param name="masterGroup">Группа параметров - владелец создаваемой связи</param>
            <param name="classObject">Тип объектов справочника, к которому относится связь</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.LinkGroupBuilder.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Model.Classes.ClassObject,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает экземпляр класса для создания новой связи на основании параметров уже существующей
            </summary>
            <param name="masterGroup">Группа параметров - владелец создаваемой связи</param>
            <param name="linkClass">Тип объектов справочника, к которому относится связь</param>
            <param name="sourceLink">Группа параметров, на основании свойств которой создается новая связь</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.LinkGroupBuilder.Save">
            <summary>
            Сохраняет связь
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.LinkGroupBuilder.MasterName">
            <summary>
            Возвращает или задает наименование связи со стороны основного справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.LinkGroupBuilder.SlaveName">
            <summary>
            Возвращает или задает наименование связи со стороны подчиненного справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.LinkGroupBuilder.SlaveGroup">
            <summary>
            Возвращает или задает группу параметров, описывающую подчиненный справочник
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.LinkGroupBuilder.Swapped">
            <summary>
            True - связь обратная (подключена от дочернего справочника к родительскому)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.LinkGroupBuilder.LinkType">
            <summary>
            Возвращает или задает тип связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.LinkGroupBuilder.LinkVisibility">
            <summary>
            Возвращает или задает видимость связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.LinkGroupBuilder.CheckAccess">
            <summary>
            Возвращает или задает значение, указывающее, требуется ли поддержка управления доступом на объекты связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.LinkGroupBuilder.SelectionPath">
            <summary>
            Возвращает или задает путь выбора связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.LinkGroupBuilder.DoubleDirection">
            <summary>
            Возвращает или задает значение, указывающее, является ли связь двунаправленной
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilderBase">
            <summary>
            Конструктор группы параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilderBase.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает экземпляр класса для редактирования существующей группы параметров
            </summary>
            <param name="group">Группа параметров</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilderBase.#ctor(TFlex.DOCs.Model.Structure.ParameterGroupType,TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает экземпляр класса для создания новой группы параметров
            </summary>
            <param name="type">Тип группы параметров</param>
            <param name="masterGroup">Группа параметров - владелец создаваемой группы</param>
            <param name="classObject">Тип объектов справочника, к которому относится группа</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilderBase.Data">
            <summary>
            Исходная группа параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilderBase.ParameterGroup">
            <summary>
            Возвращает группу параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilderBase.IsAdded">
            <summary>
            Возвращает значение, указывающее, является ли группа параметров добавленной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilderBase.IsModified">
            <summary>
            Возвращает значение, указывающее, является ли группа параметров модифицированной
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilderBase.Save">
            <summary>
            Сохраняет группу параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilderBase.Delete(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Удаляет указанную группу параметров
            </summary>
            <param name="group">Группа параметров</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilderBase.Type">
            <summary>
            Возвращает тип группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilderBase.Name">
            <summary>
            Возвращает или задает название группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilderBase.MasterGroup">
            <summary>
            Возвращает владельца текущей группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilderBase.TableName">
            <summary>
            Возвращает или задает имя таблицы (в БД)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilderBase.Comment">
            <summary>
            Возвращает или задает комментарий
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilderBase.Icon">
            <summary>
            Возвращает или задает иконку
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilderBase.UserControl">
            <summary>
            Возвращает или задает элемент управления
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder">
            <summary>
            Конструктор типа объектов справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.ClassObjectCollection">
            <summary>
            Коллекция типов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.ClassObjectCollection.CanAddItem(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Возвращает значение, указывающее, возможно ли добавление заданного типа в коллекцию
            </summary>
            <param name="item">Тип</param>
            <returns>Значение true, если возможно добавление типа в коллекцию; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.#ctor(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает экземпляр класса для редактирования указанного типа
            </summary>
            <param name="classObject">Тип объектов для редактирования</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.#ctor(TFlex.DOCs.Model.Classes.ClassTree)">
            <summary>
            Создает экземпляр класса для создания типа
            </summary>
            <param name="classes">Дерево типов справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.#ctor(TFlex.DOCs.Model.Classes.ClassTree,TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает экземпляр класса для создания типа, порожденного от указанного базового типа
            </summary>
            <param name="classes">Дерево типов справочника</param>
            <param name="baseClass">Базовый тип</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.Classes">
            <summary>
            Возвращает дерево типов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.Class">
            <summary>
            Возвращает тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.Base">
            <summary>
            Возвращает базовый тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.ParameterGroups">
            <summary>
            Возвращает коллекцию групп параметров типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.ChildObjectClasses">
            <summary>
            Возвращает коллекцию типов, объекты которых могут являться дочерними объектами для объектов текущего типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.ParentObjectClasses">
            <summary>
            Возвращает коллекцию типов, объекты которых могут являться родительскими для объектов текущего типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.MasterObjectClasses">
            <summary>
            Возвращает коллекцию типов, объекты которых могут являться владельцами объектов текущего типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.Attributes">
            <summary>
            Возвращает атрибуты типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.IsAdded">
            <summary>
            Возвращает значение, указывающее, является ли тип добавленным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.IsModified">
            <summary>
            Возвращает значение, указывающее, является ли тип модифицированным
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.Save">
            <summary>
            Сохраняет тип
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.Delete(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Удаляет указанный тип
            </summary>
            <param name="classObject">Тип для удаления</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.Icon">
            <summary>
            Возвращает или задает иконку типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.Name">
            <summary>
            Возвращает или задает наименование типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.Comment">
            <summary>
            Возвращает или задает комментарий к типу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.IsAbstract">
            <summary>
            Возвращает или задает значение, указывающее, является ли тип абстрактным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.IsSealed">
            <summary>
            Возвращает или задает значение, указывающее, является ли тип не наследуемым
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.UseBaseClassIcon">
            <summary>
            Возвращает или задает значение, указывающее, следует ли использовать иконку базового типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.CanCreateInRoot">
            <summary>
            Возвращает или задает значение, указывающее, может ли тип быть корневым
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.SupportsSaveAndCreate">
            <summary>
            Возвращает или задает значение, указывающее, следует ли отображать команду "Сохранить и создать" в диалоге свойств объектов данного типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.PropertiesDisplayType">
            <summary>
            Возвращает или задает способ отображения свойств объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.CreateFromPrototype">
            <summary>
            Возвращает или задает значение, указывающее, возможно ли создание объектов данного типа только из прототипов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.Hidden">
            <summary>
            Возвращает или задает значение, указывающее, что данный тип отключен
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.IsSchemeInherit">
            <summary>
            Возвращает значение, указывающее, наследуется ли схема переходов стадии с базового типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.IsDefaultStageInherit">
            <summary>
            Возвращает значение, указывающее, наследуется ли стадия объектов по умолчанию с базового типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.UniqueIndex">
            <summary>
            Возвращает или задает условие уникальности типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.Scheme">
            <summary>
            Возвращает или задает схему переходов стадий типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.DefaultStage">
            <summary>
            Возвращает или задает стадию объектов по умолчанию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.InheritCanChange">
            <summary>
            Возвращает или задает значение, указывающее, наследуется ли признак "Допускается изменение типа объектов порождённых типов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.CanChange">
            <summary>
            Возвращает или задает значение, указывающее, допускается ли изменение типа объектов порождённых типов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.InheritMasterObjectClasses">
            <summary>
            Возвращает или задает значение, указывающее, наследуются ли типы, объекты которых могут являться владельцами объектов текущего типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.ObjectFormat">
            <summary>
            Возвращает или задает настройки отображения объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.SupportMultiAttachment">
            <summary>
            Указывает поддерживают ли объекты данного типа множественное вхождение в одного родителя
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.ParameterGroupCollection">
            <summary>
            Коллекция групп параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.ParameterGroupCollection.CanAddItem(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Возвращает значение, указывающее, возможно ли добавление заданной группы параметров в коллекцию
            </summary>
            <param name="item">Группа параметров</param>
            <returns>Значение true, если добавление возможно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ClassObjectBuilder.ParameterGroupCollection.CanRemoveItem(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Возвращает значение, указывающее, возможно ли удаление заданной группы параметров из коллекции
            </summary>
            <param name="item">Группа параметров</param>
            <returns>Значение true, если удаление возможно; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilder">
            <summary>
            Конструктор группы параметров, описывающей справочник или список объектов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilder.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает экземпляр класса для редактирования указанной группы параметров
            </summary>
            <param name="group">Группа параметров</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilder.#ctor(TFlex.DOCs.Model.Structure.ParameterGroupType,TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает экземпляр класса для создания новой группы параметров
            </summary>
            <param name="type">Тип группы параметров</param>
            <param name="masterGroup">Группа параметров - владелец создаваемой группы</param>
            <param name="classObject">Тип объектов справочника, к которому относится группа</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilder.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup,TFlex.DOCs.Model.Classes.ClassObject,TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создает экземпляр класса для создания новой группы параметров на основании параметров уже существующей группы
            </summary>
            <param name="masterGroup">Группа параметров - владелец создаваемой группы</param>
            <param name="tableClass">Тип объектов справочника, к которому относится группа</param>
            <param name="sourceTable">Группа параметров, на основании свойств которой создается новая группа</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilder.DefaultVisibleParameter">
            <summary>
            Возвращает или задает параметр, отображаемый по умолчанию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilder.ObjectFormat">
            <summary>
            Возвращает или задает настройки отображения объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilder.SupportsOrder">
            <summary>
            Возвращает или задает значение, указывающее, поддерживает ли группа параметров сортировку
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilder.SupportsSignature">
            <summary>
            Возвращает или задает значение, указывающее, поддерживает ли группа параметров механизм подписей
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilder.UseAllSignatureTypes">
            <summary>
            Возвращает или задает значение, указывающее, разрешено ли для справочника использование всех типов подписей
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilder.CanChangeClass">
            <summary>
            Возвращает или задает значение, указывающее, допускается ли изменение типа объектов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilder.Save">
            <summary>
            Сохраняет группу параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ParameterGroupBuilder.Save(System.Boolean)">
            <summary>
            Сохраняет группу параметров, с возможностью указать необходимость создания параметра "Наименование"
            </summary>
            <param name="createNameParameter">Значение true, если требуется создать параметр "Наименование"; в противном случае - значение false</param>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder">
            <summary>
            Конструктор справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.#ctor(TFlex.DOCs.Model.ReferenceInfo)">
            <summary>
            Создает экземпляр класса для редактирования указаного справочника
            </summary>
            <param name="reference">Описание справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.#ctor(TFlex.DOCs.Model.ReferenceCatalogFolder)">
            <summary>
            Создает экземпляр класса для создания нового справочника в указанной папке каталога справочников
            </summary>
            <param name="folder">Папка каталога справочников</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.ReferenceInfo">
            <summary>
            Возвращает описание справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.Folder">
            <summary>
            Папка каталога справочника, в котором находится справочник
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.Save(System.Boolean)">
            <summary>
            Сохраняет справочник
            </summary>
            <param name="createNameParameter">Значение true, если требуется создать параметр "Наименование"; в противном случае - значение false</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.Delete(TFlex.DOCs.Model.ReferenceInfo)">
            <summary>
            Удаляет указанный справочник
            </summary>
            <param name="reference">Описание справочника</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.MoveToAnotherFolder(TFlex.DOCs.Model.ReferenceCatalogFolder)">
            <summary>
            Перемещает справочник в другую папку
            </summary>
            <param name="folder">Новая папка</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.HierarchyType">
            <summary>
            Возвращает или задает тип иерархии справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.Visibility">
            <summary>
            Возвращает или задает видимость справочника в интерфейсе
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.CheckAccess">
            <summary>
            Возвращает или задает значение, указывающее, поддерживает ли справочник управление доступом на объекты
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.SupportsEncryption">
            <summary>
            Возвращает или задает значение, указывающее, поддерживает ли справочник наследование доступом на объекты по связям
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.SupportsDesktop">
            <summary>
            Возвращает или задает значение, указывающее, поддерживает ли справочник историю изменений
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.SupportsRecycleBin">
            <summary>
            Возвращает или задает значение, указывающее, поддерживает ли справочник корзину 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.SupportsPrototypes">
            <summary>
            Возвращает или задает знаечение, указывающее, поддерживает ли справочник работу с прототипами
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.SupportsStages">
            <summary>
            Возвращает или задает значение, указывающее, поддерживает ли справочник стадии
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.UniqueIndex">
            <summary>
            Возвращает или задает условие уникальности объектов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.Scheme">
            <summary>
            Возвращает или задает схему переходов стадий справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.DefaultStage">
            <summary>
            Возвращает или задает стадию объектов по умолчанию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.IsActive">
            <summary>
            Возвращает значение, указывающее, является ли справочник активным
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.Deactivate">
            <summary>
            Деактивирует справочник
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.Activate">
            <summary>
            Активирует справочник
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.Builders.ReferenceBuilder.RefreshInheritedAccesses">
            <summary>
            Обновить наследуемые доступы для справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.ParameterValueList">
            <summary>
            Список значений параметра
            </summary>
            
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterValueList.ParameterInfo">
            <summary>
            Возвращает параметр, которому принадлежит список значений
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterValueList.Type">
            <summary>
            Возвращает тип значений списка
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterValueList.Values">
            <summary>
            Возвращает список значений
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterValueList.IsFixed">
            <summary>
            Возвращает значение, указывающее, является ли список значений зафиксированным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterValueList.IsEditable">
            <summary>
            Возвращает значение, указывающее, допускается ли редактирование элементов списка
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterValueList.IsExpandable">
            <summary>
            Возвращает значение, указывающее, является ли список значений пополняемым пользователем
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterValueList.CanAdd">
            <summary>
            Возвращает значение, указывающее, возможно ли добавление элемента в список
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterValueList.AddValue(System.Object)">
            <summary>
            Добавляет в список элемент с указанным значением
            </summary>
            <param name="value">Значение добавляемого элемента</param>
            <returns>Добавленный элемент</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterValueList.AddValue(System.Object,TFlex.DOCs.Model.IconImage,System.String)">
            <summary>
            Добавляет в список элемент с указанными значением, наименованием и иконкой
            </summary>
            <param name="value">Значение добавляемого элемента</param>
            <param name="icon">Иконка добавляемого элемента</param>
            <param name="name">Наименование добавляемого элемента</param>
            <returns>Добавленный элемент</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterValueList.CanEdit">
            <summary>
            Возвращает значение, указывающее, возможно ли редактирование списка
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterValueList.UpdateValue(System.Int32,System.Object)">
            <summary>
            Обновляет значение элемента списка по указанному индексу
            </summary>
            <param name="index">Индекс элемента в списке значений</param>
            <param name="value">Значение элемента</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterValueList.CanDelete">
            <summary>
            Возвращает значение, указывающее, возможно ли удаление элемента из списка
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterValueList.DeleteValue(System.Int32)">
            <summary>
            Удаляет значение из списка по указанному индексу
            </summary>
            <param name="index">Индекс элемента в списке значений</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterValueList.SetValues(System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Structure.ListValue})">
            <summary>
            Задает указанную коллекцию элементов в качестве элементов текущего списка
            </summary>
            <param name="values">Коллекция элементов</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterValueList.GetValue(System.String)">
            <summary>
            Возвращает значение элемента списка значений по его наименованию
            </summary>
            <param name="name">Наименование элемента списка</param>
            <returns>Значение элемента списка</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterValueList.GetName(System.Object)">
            <summary>
            Возвращает наименование элемента списка по его значению
            </summary>
            <param name="value">Значение элемента списка</param>
            <returns>Наименование элемента списка</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterValueList.IndexOf(TFlex.DOCs.Model.Structure.ListValue)">
            <summary>
            Возвращает индекс указанного элемента в списке значений
            </summary>
            <param name="item">Элемент списка</param>
            <returns>Индекс указанного элемента</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterValueList.Insert(System.Int32,TFlex.DOCs.Model.Structure.ListValue)">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterValueList.RemoveAt(System.Int32)">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterValueList.Item(System.Int32)">
            <summary>
            Возвращает элемент списка по его индексу
            </summary>
            <param name="index">Индекс элемента</param>
            <returns>Элемент списка</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterValueList.Add(TFlex.DOCs.Model.Structure.ListValue)">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterValueList.Clear">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterValueList.Contains(TFlex.DOCs.Model.Structure.ListValue)">
            <summary>
            Возвращает значение, указывающее, содержится ли в списке значений указанный элемент
            </summary>
            <param name="item">Элемент списка</param>
            <returns>Значение true, если указанный элемент содержится в списке; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterValueList.CopyTo(TFlex.DOCs.Model.Structure.ListValue[],System.Int32)">
            <summary>
            Копирует элементы списка в указанный массив, начиная с заданного индекса
            </summary>
            <param name="array">Массив для копирования элемента</param>
            <param name="arrayIndex">Индекс в массиве, с которого начинается копирование</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterValueList.Count">
            <summary>
            Возвращает количество элементов в списке
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterValueList.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли спискок значений доступным только для чтения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterValueList.Remove(TFlex.DOCs.Model.Structure.ListValue)">
            <summary>
            Не поддерживается
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterValueList.GetEnumerator">
            <summary>
            Возвращает перечислитель элементов списка значений
            </summary>
            <returns>Перечислитель элементов списка</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterValueList.Clone">
            <summary>
            Создает копию списка значений
            </summary>
            <returns>Список значений параметра</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.ListValue">
            <summary>
            Элемент в списке значений параметра
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ListValue.#ctor(TFlex.DOCs.Model.Structure.ParameterValueList)">
            <summary>
            Создает новый элемент в указанном списке значений
            </summary>
            <param name="owner">Список значений параметра</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ListValue.List">
            <summary>
            Возвращает список значений
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ListValue.Key">
            <summary>
            Возвращает Guid элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ListValue.Name">
            <summary>
            Возвращает наименование элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ListValue.Value">
            <summary>
            Возвращает значение элемента
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ListValue.Icon">
            <summary>
            Возвращает иконку элемента
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ListValue.ToString">
            <summary>
            Возвращает строковое представление элемента
            </summary>
            <returns>Строковое представление элемента</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ListValue.Clone">
            <summary>
            Создает копию текущего элемента
            </summary>
            <returns>Новый элемент</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.UniqueIndex">
            <summary>
            Условие уникальности
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.UniqueIndex.Group">
            <summary>
            Возвращает группу параметров, к которой относится условие уникальности
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.UniqueIndex.Id">
            <summary>
            Возвращает Id условия уникальности
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.UniqueIndex.Guid">
            <summary>
            Возвращает Guid условия уникальности
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.UniqueIndex.Name">
            <summary>
            Возвращает наименование условия уникальности
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.UniqueIndex.Parameters">
            <summary>
            Возвращает коллекцию уникальных параметров условия уникальности
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.UniqueIndex.ToString">
            <summary>
            Возвращает строковое представление условия уникальности
            </summary>
            <returns>Строковое представление условия уникальности</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.UniqueIndex.Parameter">
            <summary>
            Уникальный параметр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.UniqueIndex.Parameter.Index">
            <summary>
            Возвращает условие уникальности, к которому относится параметр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.UniqueIndex.Parameter.Id">
            <summary>
            Возвращяет Id параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.UniqueIndex.Parameter.Info">
            <summary>
            Возвращает информацию о параметре
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.UniqueIndex.Parameter.CheckEmptyValue">
            <summary>
            Возвращает значение, указывающее, нужно ли проверять пустые значения для данного параметра при проверке уникальности
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.UniqueIndex.Parameter.GetHashCode">
            <summary>
            Возвращает хэш-код уникального параметра
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.UniqueIndex.Parameter.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если текущий объект равен заданному; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.UniqueIndex.Parameter.ToString">
            <summary>
            Возвращает строковое представление параметра
            </summary>
            <returns>Строковое представление параметра</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.UniqueIndex.Parameter.AlwaysCheckEmptyValue(TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Возвращает значение, указывающее, всегда ли требуется проверка пустых значений для параметра
            </summary>
            <param name="info">Информация о параметре</param>
            <returns>Значение true, если требуется проверка пустых значений; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.ParameterInfo">
            <summary>
            Описание параметра справочника (модель)
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterInfo.DefaultIcon">
            <summary>
            Значок для параметра
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterInfo._cachedName">
            <summary>
            Название
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterInfo._certificate">
            <summary>
            Сертификат
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterInfo.#ctor(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Создать описание параметра
            </summary>
            <param name="group">Группа параметров</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterInfo.Refresh(TFlex.DOCs.Data.ParameterInfo)">
            <summary>
            Обновить информацию о параметре из указанного источника
            </summary>
            <param name="source">Описание параметра (серверная часть)</param>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.Source">
            <summary>
            Описание параметра (серверная часть)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.Group">
            <summary>
            Возвращает группу параметеров, в которую входит текущий параметр
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.Type">
            <summary>
            Возвращает тип параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.Name">
            <summary>
            Возвращает наименование параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.Comment">
            <summary>
            Возвращает комментарий к параметру
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.Length">
            <summary>
            Возвращает максимальную длину поля
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.Format">
            <summary>
            Возвращает формат параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.DecimalPlaces">
            <summary>
            Возвращает количество знаков после запятой при отображении значения действительного параметра в пользовательском интерфейсе
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.FieldName">
            <summary>
            Возвращает имя поля (в БД)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.IsVisible">
            <summary>
            Возвращает значение, указывающее, является ли параметр видимым
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.EditType">
            <summary>
            Возвращает способ редактирования параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.Nullable">
            <summary>
            Возвращает значение, указывающее, поддерживает ли параметр пустые значения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.IsRequired">
            <summary>
            Возвращает значение, указывающее, является ли параметр обязательным для заполнения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.DefaultValue">
            <summary>
            Возвращает значение параметра по умолчанию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.IsIndexed">
            <summary>
            Возвращает значение, указывающее, является ли параметр индексируемым
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.Encrypted">
            <summary>
            Значение параметра зашифровано
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.CertificateGuid">
            <summary>
            Guid сертификата, который назначен параметру для шифрования
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.Certificate">
            <summary>
            Сертификат, который назначен параметру для шифрования
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.PreviousPropertiesState">
            <summary>
            Предыдущее состояние ключевых свойств параметра в виде коллекции
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterInfo.FixParameterState">
            <summary>
            Зафиксировать текущее состояние параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.ValueList">
            <summary>
            Возвращает список значений параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.UserControl">
            <summary>
            Возвращает элемент управления для параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.IsPrimaryKey">
            <summary>
            Возвращает значение, указывающее, является ли параметр первичным ключом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.ActivityStatus">
            <summary>
            Возвращает статус активности параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.Unit">
            <summary>
            Возвращает единицу измерения параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.TypeName">
            <summary>
            Возвращает наименование типа параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.IsSystem">
            <summary>
            Возвращает значение, указывающее, является ли параметр системным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.SystemType">
            <summary>
            Возвращает системный тип параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.CanEdit">
            <summary>
            Возвращает значение, указывающее, возможно ли редактирование параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.CanDelete">
            <summary>
            Возвращает значение, указывающее, возможно ли удаление параметра
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.IsSystemKey">
            <summary>
            Возвращает значение, указывающее, является ли параметр системным ключом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.IsCheckOutStateField">
            <summary>
            Возвращает значение, указывающее, является ли параметр статусом редактирования
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.TypeIcon">
            <summary>
            Возвращает иконку типа параметра
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterInfo.ToString">
            <summary>
            Возвращает строковое представление параметра
            </summary>
            <returns>Строковое представление параметра</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterInfo.GetComparisonOperators">
            <summary>
            Возвращает список операторов сравнения, доступных для параметра
            </summary>
            <returns>Список операторов сравнения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterInfo.GetIndexes">
            <summary>
            Получает список условий уникальности, в которые входит параметр
            </summary>
            <returns>Список условий уникальности</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterInfo.CompareTo(TFlex.DOCs.Model.Structure.ParameterInfo)">
            <summary>
            Сравнивает текущий параметр с указанным
            </summary>
            <param name="other">Параметр для сравнения</param>
            <returns>Значение равное нулю, если параметры равны; значение больше нуля, если текущий параметр больше указанного; значение меньше нуля, если текущий параметр меньше указанного</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterInfo.GetFormat(System.Type)">
            <summary>
            Возвращает объект, предоставляющий службу форматирования для заданного типа
            </summary>
            <param name="formatType">Объект, определяющий тип возвращаемого объекта форматирования</param>
            <returns>Экземпляр объекта типа formatType, если реализация IFormatProvider может предоставить объект такого типа; в противном случае — null</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.XmlId">
            <summary>
            Возвращает Id параметра в формате XML
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterInfo.TryParseXmlId(System.String,System.Int32@,System.Boolean@)">
            <summary>
            Производит попытку разбора XML-строки
            </summary>
            <param name="xmlId">XML-строка</param>
            <param name="id">ID параметра</param>
            <param name="deleted">Статус "deleted" параметра</param>
            <returns>Значение true, если строка успешно разобрана; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterInfo.SupportsSearch">
            <summary>
            Возвращает значение, указывающее, может ли параметр участвовать в поиске
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.ParameterInfoCollection">
            <summary>
            Коллекция описаний параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterInfoCollection.#ctor(TFlex.DOCs.Model.ServerConnection,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Structure.ParameterInfo})">
            <summary>
            Создает новую коллекцию описаний параметров на основании указанной коллекции, упорядоченную по Id
            </summary>
            <param name="collection">Коллекция описаний параметров</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterInfoCollection.#ctor(TFlex.DOCs.Model.ServerConnection,System.Collections.Generic.IDictionary{System.Int32,TFlex.DOCs.Model.Structure.ParameterInfo})">
            <summary>
            Создает новую коллекцию описаний параметров на основании указанной коллекции, упорядоченную по ключу указанной коллекции
            </summary>
            <param name="collection">Коллекция описаний параметров</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterInfoCollection.Find(System.String)">
            <summary>
            Выполняет поиск описания параметра по его имени поля
            </summary>
            <param name="fieldName">Имя поля параметра</param>
            <returns>Описание параметра</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterInfoCollection.FindByName(System.String)">
            <summary>
            Выполняет поиск описания параметра по его имени
            </summary>
            <param name="name">Имя параметра</param>
            <returns>Описание параметра</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterInfoCollection.Find(TFlex.DOCs.Model.Structure.SystemParameterType)">
            <summary>
            Выполняет поиск описания параметра по типу системного параметра 
            </summary>
            <param name="field">Тип системного параметра</param>
            <returns>Описание параметра</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.ParameterGroupCollection">
            <summary>
            Коллекция групп параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterGroupCollection.#ctor(TFlex.DOCs.Model.ServerConnection,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Structure.ParameterGroup})">
            <summary>
            Создает новую коллекцию групп параметров на основании указанной коллекции, упорядоченную по ID
            </summary>
            <param name="collection">Коллекция групп параметров</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterGroupCollection.#ctor(TFlex.DOCs.Model.ServerConnection,System.Collections.Generic.IDictionary{System.Int32,TFlex.DOCs.Model.Structure.ParameterGroup})">
            <summary>
            Создает новую коллекцию групп параметров на основании указанной коллекции, упорядоченную по ключу указанной коллекции
            </summary>
            <param name="collection">Коллекция групп параметров</param>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterGroupCollection.FindLinkTo(System.Guid)">
            <summary>
            Выполняет поиск связи на справочник с указанным Guid
            </summary>
            <param name="referenceGuid">Guid подчиненного справочника связи</param>
            <returns>Группа параметров, описывающая найденную связь</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterGroupCollection.FindLinksTo(System.Guid)">
            <summary>
            Выполняет поиск связей на справочник с указанным Guid
            </summary>
            <param name="referenceGuid">Guid подчиненного справочника связи</param>
            <returns>Список связей с указанным справочником</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterGroupCollection.Find(System.String)">
            <summary>
            Выполняет поиск группы параметров по ее Guid, наименованию или XmlId
            </summary>
            <param name="group">Строка, содержащая Guid, наименование или XmlId группы параметров</param>
            <returns>Найденная группа параметров</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.ParameterGroup">
            <summary>
            Группа параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.Id">
            <summary>
            Возвращает ID группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.Guid">
            <summary>
            Возвращает GUID группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.ReferenceInfo">
            <summary>
            Возвращает описание справочника (если группа параметров описывает справочник)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.ReferenceGroup">
            <summary>
            Возвращает группу параметров, описывающую справочник, в который входит данная группа 
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.HierarchyGroup">
            <summary>
            Возвращает группу параметров, описывающую сложную иерархию справочника  
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.Classes">
            <summary>
            Возвращает дерево типов текущей группы параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterGroup.Contains(TFlex.DOCs.Model.Structure.ParameterGroup)">
            <summary>
            Возвращает значение, указывающее, содержится ли указанная группа параметров в списке подчиненных групп текущей
            </summary>
            <param name="group">Группа параметров</param>
            <returns>Значение true, если указанная группа содержится в списке подчиненных групп текущей группы; в противном случае - значение false</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.ActivityStatus">
            <summary>
            Возвращает статус активности группы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.Type">
            <summary>
            Возвращает тип группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.HierarchyType">
            <summary>
            Возвращает тип иерархии группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.MasterGroup">
            <summary>
            Возвращает групу параметров - владельца текущей группы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.SlaveGroup">
            <summary>
            Возвращает подчиненную группу параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.Name">
            <summary>
            Возвращает наименование группы параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterGroup.GetSecondCaption">
            <summary>
            Возвращает второе наименование группы параметров
            </summary>
            <returns></returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterGroup.GetSwappedLink">
            <summary>
            Возвращает обратную связь для текущей группы параметров, описывающей связь
            </summary>
            <returns>Группа параметров, описывающая обратную связь</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.CheckAccess">
            <summary>
            Возвращает значение, указывающее, поддерживает ли данная группа параметров управление доступом на объекты связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.SupportsEncryption">
            <summary>
            Поддержка шифрования параметров в справочнике
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.Comment">
            <summary>
            Возвращает комментарий к группе параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.Visibility">
            <summary>
            Возвращает видимость группы параметров в пользовательском интерфейсе
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.Icon">
            <summary>
            Возвращает иконку группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.TypeIcon">
            <summary>
            Возвращает иконку типа группы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.TableName">
            <summary>
            Возвращает имя таблицы в БД
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.SupportsDesktop">
            <summary>
            Возвращает значение, указывающее, поддерживает ли группа параметров историю изменений
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.SupportsRecycleBin">
            <summary>
            Возвращает значение, указывающее, поддерживает ли группа параметров корзину
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.SupportsClasses">
            <summary>
            Возвращает значение, указывающее, поддерживает ли группа параметров типы объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.SupportsSystemObjects">
            <summary>
            Возвращает значение, указывающее, поддерживает ли группа параметров системные объекты
            </summary>        
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.SupportsPrototypes">
            <summary>
            Возвращает значение, указывающее, поддерживает ли группа параметров прототипы
            </summary>        
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.SupportsOrder">
            <summary>
            Возвращает значение, указывающее, поддерживает ли группа параметров сортировку
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.SupportsSignature">
            <summary>
            Возвращает значение, указывающее, поддерживает ли группа параметров механизм подписей
            </summary>        
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.SignatureTypes">
            <summary>
            Возвращает типы используемых подписей
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.SupportsPrivateFolders">
            <summary>
            Возвращает значение, указывающее, поддерживает ли группа параметров личные папки пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.SupportsNomenclature">
            <summary>
            Возвращает значение, указывающее, поддерживает ли группа параметров номенклатуру
            </summary>        
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.Swapped">
            <summary>
            True - если связь обратная (подключена в дочернем справочнике)
            </summary>        
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.LinkType">
            <summary>
            Возвращает тип связи, которую описывает группа параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.LinkVisibility">
            <summary>
            Возвращает видимость связи, которую описывает группа параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.DoubleDirectionLink">
            <summary>
            Возвращает значение, указывающее, является ли связь, описываемая группой параметров, двунаправленной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.DefaultVisibleParameter">
            <summary>
            Возвращает параметр, отображаемый по умолчанию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.UserControl">
            <summary>
            Возвращает элемент управления
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.SelectionPath">
            <summary>
            Возвращает путь выбора связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.CanEdit">
            <summary>
            Возвращает значение, указывающее, возможно ли редактирование группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.CanDelete">
            <summary>
            Возвращает значение, указывающее, возможно ли удаление группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.Parameters">
            <summary>
            Возвращает коллекцию параметров, входящих в группу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.SystemParameters">
            <summary>
            Возвращает коллекцию системных параметров группы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.Indexes">
            <summary>
            Возвращает коллекцию условий уникальности, доступных для группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.UniqueIndex">
            <summary>
            Возвращает условие уникальности группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.EventHandlers">
            <summary>
            Возвращает коллекцию обработчиков событий группы параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterGroup.GetEventHandlers(TFlex.DOCs.Model.References.Events.ParameterGroupEvent)">
            <summary>
            Возвращает список обработчиков событий для указанного события (или список всех обработчиков группы, если событие не указано)
            </summary>
            <param name="event">Событие группы параметров</param>
            <returns>Список обработчиков событий</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.Dialog">
            <summary>
            Возвращает пользовательский диалог свойств группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.Dialogs">
            <summary>
            Возвращает менеджер диалогов свойств группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.WebDialog">
            <summary>
            Возвращает пользовательский диалог свойств группы параметров для web
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.WebDialogs">
            <summary>
            Возвращает менеджер web-диалогов свойств группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.HasHierarchy">
            <summary>
            Возвращает значение, указывающее, является ли справочник иерархическим
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.IsReference">
            <summary>
            Возвращает значение, указывающее, является ли группа параметров описанием справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.IsLinkGroup">
            <summary>
            Возвращает значение, указывающее, является ли группа параметров описанием связи
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.IsCorruptedLink">
            <summary>
            Возвращает значение, указывающее, является ли ссылка некорректной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.IsTableOneToOne">
            <summary>
            Возвращает значение, указывающее, описывает ли группа параметров группу параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.IsLinkToOne">
            <summary>
            Возвращает значение, указывающее, описывает ли группа параметров связь с одним объектом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.IsToManyRelation">
            <summary>
            Возвращает значение, указывающее, описывает ли группа параметров отношение с несколькими объектами
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.IsLinkToMany">
            <summary>
            Возвращает значение, указывающее, описывает ли группа параметров связь с несколькими объектами
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.IsAnyReferenceLink">
            <summary>
            Возвращает значение, указывающее, описывает ли группа параметров связь с любым справочником
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.IsTableOneToMany">
            <summary>
            Возвращает значение, указывающе, описывает ли группа параметров список объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.IsHierarchyTable">
            <summary>
            Возвращает значение, указывающее, является ли группа параметров описанием сложной иерархии справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.Item(System.String)">
            <summary>
            Возвращает параметр по имени поля в БД
            </summary>
            <param name="fieldName">Имя поля</param>
            <returns>Описание параметра</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.Item(System.Int32)">
            <summary>
            Возвращает параметр по его ID
            </summary>
            <param name="parameterId">ID параметра</param>
            <returns>Описание параметра</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.Item(System.Guid)">
            <summary>
            Возвращает параметр по его Guid
            </summary>
            <param name="parameterGuid">Guid параметра</param>
            <returns>Описание параметра</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.Item(TFlex.DOCs.Model.Structure.SystemParameterType)">
            <summary>
            Возвращает описание параметра для указанного системного параметра (в случае его наличия в данной группе)
            </summary>
            <param name="parameter">Системный параметр</param>
            <returns>Описание параметра</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.ClassParameterInfo">
            <summary>
            Возвращает параметр "Тип"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.AuthorParameterInfo">
            <summary>
            Возвращает параметр "Автор"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.EditorParameterInfo">
            <summary>
            Возвращает параметр "Автор последнего изменения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.CreationDateParameterInfo">
            <summary>
            Возвращает параметр "Дата создания"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.EditDateParameterInfo">
            <summary>
            Возвращает параметр "Дата последнего изменения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.ParentParameterInfo">
            <summary>
            Возвращает параметр "Родитель"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.SupportsStages">
            <summary>
            Возвращает значение, указывающее, поддерживает ли группа параметров стадии объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.Scheme">
            <summary>
            Возвращает схему переходов стадий
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.DefaultStage">
            <summary>
            Возвращает стадию объектов по умолчанию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.CanChangeClass">
            <summary>
            Возвращает значение, указывающее, допускается ли изменение типа объектов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterGroup.ToString">
            <summary>
            Возвращает строковое представление группы параметров
            </summary>
            <returns>Строковое представление группы параметров</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroup.XmlId">
            <summary>
            Возвращает ID группы параметров в формате XML
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterGroup.TryParseXmlId(System.String,System.Int32@,System.Boolean@)">
            <summary>
            Производит попытку разбора XML-строки
            </summary>
            <param name="xmlId">XML-строка</param>
            <param name="id">ID группы параметров</param>
            <param name="deleted">Статус "deleted" параметра</param>
            <returns>Значение true, если строка успешно разобрана; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.SpecialReference">
            <summary>
            Представляет специальные справочники
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.Files">
            <summary>
            Файлы
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.FileServers">
            <summary>
            Разделы сервера файлов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.Users">
            <summary>
            Группы и пользователи
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.Units">
            <summary>
            Единицы измерения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.Icons">
            <summary>
            Иконки
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.Messages">
            <summary>
            Сообщения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.Projects">
            <summary>
            Проекты
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.Classifiers">
            <summary>
            Классификаторы
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.ClassifiersCodeElements">
            <summary>
            Структура классификатора 
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.Resources">
            <summary>
            Ресурсы
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.Calendar">
            <summary>
            Календари
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.Workflow">
            <summary>
            Бизнес-процессы
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.WorkingAreas">
            <summary>
            Папки
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.Documents">
            <summary>
            Документы
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.SearchQueries">
            <summary>
            Поисковые запросы
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.Macros">
            <summary>
            Макросы
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.Reports">
            <summary>
            Отчеты
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.ReportGenerators">
            <summary>
            Генераторы отчетов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.GlobalParameters">
            <summary>
            Глобальные параметры
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.Nomenclature">
            <summary>
            Номенклатура и изделия 
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.BomSections">
            <summary>
            Разделы спецификации
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.Materials">
            <summary>
            Материалы
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.MaterialsMark">
            <summary>
            Марки материалов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.MaterialsVisualProperties">
            <summary>
            Визуальные свойства материалов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.Orders">
            <summary>
            Заказы
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.OrdersPositions">
            <summary>
            Позиции заказов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.SchedulingPlans">
            <summary>
            Графики производства
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.Batches">
            <summary>
            Партии
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.SchedulingTasks">
            <summary>
            Производственные операции
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.KnowledgeBase">
            <summary>
            База знаний
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SpecialReference.Certificates">
            <summary>
            Сертификаты
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.ReferenceVisibility">
            <summary>
            Видимость справочника в интерфейсе
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ReferenceVisibility.Invisible">
            <summary>
            Невидимый
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ReferenceVisibility.Visible">
            <summary>
            Видимый
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ReferenceVisibility.InvisibleInCatalog">
            <summary>
            Невидимый в каталоге справочников
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.ReferenceHierarchyType">
            <summary>
            Тип иерархии справочника
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ReferenceHierarchyType.None">
            <summary>
            Список
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ReferenceHierarchyType.Simple">
            <summary>
            Дерево
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ReferenceHierarchyType.Complex">
            <summary>
            Сложная иерархия
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.LinkType">
            <summary>
            Тип связи между справочниками
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.LinkType.Undefined">
            <summary>
            Не определен
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.LinkType.ManyToMany">
            <summary>
            Список со списком
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.LinkType.OneToMany">
            <summary>
            Один со списком
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.LinkType.OneToOne">
            <summary>
            Один с одним
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.LinkType.ManyToOne">
            <summary>
            Список с одним
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.LinkType.AnyReference">
            <summary>
            С любым справочником
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.LinkVisibility">
            <summary>
            Видимость связи
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.LinkVisibility.Invisible">
            <summary>
            Связь невидима
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.LinkVisibility.MasterOnly">
            <summary>
            Связь видима только в основой таблице
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.LinkVisibility.SlaveOnly">
            <summary>
            Связь видима только в подчиненной таблице
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.LinkVisibility.Anywhere">
            <summary>
            Связь видима везде
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.ParameterGroupType">
            <summary>
            Тип группы параметров
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterGroupType.Reference">
            <summary>
            Справочник
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterGroupType.TableOneToOne">
            <summary>
            Группа параметров
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterGroupType.TableOneToMany">
            <summary>
            Список объектов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterGroupType.Link">
            <summary>
            Связь
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterGroupType.HierarchyTable">
            <summary>
            Описание сложной иерархии справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterGroupType.GetType(System.Int32)">
            <summary>
            Определяет тип группы параметров по его ID
            </summary>
            <param name="id">ID типа группы параметров</param>
            <returns>Тип группы параметров</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroupType.Type">
            <summary>
            Возвращает ID типа группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroupType.Name">
            <summary>
            Возвращает наименование типа группы параметров
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroupType.IsLink">
            <summary>
            Возвращает значение, указывающее, является ли тип группы параметров связью
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroupType.IsReference">
            <summary>
            Возвращает значение, указывающее, является ли тип группы параметров справочником
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroupType.IsTable">
            <summary>
            Возвращает значение, указывающее, является ли тип группы параметров таблицей (справочник, группа параметров, список объектов, таблица иерархии)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterGroupType.Icon">
            <summary>
            Возвращает иконку типа группы параметров
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterGroupType.op_Equality(TFlex.DOCs.Model.Structure.ParameterGroupType,TFlex.DOCs.Model.Structure.ParameterGroupType)">
            <summary>
            Определяет, равны ли два указанных типа групп параметров
            </summary>
            <param name="obj1">Первый тип группы параметров</param>
            <param name="obj2">Второй тип группы параметров</param>
            <returns>Значнеие true, если типы равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterGroupType.op_Inequality(TFlex.DOCs.Model.Structure.ParameterGroupType,TFlex.DOCs.Model.Structure.ParameterGroupType)">
            <summary>
            Определяет, различаются ли два указанных типа групп параметров
            </summary>
            <param name="obj1">Первый тип группы параметров</param>
            <param name="obj2">Второй тип группы параметров</param>
            <returns>Значение true, если типы равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterGroupType.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если объекты равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterGroupType.GetHashCode">
            <summary>
            Возвращает хэш-код объекта
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterGroupType.ToString">
            <summary>
            Возвращает строковое представление текущего объекта
            </summary>
            <returns>Строковое представление объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterGroupType.CompareTo(TFlex.DOCs.Model.Structure.ParameterGroupType)">
            <summary>
            Сравнивает текущий тип группы параметров с другим типом
            </summary>
            <param name="other">Тип группы параметров для сравнения</param>
            <returns>Значение равное нулю, если типы равны; значение большее нуля, если текущий тип больше указанного; значение меньшее нуля, если текущий тип меньше указанного</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.GroupActivityStatus">
            <summary>
            Статус активности группы параметров
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.GroupActivityStatus.AccessDenied">
            <summary>
            Запрещено использование в клиентской части
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.GroupActivityStatus.NeedRegenerate">
            <summary>
            В структуре произошли изменения, требуется регенерация
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.GroupActivityStatus.Normal">
            <summary>
            Использование не ограничено
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.ParameterType">
            <summary>
            Тип параметра
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.Date">
            <summary>
            Возвращает тип параметра "Дата"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.VarChar">
            <summary>
            Возвращает тип параметра "Строка переменной длины"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.Int">
            <summary>
            Возвращает тип параметра "Целое число"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.Float">
            <summary>
            Возвращает тип параметра "Действительное число высокой точности"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.Boolean">
            <summary>
            Возвращает тип параметра "Параметр Да/Нет"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.Char">
            <summary>
            Возвращает тип параметра "Строка фиксированной длины"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.Text">
            <summary>
            Возвращает тип параметра "Текст переменной длины в формате ANSI"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.TinyInt">
            <summary>
            Возвращает тип параметра "Короткое целое число (1 байт)"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.Time">
            <summary>
            Возвращает тип параметра "Время"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.Real">
            <summary>
            Возвращает тип параметра "Действительное число"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.Money">
            <summary>
            Возвращает тип параметра "Денежная величина (большого размера)"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.SmallMoney">
            <summary>
            Возвращает тип параметра "Денежная величина"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.DateTime">
            <summary>
            Возвращает тип параметра "Дата и время"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.Icon">
            <summary>
            Возвращает тип параметра "Иконка"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.VarBinary">
            <summary>
            Возвращает тип параметра "Двоичные данные переменной длины"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.Binary">
            <summary>
            Возвращает тип параметра "Двоичные данные постоянной длины"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.Percent">
            <summary>
            Возвращает тип параметра "Процент"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.NVarChar">
            <summary>
            Возвращает тип параметра "Строка переменной длины"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.Password">
            <summary>
            Возвращает тип параметра "Пароль"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.NChar">
            <summary>
            Возвращает тип параметра "Строка постоянной длины"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.NText">
            <summary>
            Возвращает тип параметра "Текст переменной длины"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.UniqueIdentifier">
            <summary>
            Возвращает тип параметра "Уникальный идентификатор"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.Decimal">
            <summary>
            Возвращает тип параметра "Числовой тип с задаваемой точностью"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.BigInt">
            <summary>
            Возвращает тип параметра "Большое целое число"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.SmallInt">
            <summary>
            Возвращает тип параметра "Короткое целое число (2 байта)"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.Image">
            <summary>
            Возвращает тип параметра "Растровое изображение"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.Html">
            <summary>
            Возвращает тип параметра "HTML-текст"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.Rtf">
            <summary>
            Возвращает тип параметра "Форматированный текст"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterType.DataDable">
            <summary>
            Возвращает тип параметра "Таблица"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.DefaultMantissaLength">
            <summary>
            Возвращает точность действительного числа по умолчанию
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterType.GetType(System.Type)">
            <summary>
            Возвращает тип параметра, соответствующий указанному типу
            </summary>
            <param name="languageType">Тип</param>
            <returns>Тип параметра</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterType.GetType(System.Int32)">
            <summary>
            Возвращает тип параметра по его Id
            </summary>
            <param name="id">Id типа параметра</param>
            <returns>Тип параметра</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterType.GetTypeList(System.Boolean)">
            <summary>
            Возвращает список доступных типов параметров 
            </summary>
            <param name="supportedOnly">Если установлен, возвращаются только поддерживаемые типы</param>
            <returns>Список типов параметров</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterType.Parse(System.String)">
            <summary>
            Преобразует заданное строковое представление значения в значение данного типа
            </summary>
            <param name="s">Строковое представление значения</param>
            <returns>Значение данного типа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterType.Parse(System.String,System.IFormatProvider)">
            <summary>
            Преобразует заданное строковое представление значения в значение данного типа
            </summary>
            <param name="s">Строковое представление значения</param>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <returns>Значение данного типа</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterType.TryParse(System.String,System.Object@)">
            <summary>
            Преобразует заданное строковое представление значение в значение данного типа, не генерируя исключение в случае неудачи
            </summary>
            <param name="s">Строковое представление значения</param>
            <param name="result">Значение данного типа</param>
            <returns>Значение true, если удалось выполнить преобразование; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterType.TryParse(System.String,System.IFormatProvider,System.Object@)">
            <summary>
            Преобразует заданное строковое представление значение в значение данного типа, не генерируя исключение в случае неудачи
            </summary>
            <param name="s">Строковое представление значения</param>
            <param name="provider">Объект, предоставляющий сведения о форматировании</param>
            <param name="result">Значение данного типа</param>
            <returns>Значение true, если удалось выполнить преобразование; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterType.ConvertToString(System.Object)">
            <summary>
            Преобразование значения в строковое представление
            </summary>
            <param name="value">Значение</param>
            <returns>Строковое представление значения</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.Id">
            <summary>
            Возвращает Id типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.Name">
            <summary>
            Возвращает имя типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.FullName">
            <summary>
            Возвращает полное типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.MaxSize">
            <summary>
            Возвращает максимальный размер типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.IsVariantSize">
            <summary>
            Возвращает значение, указывающее, является ли размер типа переменным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.IsSigned">
            <summary>
            Возвращает значение, указывающее, является ли тип знаковым
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.IsString">
            <summary>
            Возвращает значение, указывающее, является ли тип строковым
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.IsInt">
            <summary>
            Возвращает значение, указывающее, является ли тип целым числом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.IsFloat">
            <summary>
            Возвращает значение, указывающее, является ли тип числом с плавающей точкой
            </summary>		
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.IsNumber">
            <summary>
            Возвращает значение, указывающее, является ли тип числом
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.IsDateTime">
            <summary>
            Возвращает значение, указывающее, является ли тип датой и временем
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.IsBoolean">
            <summary>
            Возвращает значение, указывающее, является ли тип булевым
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.IsBlob">
            <summary>
            Возвращает значение, указывающее, является ли тип двоичными данными
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.IsSupported">
            <summary>
            Возвращает значение, указывающее, поддерживается ли данный тип
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.CanBeEncrypted">
            <summary>
            Может ли параметр быть зашифрованным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.CanBeIndexed">
            <summary>
            Возвращает значение, указывающее, может ли тип быть индексируемым
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.CanUseInUniqueIndex">
            <summary>
            Возвращает значение, указывающее, может ли тип входить в условие уникальности
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.SupportsNullable">
            <summary>
            Возвращает значение, указывающее, поддерживает ли тип значения NULL
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.AlwaysNullable">
            <summary>
            Возвращает значение, указывающее, всегда ли тип поддерживает значения NULL
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.SupportsSize">
            <summary>
            Возвращает значение, указывающее, поддерживает ли данный тип свойство размерности данных
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.SupportsMaxSize">
            <summary>
            Возвращает значение, указывающее, поддерживает ли данный тип свойство максимальной размерности данных
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.AlwaysMaxSize">
            <summary>
            Возвращает значение, указывающее, всегда ли установлено свойство размерности данных на максимальную величину
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.SupportsValueList">
            <summary>
            Возвращает значение, указывающее, поддерживает ли  тип список значений
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.ParameterFormatter">
            <summary>
            Возвращает правило форматирования типа
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.LanguageType">
            <summary>
            Возвращает тип параметра в формате System.Type
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.DefaultValue">
            <summary>
            Возвращает значение типа по умолчанию
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.MinValue">
            <summary>
            Возвращает минимальное значение типа (в данном типе не поддерживается)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.Structure.ParameterType.MaxValue">
            <summary>
            Возвращает максимальное значение типа (в данном типе не поддерживается)
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterType.SupportsConversionTo(System.Int32)">
            <summary>
            Возвращает значение, указывающее, поддерживается ли преобразование значения текущего типа в тип, определяемый указанным Id
            </summary>
            <param name="typeId">Id типа параметра</param>
            <returns>Значение true, если преобразование поддерживается; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterType.SupportsConversionTo(TFlex.DOCs.Model.Structure.ParameterType)">
            <summary>
            Возвращает значение, указывающее, поддерживается ли преобразование значения текущего типа в указанный тип
            </summary>
            <param name="type">Тип параметра</param>
            <returns>Значение true, если преобразование поддерживается; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterType.GetConversionList">
            <summary>
            Возвращает список типов параметров, в которые можно преобразовать значение текущего типа
            </summary>
            <returns>Список типов параметров</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterType.GetComparisonOperators">
            <summary>
            Возвращает список операторов сравнения, поддерживаемых текущим типом 
            </summary>
            <returns>Список операторов сравнения</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterType.GetObjectParameterType">
            <summary>
            Возвращает тип, описывающий параметр объекта с типом данных, соответствующим текущему типу
            </summary>
            <returns>Тип, описывающий параметр объекта</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterType.op_Equality(TFlex.DOCs.Model.Structure.ParameterType,TFlex.DOCs.Model.Structure.ParameterType)">
            <summary>
            Определяет, равны ли заданные типы параметров
            </summary>
            <param name="obj1">Первый тип для сравнения</param>
            <param name="obj2">Второй тип для сравнения</param>
            <returns>Значение true, если типы параметров равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterType.op_Inequality(TFlex.DOCs.Model.Structure.ParameterType,TFlex.DOCs.Model.Structure.ParameterType)">
            <summary>
            Определяет, различаются ли заданные типы параметров
            </summary>
            <param name="obj1">Первый тип для сравнения</param>
            <param name="obj2">Второй тип для сравнения</param>
            <returns>Значение true, если типы параметров различаются; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterType.Equals(System.Object)">
            <summary>
            Определяет, равен ли указанный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если объекты равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterType.GetHashCode">
            <summary>
            Возвращает хэш-код текущего объекта
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterType.Equals(TFlex.DOCs.Model.Structure.ParameterType)">
            <summary>
            Определяет, равен ли указанный тип параметра текущему
            </summary>
            <param name="other">Тип параметра для сравнения</param>
            <returns>Значение true, если типы параметров равны; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.Structure.ParameterType.ToString">
            <summary>
            Возвращает строковое представление типа параметра
            </summary>
            <returns>Строковое представление типа параметра</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.ParameterActivityStatus">
            <summary>
            Статус активности параметра
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterActivityStatus.AccessDenied">
            <summary>
            Параметр исключен из работы справочника (только для предопределенных параметров). Не доступен для работы клиента, невидим в утилите администрирования.
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterActivityStatus.AdministrateOnly">
            <summary>
            Требуется изменение физической структуры хранения. Недоступен для работы клиента, видим в утилите администрирования.
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterActivityStatus.Normal">
            <summary>
            Полностью «рабочий параметр». Доступен для работы клиента, видим в утилите администрирования.
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.ParameterEditType">
            <summary>
            Способы изменения значения параметра
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterEditType.ChangeFromUIAllowed">
            <summary>
            Разрешено изменение значения параметра из интерфейса
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterEditType.ChangeFromGridAllowed">
            <summary>
            Разрашено прозрачное редактирование значения параметра
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterEditType.ChangeFromUIDenied">
            <summary>
            Запрещено изменение значения параметра из интерфейса
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.ParameterEditType.AnyChangeDenied">
            <summary>
            Изменение значения параметра запрещено
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.Structure.SystemParameterType">
            <summary>
            Системные параметры
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SystemParameterType.NotSystem">
            <summary>
            Не системный
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SystemParameterType.ObjectId">
            <summary>
            Id
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SystemParameterType.Guid">
            <summary>
            Guid
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SystemParameterType.Version">
            <summary>
            Версия
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SystemParameterType.Author">
            <summary>
            Автор
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SystemParameterType.CreationDate">
            <summary>
            Дата создания
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SystemParameterType.Editor">
            <summary>
            Автор последнего изменения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SystemParameterType.EditDate">
            <summary>
            Дата последнего изменения
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SystemParameterType.Class">
            <summary>
            Тип
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SystemParameterType.Parent">
            <summary>
            Родительский объект
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SystemParameterType.Stage">
            <summary>
            Стадия
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SystemParameterType.LinkedToNomenclature">
            <summary>
            Подключен к номенклатуре
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SystemParameterType.Deleted">
            <summary>
            Удален
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.Structure.SystemParameterType.IsPrimary">
            <summary>
            Является первичным ключом
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.DomainObjectCollection`1">
            <summary>
            Коллекция объектов с ID
            </summary>
            <typeparam name="T">Тип объектов в коллекции</typeparam>
        </member>
        <member name="T:TFlex.DOCs.Model.GuidDomainObjectCollection`1">
            <summary>
            Коллекция объектов с GUID
            </summary>
            <typeparam name="T">Тип объектов в коллекции</typeparam>
        </member>
        <member name="T:TFlex.DOCs.Model.ConnectionParameters">
            <summary>
            Параметры подключения к серверу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ConnectionParameters.UserName">
            <summary>
            Возвращает имя пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ConnectionParameters.Password">
            <summary>
            Возвращает хэш пароля пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ConnectionParameters.WindowsAuthentication">
            <summary>
            Возвращает значение, указывающее, было ли подключение выполнено при помощи авторизации Windows
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ConnectionParameters.Server">
            <summary>
            Возвращает наименование сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ConnectionParameters.Proxy">
            <summary>
            Возвращает настройки proxy-сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ConnectionParameters.ConfigurationGuid">
            <summary>
            Возвращает Guid конфигурации
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ConnectionParameters.GetServerAddress">
            <summary>
            Возвращает адрес сервера
            </summary>
            <returns>Адрес сервера</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.IModelCallback">
            <summary>
            Функции обратного вызова для Model
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.IModelCallback.OnDesktopOperation(TFlex.DOCs.Model.Desktop.DesktopOperationInfo,System.Object)">
            <summary>
            Проверяет возможность продолжения операции рабочего стола
            </summary>
            <param name="operation">описание операции</param>
            <param name="context">контекст вызова</param>
            <returns>true, если можно продолжить выполнение операции</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.ReferenceCatalogFolder">
            <summary>
            Папка каталога справочников
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceCatalogFolder.Id">
            <summary>
            Возвращает Id папки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceCatalogFolder.Guid">
            <summary>
            Возвращает Guid папки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceCatalogFolder.Parent">
            <summary>
            Возвращает родительский каталог
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceCatalogFolder.Folders">
            <summary>
            Возвращает коллекцию входящих папок
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalogFolder.CreateFolder(System.String)">
            <summary>
            Создает новую папку в каталоге справочников
            </summary>
            <param name="name">Имя папки</param>
            <param name="parent">Родительская папка</param>
            <returns>Созданная папка каталога справочников</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceCatalogFolder.References">
            <summary>
            Возвращает коллекцию входящих справочников
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ReferenceCatalogFolder.Name">
            <summary>
            Возвращает имя папки
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalogFolder.Rename(System.String)">
            <summary>
            Переименовывает папку каталога справочников
            </summary>
            <param name="folder">Папка для переименования</param>
            <param name="name">Новое имя папки</param>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalogFolder.Delete">
            <summary>
            Удаляет папку из каталога справочников
            </summary>
            <param name="folder">Папка для удаления</param>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalogFolder.MoveTo(TFlex.DOCs.Model.ReferenceCatalogFolder)">
            <summary>
            Перемещает папку в пределах каталога справочников
            </summary>
            <param name="folder">Папка для перемещения</param>
            <param name="newParent">Новая родительская папка</param>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalogFolder.Contains(TFlex.DOCs.Model.ReferenceCatalogFolder)">
            <summary>
            Возвращает значение, указывающее, содержится ли в текущей папке указанная
            </summary>
            <param name="folder">Папка каталога справочника</param>
            <returns>Значение true, если указанная папка содержится в текущей; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalogFolder.ContainsReferences">
            <summary>
            Возвращает значение, указывающее, содержатся ли в папке справочники
            </summary>
            <returns>Значение true, если папка содержит справочники; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalogFolder.ToString">
            <summary>
            Возвращает строковое представление папки
            </summary>
            <returns>Строковое представление папки</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalogFolder.CompareTo(TFlex.DOCs.Model.ReferenceCatalogFolder)">
            <summary>
            Сравнивает текущую папку с указанной
            </summary>
            <param name="other">Папка для сравнения</param>
            <returns>Значение равное нулю, если папки равны; значение большее нуля, если текущая папка больше указанной; значение меньшее нуля, если текущая папка меньше указанной</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ReferenceCatalogFolder.IsEmpty">
            <summary>
            Возвращает значение, указывающее, является ли папка пустой
            </summary>
            <returns>Значение true, если папка пуста; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.DomainObject">
            <summary>
            Объект с ID
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.DomainObject.Id">
            <summary>
            Возвращает ID объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.DomainObject.GetHashCode">
            <summary>
            Возвращает хэш-код объекта
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.DomainObject.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если заданный объект равен текущему; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.DomainObject.op_Equality(TFlex.DOCs.Model.DomainObject,TFlex.DOCs.Model.DomainObject)">
            <summary>
            Возвращает значение, указывающее, равны ли заданные объекты
            </summary>
            <param name="first">Первый объект для сравнения</param>
            <param name="second">Второй объект для сравнения</param>
            <returns>Значение true, если указанные объекты идентичны, в противном случае - значение  false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.DomainObject.op_Inequality(TFlex.DOCs.Model.DomainObject,TFlex.DOCs.Model.DomainObject)">
            <summary>
            Возвращает значение, указывающее, различаются ли заданные объекты
            </summary>
            <param name="first">Первый объект для сравнения</param>
            <param name="second">Вторйо объект для сравнения</param>
            <returns>Значение true, если указанные объекты различаются; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.GuidDomainObject">
            <summary>
            Объект с GUID
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.GuidDomainObject.Guid">
            <summary>
            Возвращает GUID объекта
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.GuidDomainObject.GetHashCode">
            <summary>
            Возвращает хэш-код объекта
            </summary>
            <returns>Хэш-код в виде 32-битового целого числа со знаком</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.GuidDomainObject.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли заданный объект текущему
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Значение true, если заданный объект равен текущему; в противном случае - значение false</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.StateGuidDomainObject">
            <summary>
            Объект с GUID и статусом изменений
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.StateGuidDomainObject.IsAdded">
            <summary>
            Возвращает значение, указывающее, является ли объект добавленным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.StateGuidDomainObject.IsModified">
            <summary>
            Возвращает значение, указывающее, является ли объект модифицированным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.StateGuidDomainObject.IsDeleted">
            <summary>
            Возвращает значение, указывающее, является ли объект удаленным
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.StateGuidDomainObject.IsChanged">
            <summary>
            Возвращает значение, указывающее, является ли объект измененным (модифицированым, удаленным или добавленным)
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.ClientView">
            <summary>
            Рабочее место пользователя
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ClientView.Current">
            <summary>
            Возвращает текущее рабочее место
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ClientView.IsAdministrator">
            <summary>
            Возвращает значение, указывающее, является ли текущее рабочее место рабочим местом администратора
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ClientView.GetAllClientViews">
            <summary>
            Возвращает список всех рабочих мест системы
            </summary>
            <returns>Список рабочих мест</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ClientView.GetAllClientViews(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Возвращает список всех рабочих мест системы
            </summary>
            <returns>Список рабочих мест</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ClientView.GetHosts">
            <summary>
            Возвращает список всех рабочих станций
            </summary>
            <returns>Список наименований рабочих станций</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ClientView.GetHosts(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Возвращает список всех рабочих станций
            </summary>
            <returns>Список наименований рабочих станций</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ClientView.GetUser">
            <summary>
            Возвращает пользователя рабочего места
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ClientView.Name">
            <summary>
            Возвращает наименование рабочего места
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ClientView.HostName">
            <summary>
            Возвращает наименование рабочей стании рабочего места
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ClientView.UserId">
            <summary>
            Возвращает Id пользователя рабочего места
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ClientView.UserName">
            <summary>
            Возвращает наименование пользователя рабочего места
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ClientView.ToString">
            <summary>
            Возвращает строковое представление рабочего места
            </summary>
            <returns>Строковое представление рабочего места</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.ClientView.WorkingFolder">
            <summary>
            Возвращает путь к рабочей папке пользователя
            </summary>
            <returns>Путь к рабочей папке</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ClientView.SetWorkingFolder(System.String)">
            <summary>
            Задает рабочую папку пользователя
            </summary>
            <param name="path">Путь к рабочей папке</param>
        </member>
        <member name="T:TFlex.DOCs.Model.IconImage">
            <summary>
            Иконка T-FLEX DOCs
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.IconImage.#ctor(System.IO.Stream)">
            <summary>
            Создает новую иконку из указанного потока
            </summary>
            <param name="stream">Поток, содержащий иконку</param>
        </member>
        <member name="M:TFlex.DOCs.Model.IconImage.#ctor(System.Byte[])">
            <summary>
            Создает новую иконку из указанного массива байтов
            </summary>
            <param name="bytes">Массив байтов, содержащий иконку</param>
        </member>
        <member name="M:TFlex.DOCs.Model.IconImage.#ctor(System.String)">
            <summary>
            Создает новую иконку из файла по указанному пути
            </summary>
            <param name="path"></param>
        </member>
        <member name="P:TFlex.DOCs.Model.IconImage.InternalIcon">
            <summary>
            Возвращает внутреннюю иконку типа <see cref="T:System.Drawing.Icon"/>
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.IconImage.SmallImage">
            <summary>
            Возвращает изображение иконки маленького размера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.IconImage.MediumImage">
            <summary>
            Возвращает изображение иконки среднего размера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.IconImage.LargeImage">
            <summary>
            Возвращает изображение иконки большого размера
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.IconImage.op_Implicit(System.Drawing.Icon)~TFlex.DOCs.Model.IconImage">
            <summary>
            Неявное приведение иконки типа <see cref="T:System.Drawing.Icon"/> к иконке T-FLEX DOCs
            </summary>
            <param name="icon">Исходная иконка</param>
            <returns>Иконка T-FLEX DOCs</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.IconImage.Save(System.IO.Stream)">
            <summary>
            Сохраняет тконку в указанный поток
            </summary>
            <param name="outputStream">Поток для сохранения иконки</param>
        </member>
        <member name="M:TFlex.DOCs.Model.IconImage.Serialize">
            <summary>
            Сериализует иконку в массив байтов
            </summary>
            <returns>Массив байтов, содержащий иконку</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.IconImage.Clone">
            <summary>
            Создает копию иконки
            </summary>
            <returns>Созданная иконка</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.IconImage.SmallIconSize">
            <summary>
            Возвращает размер маленькой иконки
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.IconImage.IsLargeFont">
            <summary>
            Возвращает значение, указывающее, используется ли крупный шрифт
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.StateCollection`1">
            <summary>
            Коллекция объектов с отслеживанием изменений исходных данных
            </summary>
            <typeparam name="T">Тип объектов в коллекции</typeparam>
        </member>
        <member name="M:TFlex.DOCs.Model.StateCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Создает новый экземпляр класса для работы с указанной коллекцией
            </summary>
            <param name="source">Коллекция объектов</param>
        </member>
        <member name="P:TFlex.DOCs.Model.StateCollection`1.IsModified">
            <summary>
            Возвращает значение, указывающее, является ли коллекция модифицированной
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.StateCollection`1.Commit">
            <summary>
            Применяет изменения к исходной коллекции объектов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.StateCollection`1.Rollback">
            <summary>
            Отменяет изменения исходной коллекции объектов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.StateCollection`1.GetAddedItems">
            <summary>
            Возвращает добавленные в коллекцию элементы
            </summary>
            <returns>Набор добавленных элементов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.StateCollection`1.GetDeletedItems">
            <summary>
            Возвращает удаленные из коллекции элементы
            </summary>
            <returns>Набор удаленных элементов</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.StateCollection`1.CanAddItem(`0)">
            <summary>
            Возвращает значение, указывающее, возможно ли добавление указанного элемента в коллекцию
            </summary>
            <param name="item">Элемент для проверки</param>
            <returns>Значение true, если добавление данного элемента в коллекцию возможно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.StateCollection`1.CanRemoveItem(`0)">
            <summary>
            Возвращает значение, указывающее, возможно ли удаление указанного элемента из коллекции
            </summary>
            <param name="item">Элемент для проверки</param>
            <returns>Значение true, если удаление данного элемента из коллекции возможно; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.StateCollection`1.IndexOf(`0)">
            <summary>
            Возвращает индекс указанного элемента в коллекции
            </summary>
            <param name="item">Элемент коллекции</param>
            <returns>Индекс элемента в коллекции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.StateCollection`1.Insert(System.Int32,`0)">
            <summary>
            Добавляет указанный элемент в коллекцию по заданному индексу
            </summary>
            <param name="index">Индекс добавляемого элемента</param>
            <param name="item">Добавляемый элемент</param>
        </member>
        <member name="M:TFlex.DOCs.Model.StateCollection`1.RemoveAt(System.Int32)">
            <summary>
            Удаляет из коллекции элемент с указанным индексом
            </summary>
            <param name="index">Индекс удаляемого элемента</param>
        </member>
        <member name="P:TFlex.DOCs.Model.StateCollection`1.Item(System.Int32)">
            <summary>
            Возвращает или задает элемент коллекции по указанному индексу
            </summary>
            <param name="index">Индекс элемента в коллекции</param>
            <returns>Элемент коллекции</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.StateCollection`1.Add(`0)">
            <summary>
            Добавляет указанный элемент в коллекцию
            </summary>
            <param name="item">Элемент для добавления</param>
        </member>
        <member name="M:TFlex.DOCs.Model.StateCollection`1.Clear">
            <summary>
            Очищает коллекцию элементов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.StateCollection`1.Contains(`0)">
            <summary>
            Возвращает значение, указывающее, содержится ли заданный элемент в коллекции
            </summary>
            <param name="item">Элемент коллекции</param>
            <returns>Значение true, если указанный элемент содержится в коллекции; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.StateCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Копирует элементы коллекции в указанный массив по заданному индексу
            </summary>
            <param name="array">Массив для копирования объектов</param>
            <param name="arrayIndex">Индекс в массиве объектов, с которого следует начинать копирование</param>
        </member>
        <member name="P:TFlex.DOCs.Model.StateCollection`1.Count">
            <summary>
            Возвращает количество элементов  в коллекции
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.StateCollection`1.IsReadOnly">
            <summary>
            Возвращает значение, указывающее, является ли коллекция доступной только для чтения
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.StateCollection`1.Remove(`0)">
            <summary>
            Удяляет указанный элемент из коллекции
            </summary>
            <param name="item">Элемент для удаления</param>
            <returns>Значение true, если элемент был успешно удален из коллекции; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.StateCollection`1.GetEnumerator">
            <summary>
            Возвращает перечислитель элементов коллекции
            </summary>
            <returns>Перечислитель элементов коллекции</returns>
        </member>
        <member name="T:TFlex.DOCs.Model.ServerGateway">
            <summary>
            Управление подключением к серверу
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.ServerGateway._syncRoot">
            <summary>
            Объект для синхронизации
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.ServerGateway._serverConnection">
            <summary>
            Соединение с сервером приложений
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.ServerGateway.ConnectionLost">
            <summary>
            Событие, возникающее при потере соединения
            </summary>
        </member>
        <member name="E:TFlex.DOCs.Model.ServerGateway.ConnectionRestored">
            <summary>
            Событие, возникающее при восстановлении соединения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerGateway.Connection">
            <summary>
            Соединение с сервером приложений
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerGateway.Connect(System.String)">
            <summary>
            Подключается к серверу с использованием авторизации Windows
            </summary>
            <param name="server">Имя сервера</param>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerGateway.Connect(System.String,TFlex.PdmFramework.Login.MD5HashString,System.String)">
            <summary>
            Подключается к серверу с использованием авторизации сервера
            </summary>
            <param name="userName">Имя пользователя</param>
            <param name="password">Пароль пользователя</param>
            <param name="server">Имя сервера</param>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerGateway.Connect(System.String,TFlex.PdmFramework.Login.MD5HashString,System.String,System.Net.IWebProxy)">
            <summary>
            Подключается к серверу с использованием авторизации сервера
            </summary>
            <param name="userName">Имя пользователя</param>
            <param name="password">Пароль пользователя</param>
            <param name="server">Имя сервера</param>
            <param name="proxy">Настройки proxy-сервера</param>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerGateway.Connect(System.String,TFlex.PdmFramework.Login.MD5HashString,System.String,System.Nullable{System.Guid},System.Net.IWebProxy)">
            <summary>
            Подключается к серверу с использованием авторизации сервера
            </summary>
            <param name="userName">Имя пользователя</param>
            <param name="password">Пароль пользователя</param>
            <param name="server">Имя сервера</param>
            <param name="configurationGuid">Конфигурация</param>
            <param name="proxy">Настройки proxy-сервера</param>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerGateway.Connect">
            <summary>
            Подключается к серверу с использованием текущего логина либо с отображением диалога подключения
            </summary>
            <returns>Значение true, если соединение установлено, в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerGateway.Connect(System.Boolean)">
            <summary>
            Подключается к серверу с использованием текущего логина либо с отображением диалога подключения
            </summary>
            <param name="reregister">Значение true, если требуется всегда показывать диалог подключения</param>
            <returns>Значение true, если соединение установлено, в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerGateway.Connect(System.Boolean,System.Nullable{System.Guid})">
            <summary>
            Подключается к серверу с использованием текущего логина либо с отображением диалога подключения
            </summary>
            <param name="reregister">Значение true, если требуется всегда показывать диалог подключения</param>
            <param name="configuration">Конфигурация</param>
            <returns>Значение true, если соединение установлено, в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerGateway.Disconnect">
            <summary>
            Отключается от сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerGateway.ConnectionParameters">
            <summary>
            Возвращает параметры текущего подключения
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerGateway.IsConnected">
            <summary>
            Возвращает статус соединения (подключено/отключено)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerGateway.IsDemo">
            <summary>
            Возвращает значение, указывающее, является ли текущая версия ознакомительной
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerGateway.Version">
            <summary>
            Возвращает версию сервера
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerGateway.EvaluationTime">
            <summary>
            Возвращает дату прекращения работы ознакомительной версии
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerGateway.Callback">
            <summary>
            Возвращает или задаёт интерфейс обратных вызовов API T-FLEX DOCs
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerGateway.ServerName">
            <summary>
            Возвращает имя сервера
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerGateway.GetActiveConnections">
            <summary>
            Возвращает список активных соединений
            </summary>
            <returns>Список активных соединений</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerGateway.GetAvailableLicenses">
            <summary>
            Возвращает список доступных лицензий
            </summary>
            <returns>Список доступных лицензий</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerGateway.GetLicenseKeyInfo">
            <summary>
            Возвращает информацию о ключе
            </summary>
            <returns>Информация о ключе</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerGateway.GetClientConfigurations">
            <summary>
            Возвращает список конфигураций системы
            </summary>
            <returns>Список конфигураций</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerGateway.GetWebConfigurations">
            <summary>
            Возвращает список web-конфигураций системы
            </summary>
            <returns>Список конфигураций</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerGateway.GetConfigurations">
            <summary>
            Возвращает список всех конфигураций системы (клиент+web)
            </summary>
            <returns>Список конфигураций</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerGateway.ExportConfigurations(System.IO.Stream)">
            <summary>
            Выполняет экспорт всех конфигураций системы в указанный поток
            </summary>
            <param name="stream">Поток для экспорта конфигураций</param>
            <returns>Значение true, если конфигурации успешно экспортированы; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerGateway.ExportConfigurations(System.IO.Stream,System.Collections.Generic.IEnumerable{TFlex.DOCs.Model.Configuration.BaseConfiguration})">
            <summary>
            Выполняет экспорт указанной коллекции конфигураций в заданный поток
            </summary>
            <param name="stream">Поток для экспорта конфигураций</param>
            <param name="configurations">Коллекция конфигураций для экспорта</param>
            <returns>Значение true, если конфигурации успешно экспортированы; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.Model.ServerGateway.ImportConfigurations(System.IO.Stream)">
            <summary>
            Выполняет импорт конфигураций системы из указанного потока
            </summary>
            <param name="stream">Поток, содержащий конфигурации</param>
            <returns>Возвращает список импортированных конфигураций</returns>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerGateway.CurrentConfiguration">
            <summary>
            Возвращает текущую конфигурацию системы
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerGateway.Mail">
            <summary>
            Возвращает почтовую службу
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerGateway.BytesSent">
            <summary>
            Возвращает количество отправленных байт (в сжатом виде)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerGateway.BytesReceived">
            <summary>
            Возвращает количество полученных байт (в сжатом виде)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerGateway.UnzippedBytesSent">
            <summary>
            Возвращает количество отправленных байт (в распакованном виде)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerGateway.UnzippedBytesReceived">
            <summary>
            Возвращает количество полученных байт (в распакованном виде)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerGateway.SentPercentsZipped">
            <summary>
            Коэффициент сжатия исходящего трафика, в процентах
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.ServerGateway.ReceivedPercentsZipped">
            <summary>
            Коэффициент сжатия входящего трафика, в процентах
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Model.SystemReferences">
            <summary>
            Системные справочники
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.SystemReferences._connection">
            <summary>
            Соединение с сервером приложений
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.SystemReferences._certificates">
            <summary>
            Справочник "Сертификаты"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.SystemReferences._users">
            <summary>
            Справочник "Группы и пользователи"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.SystemReferences._globalParameters">
            <summary>
            Справочник "Глобальные параметры"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.SystemReferences._macros">
            <summary>
            Справочник "Макросы"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.SystemReferences._reports">
            <summary>
            Справочник "Отчёты"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.SystemReferences._units">
            <summary>
            Справочник "Единицы измерения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Model.SystemReferences._workingAreas">
            <summary>
            Справочник "Папки"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.SystemReferences.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="connection">Соединение с сервером приложений</param>
        </member>
        <member name="P:TFlex.DOCs.Model.SystemReferences.Connection">
            <summary>
            Соединение с сервером приложений
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.SystemReferences.Certificates">
            <summary>
            Справочник "Сертификаты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.SystemReferences.Users">
            <summary>
            Справочник "Группы и пользователи"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.SystemReferences.GlobalParameters">
            <summary>
            Справочник "Глобальные параметры"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.SystemReferences.Macros">
            <summary>
            Справочник "Макросы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.SystemReferences.Reports">
            <summary>
            Справочник "Отчёты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.SystemReferences.Units">
            <summary>
            Справочник "Единицы измерения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Model.SystemReferences.WorkingAreas">
            <summary>
            Справочник "Папки"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Model.SystemReferences.GetReference``1(TFlex.DOCs.Model.Structure.SpecialReference)">
            <summary>
            Получить ссылку на справочник указанного типа
            </summary>
            <typeparam name="T">Тип справочника</typeparam>
            <param name="reference">Описание требуемого справочника</param>
            <returns>Ссылка на справочник</returns>
        </member>
        <member name="T:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureObject">
            <summary>
            Представляет объект "Физическая структура" справочника "Физическая структура изделий" или порождённый от него
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureObject.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureObject.Date">
            <summary>
            Возвращает параметр "Дата"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureObject.ProductStructureId">
            <summary>
            Возвращает параметр "Id структуры изделий"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReference">
            <summary>
            Представляет описание справочника "Физическая структура изделий"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReference.ReferenceId">
            <summary>
            Представляет уникальный идентификатор (GUID) справочника "Физическая структура изделий"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Инициализирует новый экземпляр PhysicalStructureReference для работы с объектами справочника "Физическая структура изделий"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReference.Classes">
            <summary>
            Возвращает типы объектов справочника "Физическая структура изделий"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject">
            <summary>
            Представляет объект справочника "Физическая структура изделий"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject.Class">
            <summary>
            Возвращет описание типа объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject.PhysicalStructureFiles">
            <summary>
            Возвращает связанные объекты справочника "Файлы" по связи "Файлы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject.PhysicalStructureFolder">
            <summary>
            Возвращает или задаёт связанный объект справочника "Файлы" по связи "Папка"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject.Product">
            <summary>
            Возвращает или задаёт связанный объект справочника "Номенклатура и изделия" по связи "Изделие"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject.AddPhysicalStructureFiles(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект справочника "Файлы" по связи "Файлы"
            </summary>
            <param name="newLinkedObject">
            Подключаемый объект
            </param>
            <returns>
            Подключённый объект
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject.RemovePhysicalStructureFiles(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Отключает объект справочника "Файлы" по связи "Файлы"
            </summary>
            <param name="linkedObject">
            Связанный объект
            </param>
            <returns>
            true, если объект был отключен
            </returns>
        </member>
        <member name="T:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject.FieldKeys">
            <summary>
            Уникальные идентификаторы (GUID) параметров справочника "Физическая структура изделий"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject.FieldKeys.Name">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject.FieldKeys.Date">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Дата"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject.FieldKeys.ProductStructureId">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Id структуры изделий"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject.FieldKeys.Amount">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Количество"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject.FieldKeys.Position">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Позиция"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject.FieldKeys.BOMSection">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Раздел спецификации"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject.FieldKeys.VariationDescription">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Название варианта"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject.FieldKeys.Denotation">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Обозначение"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject.RelationKeys">
            <summary>
            Уникальные идентификаторы (GUID) связей и списков объектов справочника "Физическая структура изделий"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject.RelationKeys.PhysicalStructureFiles">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Файлы"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject.RelationKeys.PhysicalStructureFolder">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Папка"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureReferenceObject.RelationKeys.Product">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Изделие"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureType">
            <summary>
            Представляет описание типа объекта справочника "Физическая структура изделий"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureType.Classes">
            <summary>
            Возвращает типы объектов справочника "Физическая структура изделий"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureType.IsPhysicalStructure">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Физическая структура" или порождён от него
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureType.IsStructureElement">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Элемент структуры" или порождён от него
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureTypes">
            <summary>
            Представляет типы объектов справочника "Физическая структура изделий"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureTypes.PhysicalStructure">
            <summary>
            Возвращает описание типа объектов "Физическая структура"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureTypes.StructureElement">
            <summary>
            Возвращает описание типа объектов "Элемент структуры"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureTypes.Keys">
            <summary>
            Уникальные идентификаторы (GUID) типов объектов справочника "Физическая структура изделий"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureTypes.Keys.PhysicalStructure">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Физическая структура"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.PhysicalStructure.PhysicalStructureTypes.Keys.StructureElement">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Элемент структуры"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.PhysicalStructure.StructureElementObject">
            <summary>
            Представляет объект "Элемент структуры" справочника "Физическая структура изделий" или порождённый от него
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.StructureElementObject.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.StructureElementObject.Date">
            <summary>
            Возвращает параметр "Дата"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.StructureElementObject.ProductStructureId">
            <summary>
            Возвращает параметр "Id структуры изделий"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.StructureElementObject.Amount">
            <summary>
            Возвращает параметр "Количество"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.StructureElementObject.Position">
            <summary>
            Возвращает параметр "Позиция"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.StructureElementObject.BOMSection">
            <summary>
            Возвращает параметр "Раздел спецификации"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.StructureElementObject.VariationDescription">
            <summary>
            Возвращает параметр "Название варианта"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.PhysicalStructure.StructureElementObject.Denotation">
            <summary>
            Возвращает параметр "Обозначение"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationReference">
            <summary>
            Список объектов "Элементы правила" справочника "Правила настройки интеграции приложений"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationReference.Classes">
            <summary>
            Возвращает дерево типов списка объектов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationReference.CreateReferenceObjectForClass(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект указанного типа в текущем списке объектов
            </summary>
            <param name="classObject">Тип создаваемого объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="T:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationReferenceObject">
            <summary>
            Объект списка объектов "Элементы правила"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationReferenceObject.Class">
            <summary>
            Возвращет тип объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationReferenceObject.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationReferenceObject.ApplicationParameter">
            <summary>
            Возвращает параметр "Параметр документа приложения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationReferenceObject.DOCsParameterType">
            <summary>
            Возвращает параметр "Тип параметра DOCs"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationReferenceObject.DOCsParameter">
            <summary>
            Возвращает параметр "Параметр DOCs"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationReferenceObject.ApplicationParameterType">
            <summary>
            Возвращает параметр "Тип параметра приложения"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationReferenceObject.FieldKeys">
            <summary>
            Идентификаторы параметров списка объектов "Элементы правила"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationReferenceObject.FieldKeys.Name">
            <summary>
            Guid параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationReferenceObject.FieldKeys.ApplicationParameter">
            <summary>
            Guid параметра "Параметр документа приложения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationReferenceObject.FieldKeys.DOCsParameterType">
            <summary>
            Guid параметра "Тип параметра DOCs"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationReferenceObject.FieldKeys.DOCsParameter">
            <summary>
            Guid параметра "Параметр DOCs"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationReferenceObject.FieldKeys.ApplicationParameterType">
            <summary>
            Guid параметра "Тип параметра приложения"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationType">
            <summary>
            Тип объектов списка "Элементы правила"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationType.Classes">
            <summary>
            Возвращает дерево типов списка объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationType.IsApplicationRelationType">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Элемент правила"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationTypes">
            <summary>
            Дерево типов списка объектов "Элементы правила"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationTypes.ApplicationRelationType">
            <summary>
            Возвращает тип "Элемент правила"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationTypes.CreateClassObject(System.Guid)">
            <summary>
            Создает экземпляр типа с указанным Guid
            </summary>
            <param name="classGuid">Guid типа</param>
            <returns>Созданный тип</returns>
        </member>
        <member name="T:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationTypes.Keys">
            <summary>
            Идентификаторы типов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ApplicationRelation.ApplicationRelationTypes.Keys.ApplicationRelationType">
            <summary>
            Guid типа "Элемент правила"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ApplicationRelation.TypesRelationsReference">
            <summary>
            Список объектов "Типы" справочника "Правила настройки интеграции приложений"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationRelation.TypesRelationsReference.Classes">
            <summary>
            Возвращает дерево типов списка объектов
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.ApplicationRelation.TypesRelationsReference.CreateReferenceObjectForClass(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект указанного типа в текущем списке объектов
            </summary>
            <param name="classObject">Тип создаваемого объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="T:TFlex.DOCs.References.ApplicationRelation.TypesRelationsReferenceObject">
            <summary>
            Объект списка объектов "Типы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationRelation.TypesRelationsReferenceObject.Class">
            <summary>
            Возвращет тип объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationRelation.TypesRelationsReferenceObject.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationRelation.TypesRelationsReferenceObject.AppTypeName">
            <summary>
            Возвращает параметр "Название типа в приложении"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationRelation.TypesRelationsReferenceObject.NomenclatureType">
            <summary>
            Возвращает параметр "Тип объекта номенклатуры"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationRelation.TypesRelationsReferenceObject.LinkToFiles">
            <summary>
            Возвращает параметр "Связь с файлом"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ApplicationRelation.TypesRelationsReferenceObject.FieldKeys">
            <summary>
            Идентификаторы параметров списка объектов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ApplicationRelation.TypesRelationsReferenceObject.FieldKeys.Name">
            <summary>
            Guid параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ApplicationRelation.TypesRelationsReferenceObject.FieldKeys.AppTypeName">
            <summary>
            Guid параметра "Название типа в приложении"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ApplicationRelation.TypesRelationsReferenceObject.FieldKeys.NomenclatureType">
            <summary>
            Guid параметра "Тип объекта номенклатуры"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ApplicationRelation.TypesRelationsReferenceObject.FieldKeys.LinkToFiles">
            <summary>
            Guid параметра "Связь с файлом"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ApplicationRelation.TypesRelationsType">
            <summary>
            Тип объектов списка "Типы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationRelation.TypesRelationsType.Classes">
            <summary>
            Возвращает дерево типов списка объектов
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationRelation.TypesRelationsType.IsTypesRelationsClass">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Описание типа"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ApplicationRelation.TypesRelationsTypes">
            <summary>
            Дерево типов списка объектов "Типы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationRelation.TypesRelationsTypes.TypesRelationsClass">
            <summary>
            Возвращает тип "Описание типа"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.ApplicationRelation.TypesRelationsTypes.CreateClassObject(System.Guid)">
            <summary>
            Создает экземпляр типа с указанным Guid
            </summary>
            <param name="classGuid">Guid типа</param>
            <returns>Созданный тип</returns>
        </member>
        <member name="T:TFlex.DOCs.References.ApplicationRelation.TypesRelationsTypes.Keys">
            <summary>
            Идентификаторы типов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ApplicationRelation.TypesRelationsTypes.Keys.TypesRelationsClass">
            <summary>
            Guid типа "Описание типа"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReference">
            <summary>
            Справочник "Правила настройки интеграции приложений"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReference.#ctor">
            <summary>
            Инициализирует новый экземпляр справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Инициализирует новый экземпляр справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReference.Guid">
            <summary>
            Возвращает Guid справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReference.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReference.CreateReferenceObjectForClass(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создает объект справочника для указанного типа объектов
            </summary>
            <param name="classObject">Тип создаваемого объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="T:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReferenceObject">
            <summary>
            Объект справочника "Правила настройки интеграции приложений"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReferenceObject.Class">
            <summary>
            Возвращет тип объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReferenceObject.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReferenceObject.AppCode">
            <summary>
            Возвращает параметр "Тип приложения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReferenceObject.LocalFilePaths">
            <summary>
            Возвращает параметр "Папки поиска CAD"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReferenceObject.ApplicationsRelations">
            <summary>
            Возвращает объекты списка "Элементы правила"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReferenceObject.TypeRelations">
            <summary>
            Возвращает объекты списка "Типы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReferenceObject.AssocParameters">
            <summary>
            Возвращает объекты списка "Ассоциированные параметры"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReferenceObject.AddApplicationRelation(System.Guid)">
            <summary>
            Создаёт объект указанного типа в списке объектов  "Элементы правила"
            </summary>
            <param name="listObjectClass">Guid типа создаваемого объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="M:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReferenceObject.AddApplicationRelation(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создаёт объект указанного типа в списке объектов "Элементы правила"
            </summary>
            <param name="listObjectClass">Тип создаваемого объекта</param>
            <returns>Созданный объект</returns>
        </member>
        <member name="T:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReferenceObject.FieldKeys">
            <summary>
            Идентификаторы параметров справочника
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReferenceObject.FieldKeys.Name">
            <summary>
            Guid параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReferenceObject.FieldKeys.AppCode">
            <summary>
            Guid параметра "Тип приложения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReferenceObject.FieldKeys.LocalFilePaths">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Папки поиска файлов CAD"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReferenceObject.RelationKeys">
            <summary>
            Идентификаторы связей и списков объектов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReferenceObject.RelationKeys.ApplicationsRelations">
            <summary>
            Guid списка объектов "Элементы правила"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReferenceObject.RelationKeys.TypesRelations">
            <summary>
            Guid списка объектов "Типы"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileReferenceObject.RelationKeys.ParametersAssociation">
            <summary>
            Представляет уникальный идентификатор (GUID) списка объектов "Связь с параметрами"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileType">
            <summary>
            Тип объектов справочника "Правила настройки интеграции приложений"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileType.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileType.IsApplicationsRelationsProfileType">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Правило"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileTypes">
            <summary>
            Дерево типов справочника "Правила настройки интеграции приложений"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileTypes.ApplicationsRelationsProfileType">
            <summary>
            Возвращает тип "Правило"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileTypes.CreateClassObject(System.Guid)">
            <summary>
            Создает экземпляр типа с указанным Guid
            </summary>
            <param name="classGuid">Guid типа</param>
            <returns>Созданный тип</returns>
        </member>
        <member name="T:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileTypes.Keys">
            <summary>
            Идентификаторы типов
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ApplicationsRelationsProfile.ApplicationsRelationsProfileTypes.Keys.ApplicationsRelationsProfileType">
            <summary>
            Guid типа "Правило"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.Contacts.ContactReferenceObject">
            <summary>
            Представляет объект справочника "Контакты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.Class">
            <summary>
            Возвращет описание типа объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.LastName">
            <summary>
            Возвращает параметр "Фамилия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.Name">
            <summary>
            Возвращает параметр "Имя"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.MiddleName">
            <summary>
            Возвращает параметр "Отчество"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.Job">
            <summary>
            Возвращает параметр "Должность"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.Title">
            <summary>
            Возвращает параметр "Приветствие"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.FullName">
            <summary>
            Возвращает параметр "ФИО"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.Department">
            <summary>
            Возвращает параметр "Отдел"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.Sex">
            <summary>
            Возвращает параметр "Пол"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.Birthday">
            <summary>
            Возвращает параметр "Дата рождения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.Family">
            <summary>
            Возвращает параметр "Семейное положение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.SpouseName">
            <summary>
            Возвращает параметр "Имя супруги (супруга)"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.Description">
            <summary>
            Возвращает параметр "Описание"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.WorkPhone1">
            <summary>
            Возвращает параметр "Рабочий телефон 1"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.WorkPhone2">
            <summary>
            Возвращает параметр "Рабочий телефон 2"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.MobilePhone">
            <summary>
            Возвращает параметр "Мобильный телефон"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.HomePhone">
            <summary>
            Возвращает параметр "Домашний телефон"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.Fax">
            <summary>
            Возвращает параметр "Факс"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.Email">
            <summary>
            Возвращает параметр "Адрес электронной почты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.Web">
            <summary>
            Возвращает параметр "Веб-сайт"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.Phone">
            <summary>
            Возвращает параметр "Другой телефон"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.Addressee">
            <summary>
            Возвращает параметр "Адресат"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.AddresseePhone">
            <summary>
            Возвращает параметр "Телефон адресата"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.Address">
            <summary>
            Возвращает параметр "Адрес"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.MailIndex">
            <summary>
            Возвращает параметр "Почтовый индекс"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.FullAddress">
            <summary>
            Возвращает параметр "Полный адрес"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.OwnerID">
            <summary>
            Возвращает параметр "ID Пользователя"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.ContactCity">
            <summary>
            Возвращает или задаёт связанный объект справочника "Населённые пункты" по связи "Город"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.ContactCustomerAgreements">
            <summary>
            Возвращает связанные объекты справочника "Договоры" по связи "Договоры (Заказчик)"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.ContactExecutorAgreements">
            <summary>
            Возвращает связанные объекты справочника "Договоры" по связи "Договоры (Исполнитель)"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.ActionContact">
            <summary>
            Возвращает связанные объекты справочника "Действия" по связи "Действия"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactReferenceObject.CompanyContacts">
            <summary>
            Возвращает или задаёт связанный объект справочника "Организации" по связи "Организация"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.Contacts.ContactReferenceObject.AddContactCustomerAgreements(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект справочника "Договоры" по связи "Договоры (Заказчик)"
            </summary>
            <param name="newLinkedObject">
            Подключаемый объект
            </param>
            <returns>
            Подключённый объект
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.Contacts.ContactReferenceObject.RemoveContactCustomerAgreements(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Отключает объект справочника "Договоры" по связи "Договоры (Заказчик)"
            </summary>
            <param name="linkedObject">
            Связанный объект
            </param>
            <returns>
            true, если объект был отключен
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.Contacts.ContactReferenceObject.AddContactExecutorAgreements(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект справочника "Договоры" по связи "Договоры (Исполнитель)"
            </summary>
            <param name="newLinkedObject">
            Подключаемый объект
            </param>
            <returns>
            Подключённый объект
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.Contacts.ContactReferenceObject.RemoveContactExecutorAgreements(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Отключает объект справочника "Договоры" по связи "Договоры (Исполнитель)"
            </summary>
            <param name="linkedObject">
            Связанный объект
            </param>
            <returns>
            true, если объект был отключен
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.Contacts.ContactReferenceObject.AddActionContact(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект справочника "Действия" по связи "Действия"
            </summary>
            <param name="newLinkedObject">
            Подключаемый объект
            </param>
            <returns>
            Подключённый объект
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.Contacts.ContactReferenceObject.RemoveActionContact(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Отключает объект справочника "Действия" по связи "Действия"
            </summary>
            <param name="linkedObject">
            Связанный объект
            </param>
            <returns>
            true, если объект был отключен
            </returns>
        </member>
        <member name="T:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys">
            <summary>
            Уникальные идентификаторы (GUID) параметров справочника "Контакты"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.LastName">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Фамилия"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.Name">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Имя"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.MiddleName">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Отчество"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.Job">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Должность"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.Title">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Приветствие"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.FullName">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "ФИО"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.Department">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Отдел"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.Sex">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Пол"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.Birthday">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Дата рождения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.Family">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Семейное положение"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.SpouseName">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Имя супруги (супруга)"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.Description">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Описание"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.WorkPhone1">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Рабочий телефон 1"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.WorkPhone2">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Рабочий телефон 2"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.MobilePhone">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Мобильный телефон"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.HomePhone">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Домашний телефон"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.Fax">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Факс"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.Email">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Адрес электронной почты"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.Web">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Веб-сайт"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.Phone">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Другой телефон"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.Addressee">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Адресат"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.AddresseePhone">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Телефон адресата"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.Address">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Адрес"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.MailIndex">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Почтовый индекс"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.FullAddress">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Полный адрес"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.FieldKeys.OwnerID">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "ID Пользователя"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.Contacts.ContactReferenceObject.RelationKeys">
            <summary>
            Уникальные идентификаторы (GUID) связей и списков объектов справочника "Контакты"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.RelationKeys.ContactCity">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Город"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.RelationKeys.ContactCustomerAgreements">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Договоры (Заказчик)"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.RelationKeys.ContactExecutorAgreements">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Договоры (Исполнитель)"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.RelationKeys.ActionContact">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Действия"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactReferenceObject.RelationKeys.CompanyContacts">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Организация"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.Contacts.ContactsReference">
            <summary>
            Представляет описание справочника "Контакты"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactsReference.ReferenceId">
            <summary>
            Представляет уникальный идентификатор (GUID) справочника "Контакты"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.Contacts.ContactsReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Инициализирует новый экземпляр ContactsReference для работы с объектами справочника "Контакты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactsReference.Classes">
            <summary>
            Возвращает типы объектов справочника "Контакты"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.Contacts.ContactsTypes">
            <summary>
            Представляет типы объектов справочника "Контакты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactsTypes.Contact">
            <summary>
            Возвращает описание типа объектов "Контакт"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactsTypes.PrivateContact">
            <summary>
            Возвращает описание типа объектов "Личный контакт"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.Contacts.ContactsTypes.Keys">
            <summary>
            Уникальные идентификаторы (GUID) типов объектов справочника "Контакты"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactsTypes.Keys.Contact">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Контакт"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.Contacts.ContactsTypes.Keys.PrivateContact">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Личный контакт"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.Contacts.ContactType">
            <summary>
            Представляет описание типа объекта справочника "Контакты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactType.Classes">
            <summary>
            Возвращает типы объектов справочника "Контакты"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactType.IsContact">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Контакт" или порождён от него
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.Contacts.ContactType.IsPrivateContact">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Личный контакт" или порождён от него
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.Contacts.PrivateContactReferenceObject">
            <summary>
            Представляет объект "Личный контакт" справочника "Контакты" или порождённый от него
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReference">
            <summary>
            Представляет описание списка объектов "Физические свойства"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReference.Classes">
            <summary>
            Возвращает типы объектов списка объектов "Физические свойства"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject">
            <summary>
            Представляет объект списка объектов "Физические свойства"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.Class">
            <summary>
            Возвращет описание типа объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.Density">
            <summary>
            Возвращает параметр "Плотность"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.HeatConductivity">
            <summary>
            Возвращает параметр "Удельная теплопроводность"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.HeatCapacity">
            <summary>
            Возвращает параметр "Удельная теплоёмкость"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.HeatExpansionLinear">
            <summary>
            Возвращает параметр "Коэффициент линейного теплового расширения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.HeatExpansionVolume">
            <summary>
            Возвращает параметр "Коэффициент объёмного теплового расширения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.ElectroConductivity">
            <summary>
            Возвращает параметр "Удельная электропроводность"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.KickViscosity">
            <summary>
            Возвращает параметр "Ударная вязкость"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.HB">
            <summary>
            Возвращает параметр "Твёрдость по Бринеллю"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.HR">
            <summary>
            Возвращает параметр "Твёрдость по Роквеллу"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.HV">
            <summary>
            Возвращает параметр "Твёрдость по Виккерсу"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.SpinSoundness">
            <summary>
            Возвращает параметр "Прочность при кручении"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.BreakSoundness">
            <summary>
            Возвращает параметр "Прочность на разрыв"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.DielectricSoundness">
            <summary>
            Возвращает параметр "Прочность диэлектрическая"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.Condition">
            <summary>
            Возвращает параметр "Тип сортамента"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.ThermalTreatment">
            <summary>
            Возвращает параметр "Термообработка"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.Temperature">
            <summary>
            Возвращает параметр "Температура"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.MeltingTemperature">
            <summary>
            Возвращает параметр "Температура плавления"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.YieldStrength">
            <summary>
            Возвращает параметр "Предел текучести"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.CompressionStrength">
            <summary>
            Возвращает параметр "Прочность на сжатие"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.ElasticModulus">
            <summary>
            Возвращает параметр "Модуль упругости"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.PoissonRatio">
            <summary>
            Возвращает параметр "Коэффициент Пуассона"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys">
            <summary>
            Уникальные идентификаторы (GUID) параметров списка объектов "Физические свойства"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.Density">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Плотность"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.HeatConductivity">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Удельная теплопроводность"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.HeatCapacity">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Удельная теплоёмкость"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.HeatExpansionLinear">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Коэффициент линейного теплового расширения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.HeatExpansionVolume">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Коэффициент объёмного теплового расширения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.ElectroConductivity">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Удельная электропроводность"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.KickViscosity">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Ударная вязкость"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.HB">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Твёрдость по Бринеллю"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.HR">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Твёрдость по Роквеллу"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.HV">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Твёрдость по Виккерсу"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.SpinSoundness">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Прочность при кручении"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.BreakSoundness">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Прочность на разрыв"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.DielectricSoundness">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Прочность диэлектрическая"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.Condition">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Тип сортамента"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.ThermalTreatment">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Термообработка"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.Temperature">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Температура"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.MeltingTemperature">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Температура плавления"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.YieldStrength">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Предел текучести"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.CompressionStrength">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Прочность на сжатие"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.ElasticModulus">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Модуль упругости"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesReferenceObject.FieldKeys.PoissonRatio">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Коэффициент Пуассона"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesType">
            <summary>
            Представляет описание типа объекта списка объектов "Физические свойства"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesType.Classes">
            <summary>
            Возвращает типы объектов списка объектов "Физические свойства"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesType.IsPhysicalProperties">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Физические свойства" или порождён от него
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesTypes">
            <summary>
            Представляет типы объектов списка объектов "Физические свойства"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesTypes.PhysicalProperties">
            <summary>
            Возвращает описание типа объектов "Физические свойства"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesTypes.Keys">
            <summary>
            Уникальные идентификаторы (GUID) типов объектов списка объектов "Физические свойства"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMarkPhysicalProperties.MaterialMarkPhysicalPropertiesTypes.Keys.PhysicalProperties">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Физические свойства"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReference">
            <summary>
            Представляет описание справочника "Визуальные свойства материалов"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Инициализирует новый экземпляр MaterialMarkVisualPropertiesReference для работы с объектами справочника "Визуальные свойства материалов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReference.Classes">
            <summary>
            Возвращает типы объектов справочника "Визуальные свойства материалов"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject">
            <summary>
            Представляет объект справочника "Визуальные свойства материалов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.Class">
            <summary>
            Возвращет описание типа объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.AmbientColor">
            <summary>
            Возвращает параметр "Окружающий цвет"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.DiffuseColor">
            <summary>
            Возвращает параметр "Основной цвет"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.SpecularColor">
            <summary>
            Возвращает параметр "Отражающий цвет"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.EmissiveColor">
            <summary>
            Возвращает параметр "Свечение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.Shininess">
            <summary>
            Возвращает параметр "Глянец"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.Reflection">
            <summary>
            Возвращает параметр "Отражение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.Transparency">
            <summary>
            Возвращает параметр "Прозрачность"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.MaterialTexture">
            <summary>
            Возвращает или задаёт связанный объект справочника "Файлы" по связи "Файл текстуры"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.MaterialBumpTexture">
            <summary>
            Возвращает или задаёт связанный объект справочника "Файлы" по связи "Файл текстуры неровностей"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.FieldKeys">
            <summary>
            Уникальные идентификаторы (GUID) параметров справочника "Визуальные свойства материалов"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.FieldKeys.Name">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.FieldKeys.AmbientColor">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Окружающий цвет"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.FieldKeys.DiffuseColor">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Основной цвет"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.FieldKeys.SpecularColor">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Отражающий цвет"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.FieldKeys.EmissiveColor">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Свечение"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.FieldKeys.Shininess">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Глянец"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.FieldKeys.Reflection">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Отражение"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.FieldKeys.Transparency">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Прозрачность"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.FieldKeys.BumpType">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Тип текстуры неровностей"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.RelationKeys">
            <summary>
            Уникальные идентификаторы (GUID) связей и списков объектов справочника "Визуальные свойства материалов"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.RelationKeys.MaterialTexture">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Файл текстуры"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesReferenceObject.RelationKeys.MaterialBumpTexture">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Файл текстуры неровностей"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesType">
            <summary>
            Представляет описание типа объекта справочника "Визуальные свойства материалов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesType.Classes">
            <summary>
            Возвращает типы объектов справочника "Визуальные свойства материалов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesType.IsMaterialMarkVisualProperties">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Визуальные свойства материалов" или порождён от него
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesTypes">
            <summary>
            Представляет типы объектов справочника "Визуальные свойства материалов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesTypes.MaterialMarkVisualProperties">
            <summary>
            Возвращает описание типа объектов "Визуальные свойства материалов"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesTypes.Keys">
            <summary>
            Уникальные идентификаторы (GUID) типов объектов справочника "Визуальные свойства материалов"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialsVisualProperties.MaterialsVisualPropertiesTypes.Keys.MaterialMarkVisualProperties">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Визуальные свойства материалов"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReference">
            <summary>
            Представляет описание справочника "Журнал выполнения макросов"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Инициализирует новый экземпляр MacroRunHistoryReference для работы с объектами справочника "Журнал выполнения макросов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReference.Classes">
            <summary>
            Возвращает типы объектов справочника "Журнал выполнения макросов"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject">
            <summary>
            Представляет объект справочника "Журнал выполнения макросов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject.Class">
            <summary>
            Возвращет описание типа объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject.StartTime">
            <summary>
            Возвращает параметр "Время запуска"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject.EndTime">
            <summary>
            Возвращает параметр "Время завершения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject.Duration">
            <summary>
            Возвращает параметр "Длительность"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject.User">
            <summary>
            Возвращает параметр "Пользователь"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject.Host">
            <summary>
            Возвращает параметр "Рабочее место"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject.ErrorText">
            <summary>
            Возвращает параметр "Текст ошибки"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject.EntryPoint">
            <summary>
            Возвращает параметр "Метод"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject.Macro">
            <summary>
            Возвращает или задаёт связанный объект справочника "Макросы" по связи "Макрос"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject.FieldKeys">
            <summary>
            Уникальные идентификаторы (GUID) параметров справочника "Журнал выполнения макросов"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject.FieldKeys.StartTime">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Время запуска"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject.FieldKeys.EndTime">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Время завершения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject.FieldKeys.Duration">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Длительность"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject.FieldKeys.User">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Пользователь"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject.FieldKeys.Host">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Рабочее место"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject.FieldKeys.ErrorText">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Текст ошибки"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject.FieldKeys.EntryPoint">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Метод"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject.RelationKeys">
            <summary>
            Уникальные идентификаторы (GUID) связей и списков объектов справочника "Журнал выполнения макросов"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryReferenceObject.RelationKeys.MacroRunHistoryToMacroLnk">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Макрос"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryType">
            <summary>
            Представляет описание типа объекта справочника "Журнал выполнения макросов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryType.Classes">
            <summary>
            Возвращает типы объектов справочника "Журнал выполнения макросов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryType.IsRecord">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Запись" или порождён от него
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryTypes">
            <summary>
            Представляет типы объектов справочника "Журнал выполнения макросов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryTypes.Record">
            <summary>
            Возвращает описание типа объектов "Запись"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryTypes.Keys">
            <summary>
            Уникальные идентификаторы (GUID) типов объектов справочника "Журнал выполнения макросов"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MacroRunHistory.MacroRunHistoryTypes.Keys.Record">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Запись"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MessageTemplates.MessageTemplate">
            <summary>
            Представляет объект справочника "Шаблоны сообщений"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MessageTemplates.MessageTemplate.Class">
            <summary>
            Возвращет описание типа объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MessageTemplates.MessageTemplate.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MessageTemplates.MessageTemplate.Header">
            <summary>
            Возвращает параметр "Заголовок"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MessageTemplates.MessageTemplate.Body">
            <summary>
            Возвращает параметр "Текст"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MessageTemplates.MessageTemplate.FieldKeys">
            <summary>
            Уникальные идентификаторы (GUID) параметров справочника "Шаблоны сообщений"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MessageTemplates.MessageTemplate.FieldKeys.Name">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MessageTemplates.MessageTemplate.FieldKeys.Header">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Заголовок"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MessageTemplates.MessageTemplate.FieldKeys.Body">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Текст"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MessageTemplates.MessageTemplateReference">
            <summary>
            Представляет описание справочника "Шаблоны сообщений"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MessageTemplates.MessageTemplateReference.ReferenceId">
            <summary>
            Представляет уникальный идентификатор (GUID) справочника "Шаблоны сообщений"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.MessageTemplates.MessageTemplateReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Инициализирует новый экземпляр MessageTemplateReference для работы с объектами справочника "Шаблоны сообщений"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MessageTemplates.MessageTemplateReference.Classes">
            <summary>
            Возвращает типы объектов справочника "Шаблоны сообщений"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MessageTemplates.MessageTemplateType">
            <summary>
            Представляет описание типа объекта справочника "Шаблоны сообщений"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MessageTemplates.MessageTemplateType.Classes">
            <summary>
            Возвращает типы объектов справочника "Шаблоны сообщений"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MessageTemplates.MessageTemplateType.IsMessageTemplate">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Шаблон" или порождён от него
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MessageTemplates.MessageTemplateTypes">
            <summary>
            Представляет типы объектов справочника "Шаблоны сообщений"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MessageTemplates.MessageTemplateTypes.MessageTemplate">
            <summary>
            Возвращает описание типа объектов "Шаблон"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MessageTemplates.MessageTemplateTypes.Keys">
            <summary>
            Уникальные идентификаторы (GUID) типов объектов справочника "Шаблоны сообщений"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MessageTemplates.MessageTemplateTypes.Keys.MessageTemplate">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Шаблон"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ProductStructure.ProductStructureReference">
            <summary>
            Представляет описание справочника "Составы изделий"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.ProductStructure.ProductStructureReference.InsertProductStructure(TFlex.DOCs.References.ProductStructure.ProductStructureReferenceObject,TFlex.DOCs.Model.References.Nomenclature.NomenclatureObject,TFlex.DOCs.References.ProductStructure.ProductStructureReferenceObject)">
            <summary>
            Вставка структуры изделий в другую структуру
            </summary>
            <param name="parentStructure">Структура изделия, в контексте которой будет произведена вставка структуры</param>
            <param name="parentObject">Родительский объект для вставки структуры</param>
            <param name="structure">Структура изделия</param>
        </member>
        <member name="M:TFlex.DOCs.References.ProductStructure.ProductStructureReference.#ctor">
            <summary>
            Инициализирует новый экземпляр ProductStructureReference для работы с объектами справочника "Составы изделий"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.ProductStructure.ProductStructureReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Инициализирует новый экземпляр ProductStructureReference для работы с объектами справочника "Составы изделий"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProductStructure.ProductStructureReference.Classes">
            <summary>
            Возвращает типы объектов справочника "Составы изделий"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ProductStructure.ProductStructureReferenceObject">
            <summary>
            Представляет объект справочника "Составы изделий"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProductStructure.ProductStructureReferenceObject.Class">
            <summary>
            Возвращет описание типа объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProductStructure.ProductStructureReferenceObject.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProductStructure.ProductStructureReferenceObject.Processes">
            <summary>
            Возвращает связанные объекты справочника "Технологические процессы" по связи "ТП для технологических составов изделий"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProductStructure.ProductStructureReferenceObject.NomenclatureObject">
            <summary>
            Возвращает или задаёт связанный объект справочника "Номенклатура и изделия" по связи "Изделия для состава"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.ProductStructure.ProductStructureReferenceObject.AddTP(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект справочника "Технологические процессы" по связи "ТП для технологических составов изделий"
            </summary>
            <param name="newLinkedObject">
            Подключаемый объект
            </param>
            <returns>
            Подключённый объект
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.ProductStructure.ProductStructureReferenceObject.RemoveTP(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Отключает объект справочника "Технологические процессы" по связи "ТП для технологических составов изделий"
            </summary>
            <param name="linkedObject">
            Связанный объект
            </param>
            <returns>
            true, если объект был отключен
            </returns>
        </member>
        <member name="T:TFlex.DOCs.References.ProductStructure.ProductStructureReferenceObject.FieldKeys">
            <summary>
            Уникальные идентификаторы (GUID) параметров справочника "Составы изделий"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ProductStructure.ProductStructureReferenceObject.FieldKeys.Name">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Наименование"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ProductStructure.ProductStructureReferenceObject.RelationKeys">
            <summary>
            Уникальные идентификаторы (GUID) связей и списков объектов справочника "Составы изделий"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ProductStructure.ProductStructureReferenceObject.RelationKeys.PSToTPLink">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "ТП для технологических составов изделий"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ProductStructure.ProductStructureReferenceObject.RelationKeys.PSToNomenclatureLink">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Изделия для состава"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ProductStructure.ProductStructureType">
            <summary>
            Представляет описание типа объекта справочника "Составы изделий"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProductStructure.ProductStructureType.Classes">
            <summary>
            Возвращает типы объектов справочника "Составы изделий"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProductStructure.ProductStructureType.IsProductStructureReferenceObject">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Состав изделий" или порождён от него
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProductStructure.ProductStructureType.IsTechnologicalStructureReferenceObject">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Технологическая структура" или порожден от него
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ProductStructure.ProductStructureTypes">
            <summary>
            Представляет типы объектов справочника "Составы изделий"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProductStructure.ProductStructureTypes.ProductStructure">
            <summary>
            Возвращает описание типа объектов "Состав изделий"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ProductStructure.ProductStructureTypes.Keys">
            <summary>
            Уникальные идентификаторы (GUID) типов объектов справочника "Составы изделий"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ProductStructure.ProductStructureTypes.Keys.ProductStructureReferenceObject">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Состав изделий"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ProductStructure.ProductStructureTypes.Keys.TechnologicalStructureReferenceObject">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Технологическая структура"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ParametersAssoc.ParametersAssocReference">
            <summary>
            Представляет описание списка объектов "Ассоциация параметров"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ParametersAssoc.ParametersAssocReference.Classes">
            <summary>
            Возвращает типы объектов списка объектов "Ассоциация параметров"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ParametersAssoc.ParametersAssocReferenceObject">
            <summary>
            Представляет объект списка объектов "Ассоциация параметров"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ParametersAssoc.ParametersAssocReferenceObject.Class">
            <summary>
            Возвращет описание типа объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ParametersAssoc.ParametersAssocReferenceObject.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ParametersAssoc.ParametersAssocReferenceObject.ApplicationParameter">
            <summary>
            Возвращает параметр "Параметр документа приложения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ParametersAssoc.ParametersAssocReferenceObject.ApplicationParameterType">
            <summary>
            Возвращает параметр "Тип параметра приложения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ParametersAssoc.ParametersAssocReferenceObject.DOCsParameterDescription">
            <summary>
            Возвращает параметр "Параметр DOCs"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ParametersAssoc.ParametersAssocReferenceObject.DOCsParameterType">
            <summary>
            Возвращает параметр "Тип параметра DOCs"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ParametersAssoc.ParametersAssocReferenceObject.LinkDirection">
            <summary>
            Возвращает параметр "Направление связи"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ParametersAssoc.ParametersAssocReferenceObject.FieldKeys">
            <summary>
            Уникальные идентификаторы (GUID) параметров списка объектов "Ассоциация параметров"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ParametersAssoc.ParametersAssocReferenceObject.FieldKeys.Name">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ParametersAssoc.ParametersAssocReferenceObject.FieldKeys.ApplicationParameter">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Параметр документа приложения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ParametersAssoc.ParametersAssocReferenceObject.FieldKeys.ApplicationParameterType">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Тип параметра приложения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ParametersAssoc.ParametersAssocReferenceObject.FieldKeys.DOCsParameterDescription">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Параметр DOCs"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ParametersAssoc.ParametersAssocReferenceObject.FieldKeys.DOCsParameterType">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Тип параметра DOCs"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ParametersAssoc.ParametersAssocReferenceObject.FieldKeys.LinkDirection">
            <summary>
            Направление связи
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ParametersAssoc.ParametersAssocType">
            <summary>
            Представляет описание типа объекта списка объектов "Ассоциация параметров"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ParametersAssoc.ParametersAssocType.Classes">
            <summary>
            Возвращает типы объектов списка объектов "Ассоциация параметров"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ParametersAssoc.ParametersAssocType.IsParametersAssociation">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Ассоциация параметров" или порождён от него
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ParametersAssoc.ParametersAssocTypes">
            <summary>
            Представляет типы объектов списка объектов "Ассоциация параметров"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ParametersAssoc.ParametersAssocTypes.ParametersAssociation">
            <summary>
            Возвращает описание типа объектов "Ассоциация параметров"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ParametersAssoc.ParametersAssocTypes.Keys">
            <summary>
            Уникальные идентификаторы (GUID) типов объектов списка объектов "Ассоциация параметров"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ParametersAssoc.ParametersAssocTypes.Keys.ParametersAssociation">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Ассоциация параметров"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject">
            <summary>
            Представляет объект "Марка материала" справочника "Марки материалов" или порожденный от него
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.Mark">
            <summary>
            Возвращает параметр "Марка"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.NTDType">
            <summary>
            Возвращает параметр "Тип НТД"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.NTDCode">
            <summary>
            Возвращает параметр "Обозначение НТД"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.Code">
            <summary>
            Возвращает параметр "Обозначение"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.Description">
            <summary>
            Возвращает параметр "Назначение / характеристика"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.IsCoating">
            <summary>
            Возвращает параметр "Покрытие"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.OKPCode">
            <summary>
            Возвращает параметр "Код ОКП"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.Density">
            <summary>
            Возвращает параметр "Плотность"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.HeatConductivity">
            <summary>
            Возвращает параметр "Удельная теплопроводность"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.HeatCapacity">
            <summary>
            Возвращает параметр "Удельная теплоёмкость"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.HeatExpansionLinear">
            <summary>
            Возвращает параметр "Коэффициент линейного теплового расширения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.HeatExpansionVolume">
            <summary>
            Возвращает параметр "Коэффициент объёмного теплового расширения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.ElectroConductivity">
            <summary>
            Возвращает параметр "Удельная электропроводность"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.KickViscosity">
            <summary>
            Возвращает параметр "Ударная вязкость"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.HB">
            <summary>
            Возвращает параметр "Твёрдость по Бринеллю"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.HR">
            <summary>
            Возвращает параметр "Твёрдость по Роквеллу"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.HV">
            <summary>
            Возвращает параметр "Твёрдость по Виккерсу"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.SpinSoundness">
            <summary>
            Возвращает параметр "Прочность при кручении"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.BreakSoundness">
            <summary>
            Возвращает параметр "Прочность на разрыв"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.AbstractMarkReferenceObject.DielectricSoundness">
            <summary>
            Возвращает параметр "Прочность диэлектрическая"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialMark.MaterialMarkReference">
            <summary>
            Представляет описание справочника "Марки материалов"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.MaterialMark.MaterialMarkReference.#ctor">
            <summary>
            Инициализирует новый экземпляр MaterialMarkReference для работы с объектами справочника "Марки материалов"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.MaterialMark.MaterialMarkReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Инициализирует новый экземпляр MaterialMarkReference для работы с объектами справочника "Марки материалов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkReference.Classes">
            <summary>
            Возвращает типы объектов справочника "Марки материалов"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject">
            <summary>
            Представляет объект справочника "Марки материалов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.Class">
            <summary>
            Возвращет описание типа объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.PhysicalProperties">
            <summary>
            Возвращает объекты списка "Физические свойства"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.MaterialInterChangeLink">
            <summary>
            Возвращает связанные объекты справочника "Марки материалов" по связи "Взаимозаменяемость материалов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.MaterialIncompatibilityLink">
            <summary>
            Возвращает связанные объекты справочника "Марки материалов" по связи "Несовместимость материалов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.MaterialWeldabilityLink">
            <summary>
            Возвращает связанные объекты справочника "Марки материалов" по связи "Свариваемость материалов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.MaterialChemicalStructure">
            <summary>
            Возвращает объекты списка "Химический состав"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.MaterialMarkLinksAssortment">
            <summary>
            Возвращает связанные объекты справочника "Cортамент материалов" по связи "Изготаливаемый из марки сортамент"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.MaterialLinksMark">
            <summary>
            Возвращает связанные объекты справочника "Материалы" по связи "Марка материала"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.PartMaterial">
            <summary>
            Возвращает связанные объекты справочника "Документы" по связи "Детали из марки материала"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.CreatePhysicalProperties(System.Guid)">
            <summary>
            Создаёт объект указанного типа в списке объектов  "Физические свойства"
            </summary>
            <param name="listObjectClass">
            Уникальный идентификатор (GUID) типа создаваемого объекта
            </param>
            <returns>
            Новый объект списка "Физические свойства"
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.CreatePhysicalProperties(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создаёт объект указанного типа в списке объектов  "Физические свойства"
            </summary>
            <param name="listObjectClass">
            Описание типа создаваемого объекта
            </param>
            <returns>
            Новый объект списка "Физические свойства"
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.AddMaterialInterChangeLink(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект справочника "Марки материалов" по связи "Взаимозаменяемость материалов"
            </summary>
            <param name="newLinkedObject">
            Подключаемый объект
            </param>
            <returns>
            Подключённый объект
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.RemoveMaterialInterChangeLink(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Отключает объект справочника "Марки материалов" по связи "Взаимозаменяемость материалов"
            </summary>
            <param name="linkedObject">
            Связанный объект
            </param>
            <returns>
            true, если объект был отключен
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.AddMaterialIncompatibilityLink(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект справочника "Марки материалов" по связи "Несовместимость материалов"
            </summary>
            <param name="newLinkedObject">
            Подключаемый объект
            </param>
            <returns>
            Подключённый объект
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.RemoveMaterialIncompatibilityLink(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Отключает объект справочника "Марки материалов" по связи "Несовместимость материалов"
            </summary>
            <param name="linkedObject">
            Связанный объект
            </param>
            <returns>
            true, если объект был отключен
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.AddMaterialWeldabilityLink(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект справочника "Марки материалов" по связи "Свариваемость материалов"
            </summary>
            <param name="newLinkedObject">
            Подключаемый объект
            </param>
            <returns>
            Подключённый объект
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.RemoveMaterialWeldabilityLink(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Отключает объект справочника "Марки материалов" по связи "Свариваемость материалов"
            </summary>
            <param name="linkedObject">
            Связанный объект
            </param>
            <returns>
            true, если объект был отключен
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.CreateMaterialChemicalStructure(System.Guid)">
            <summary>
            Создаёт объект указанного типа в списке объектов  "Химический состав"
            </summary>
            <param name="listObjectClass">
            Уникальный идентификатор (GUID) типа создаваемого объекта
            </param>
            <returns>
            Новый объект списка "Химический состав"
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.CreateMaterialChemicalStructure(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создаёт объект указанного типа в списке объектов  "Химический состав"
            </summary>
            <param name="listObjectClass">
            Описание типа создаваемого объекта
            </param>
            <returns>
            Новый объект списка "Химический состав"
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.AddMaterialMarkLinksAssortment(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект справочника "Cортамент материалов" по связи "Изготаливаемый из марки сортамент"
            </summary>
            <param name="newLinkedObject">
            Подключаемый объект
            </param>
            <returns>
            Подключённый объект
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.RemoveMaterialMarkLinksAssortment(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Отключает объект справочника "Cортамент материалов" по связи "Изготаливаемый из марки сортамент"
            </summary>
            <param name="linkedObject">
            Связанный объект
            </param>
            <returns>
            true, если объект был отключен
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.AddMaterialLinksMark(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект справочника "Материалы" по связи "Марка материала"
            </summary>
            <param name="newLinkedObject">
            Подключаемый объект
            </param>
            <returns>
            Подключённый объект
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.RemoveMaterialLinksMark(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Отключает объект справочника "Материалы" по связи "Марка материала"
            </summary>
            <param name="linkedObject">
            Связанный объект
            </param>
            <returns>
            true, если объект был отключен
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.AddPartMaterial(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект справочника "Документы" по связи "Детали из марки материала"
            </summary>
            <param name="newLinkedObject">
            Подключаемый объект
            </param>
            <returns>
            Подключённый объект
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.RemovePartMaterial(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Отключает объект справочника "Документы" по связи "Детали из марки материала"
            </summary>
            <param name="linkedObject">
            Связанный объект
            </param>
            <returns>
            true, если объект был отключен
            </returns>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys">
            <summary>
            Уникальные идентификаторы (GUID) параметров справочника "Марки материалов"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.Name">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.Mark">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Марка"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.NTDType">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Тип НТД"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.NTDCode">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Обозначение НТД"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.Code">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Обозначение"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.Description">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Назначение / характеристика"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.IsCoating">
            <summary>
            Представляет уникальный идентификтор (GUID) параметра "Покрытие"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.OKPCode">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Код ОКП"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.Density">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Плотность"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.HeatConductivity">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Удельная теплопроводность"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.HeatCapacity">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Удельная теплоёмкость"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.HeatExpansionLinear">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Коэффициент линейного теплового расширения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.HeatExpansionVolume">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Коэффициент объёмного теплового расширения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.ElectroConductivity">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Удельная электропроводность"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.KickViscosity">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Ударная вязкость"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.HB">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Твёрдость по Бринеллю"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.HR">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Твёрдость по Роквеллу"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.HV">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Твёрдость по Виккерсу"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.SpinSoundness">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Прочность при кручении"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.BreakSoundness">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Прочность на разрыв"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.FieldKeys.DielectricSoundness">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Прочность диэлектрическая"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.RelationKeys">
            <summary>
            Уникальные идентификаторы (GUID) связей и списков объектов справочника "Марки материалов"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.RelationKeys.PhysicalProperties">
            <summary>
            Представляет уникальный идентификатор (GUID) списка объектов "Физические свойства"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.RelationKeys.VisualProperties">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Визуальные свойства"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.RelationKeys.MaterialInterChangeLink">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Взаимозаменяемость материалов"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.RelationKeys.MaterialIncompatibilityLink">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Несовместимость материалов"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.RelationKeys.MaterialWeldabilityLink">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Свариваемость материалов"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.RelationKeys.MaterialChemicalStructure">
            <summary>
            Представляет уникальный идентификатор (GUID) списка объектов "Химический состав"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.RelationKeys.MaterialMarkLinksAssortment">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Изготаливаемый из марки сортамент"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.RelationKeys.MaterialLinksMark">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Марка материала"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkReferenceObject.RelationKeys.PartMaterial">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Детали из марки материала"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialMark.MaterialMarkType">
            <summary>
            Представляет описание типа объекта справочника "Марки материалов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkType.Classes">
            <summary>
            Возвращает типы объектов справочника "Марки материалов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkType.IsAbstractMaterialMark">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Марка материала" или порождён от него
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkType.IsFolder">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Папка" или порождён от него
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialMark.MaterialMarkTypes">
            <summary>
            Представляет типы объектов справочника "Марки материалов"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkTypes.MaterialMark">
            <summary>
            Возвращает описание типа объектов "Марка материала"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkTypes.Folder">
            <summary>
            Возвращает описание типа объектов "Папка"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkTypes.Metal">
            <summary>
            Возвращает описание типа объектов "Металл"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkTypes.Steel">
            <summary>
            Возвращает описание типа объектов "Сталь"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkTypes.Alloys">
            <summary>
            Возвращает описание типа объектов "Цветные металлы и сплавы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkTypes.CastIron">
            <summary>
            Возвращает описание типа объектов "Чугун"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.MaterialMark.MaterialMarkTypes.Polymer">
            <summary>
            Возвращает описание типа объектов "Полимер"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.MaterialMark.MaterialMarkTypes.Keys">
            <summary>
            Уникальные идентификаторы (GUID) типов объектов справочника "Марки материалов"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkTypes.Keys.MaterialMark">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Марка материала"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkTypes.Keys.Folder">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Папка"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkTypes.Keys.Metal">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Металл"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkTypes.Keys.Steel">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Сталь"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkTypes.Keys.Alloys">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Цветные металлы и сплавы"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkTypes.Keys.CastIron">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Чугун"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.MaterialMark.MaterialMarkTypes.Keys.Polymer">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Полимер"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ProjectStyles.ProjectStylesReference">
            <summary>
            Справочник "Стили отображения работ"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.ProjectStyles.ProjectStylesReference.#ctor">
            <summary>
            Инициализирует новый экземпляр справочника для работы с объектами
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.ProjectStyles.ProjectStylesReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Инициализирует новый экземпляр справочника для работы с объектами
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProjectStyles.ProjectStylesReference.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject">
            <summary>
            Объект справочника "Стили отображения работ"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.Class">
            <summary>
            Возвращет тип объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.TaskHeight">
            <summary>
            Возвращает параметр "Ширина полосы работы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.ProgressHeight">
            <summary>
            Возвращает параметр "Ширина полосы выполнения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.TaskShift">
            <summary>
            Возвращает параметр "Верхний отступ работы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.ProgressShift">
            <summary>
            Возвращает параметр "Верхний отступ полосы выполнения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.TaskColor">
            <summary>
            Возвращает параметр "Цвет полосы работы"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.ProgressColor">
            <summary>
            Возвращает параметр "Цвет полосы выполнения"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.LineSkew">
            <summary>
            Возвращает или задает значение параметра "Учитывать перенос строк"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.LeftEndStyle">
            <summary>
            Возвращает или задаёт связанный объект справочника "Изображения" по связи "Изображение начала"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.RightEndStyle">
            <summary>
            Возвращает или задаёт связанный объект справочника "Изображения" по связи "Изображение окончания"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.FieldKeys">
            <summary>
            Уникальные идентификаторы параметров справочника "Стили отображения работ"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.FieldKeys.Name">
            <summary>
            Guid параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.FieldKeys.TaskHeight">
            <summary>
            Guid параметра "Ширина полосы работы"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.FieldKeys.ProgressHeight">
            <summary>
            Guid параметра "Ширина полосы выполнения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.FieldKeys.TaskShift">
            <summary>
            Guid параметра "Верхний отступ работы"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.FieldKeys.ProgressShift">
            <summary>
            Guid параметра "Верхний отступ полосы выполнения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.FieldKeys.TaskColor">
            <summary>
            Guid параметра "Цвет полосы работы"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.FieldKeys.ProgressColor">
            <summary>
            Guid параметра "Цвет полосы выполнения"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.FieldKeys.LineSkew">
            <summary>
            Guid параметра "Учитывать перенос строк"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.RelationKeys">
            <summary>
            Уникальные идентификаторы связей и списков объектов справочника "Стили отображения работ"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.RelationKeys.LeftEndStyle">
            <summary>
            Guid связи "Изображение начала"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ProjectStyles.ProjectStylesReferenceObject.RelationKeys.RightEndStyle">
            <summary>
            Guid связи "Изображение окончания"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ProjectStyles.ProjectStylesType">
            <summary>
            Тип объектов справочника "Стили отображения работ"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProjectStyles.ProjectStylesType.Classes">
            <summary>
            Возвращает дерево типов справочника
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProjectStyles.ProjectStylesType.IsProjectStyle">
            <summary>
            Возвращает значение, указывающее, является ли текущий тип типом "Стиль работы"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ProjectStyles.ProjectStylesTypes">
            <summary>
            Дерево типов справочника "Стили отображения работ"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.ProjectStyles.ProjectStylesTypes.ProjectStyle">
            <summary>
            Возвращает тип "Стиль работы"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.ProjectStyles.ProjectStylesTypes.Keys">
            <summary>
            Уникальные идентификаторы типов объектов справочника "Стили отображения работ"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.ProjectStyles.ProjectStylesTypes.Keys.ProjectStyle">
            <summary>
            Guid типа "Стиль работы"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.DailyObject">
            <summary>
            Представляет объект "Ежедневно" справочника "Расписание рабочего времени" или порожденный от него
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.DateWorkingTime">
            <summary>
            Представляет объект "Конкретная дата" справочника "Расписание рабочего времени" или порожденный от него
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.IWorkTimeChange.IsWorkDay">
            <summary>
            Является ли указанный день рабочим
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.IWorkTimeChange.Date">
            <summary>
            Дата, на которую регистрируется изменение в календаре (дата исключения)
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.IWorkTimeChange.WorkTimeIntervals">
            <summary>
            Перечисление интервалов рабочего времени в течении указанного дня (используется только при IsWorkDay == true).
            Интервалы между собой не должны пересекаться
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.IWorkTimeChangeCollection.GetNearestChangeDay(System.DateTime)">
            <summary>
            Возвращает ближайшее изменение в календаре на дату, большую или равную переданной дате <paramref name="date"/>
            </summary>
            <param name="date">Дата, справа от которой необходимо определить изменение в календаре</param>
            <returns>Возвращает изменение в календаре. Если изменений нет, вернёт Null</returns>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.MonthelyObject">
            <summary>
            Представляет объект "Ежемесячно" справочника "Расписание рабочего времени" или порожденный от него
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.Periodical">
            <summary>
            Представляет объект "Периодически" справочника "Расписание рабочего времени" или порожденный от него
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.Periodical.Period">
            <summary>
            Возвращает параметр "Период (дней)"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.WeeklyObject">
            <summary>
            Представляет объект "Еженедельно" справочника "Расписание рабочего времени" или порожденный от него
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.WorkingInterval">
            <summary>
            Представляет объект списка объектов "Рабочее время"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkingInterval.Class">
            <summary>
            Возвращет описание типа объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkingInterval.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkingInterval.Start">
            <summary>
            Возвращает параметр "Начало"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkingInterval.End">
            <summary>
            Возвращает параметр "Конец"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkingInterval.ChangeNumber">
            <summary>
            Возвращает параметр "Номер смены"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.WorkingInterval.FieldKeys">
            <summary>
            Уникальные идентификаторы (GUID) параметров списка объектов "Рабочее время"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkingInterval.FieldKeys.Name">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkingInterval.FieldKeys.Start">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Начало"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkingInterval.FieldKeys.End">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Конец"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkingInterval.FieldKeys.ChangeNumber">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Номер смены"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.WorkingIntervalReference">
            <summary>
            Представляет описание списка объектов "Рабочее время"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkingIntervalReference.Classes">
            <summary>
            Возвращает типы объектов списка объектов "Рабочее время"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.WorkingIntervalType">
            <summary>
            Представляет описание типа объекта списка объектов "Рабочее время"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkingIntervalType.Classes">
            <summary>
            Возвращает типы объектов списка объектов "Рабочее время"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkingIntervalType.IsWorkingInterval">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Рабочее время" или порождён от него
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.WorkingIntervalTypes">
            <summary>
            Представляет типы объектов списка объектов "Рабочее время"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkingIntervalTypes.WorkingInterval">
            <summary>
            Возвращает описание типа объектов "Рабочее время"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.WorkingIntervalTypes.Keys">
            <summary>
            Уникальные идентификаторы (GUID) типов объектов списка объектов "Рабочее время"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkingIntervalTypes.Keys.WorkingInterval">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Рабочее время"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.WorkTimeManager">
            <summary>
            Менеджер рабочего времени
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.#ctor(System.Func{System.Collections.Generic.IEnumerable{TFlex.DOCs.References.WorkTime.IWorkTimeObject}},System.Action)">
            <summary>
            Создает новый экземпляр объекта
            </summary>
            <param name="workTimesReceiver">Метод для получения элементов расписания рабочего времени</param>
            <param name="refreshWorkTimes">Метод, вызываемый при обновлении менеджера рабочего времени</param>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.Refresh">
            <summary>
            Обновляет менеджер рабочего времени
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeManager.IsEmpty">
            <summary>
            Возвращает значение, указывающее, является ли менеджер пустым (не содержит элементов рабочего времени)
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.ExistWorkDaysLessThan(System.DateTime)">
            <summary>
            Возвращает значение, указывающее, есть ли рабочие дни до указанной даты
            </summary>
            <param name="date">Дата</param>
            <returns>Значение true, если существуют рабочие дни до указанной даты; в противном случае - значение false</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.GetWorkingIntervals(System.DateTime)">
            <summary>
            Возвращает интервалы рабочего времени для указанной даты
            </summary>
            <param name="date">Дата</param>
            <returns>Коллекция интервалов рабочего времени</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.GetWorkingIntervals(System.DateTime,TFlex.DOCs.References.WorkTime.IWorkTimeChangeCollection)">
            <summary>
            Возвращает интервалы рабочего времени для указанной даты с учётом изменений в календаре
            </summary>
            <param name="date">Дата</param>
            <param name="changeCollection">Изменения в календаре</param>
            <returns>Коллекция интервалов рабочего времени</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.GetRemainingTime(System.DateTime)">
            <summary>
            Возвращает время оставшееся до конца рабочего дня в указанную дату
            </summary>
            <param name="date">Дата</param>
            <returns>Время, оставшееся до конца рабочего дня</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.GetNextWorkTime(System.DateTime)">
            <summary>
            Возвращает ближайшее рабочее время, следующее за указанной датой и временем
            </summary>
            <param name="date">Дата</param>
            <returns>Ближайшее рабочее время</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.GetHolydayIntervals(TFlex.DOCs.Model.References.Projects.TimeInterval)">
            <summary>
            Возвращает интервалы выходных дней, входящие в указанный промежуток времени
            </summary>
            <param name="interval">Интервал времени, в котором требуется найти выходные</param>
            <returns>Список интервалов выходных дней</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.CalcHolydayIntervals(TFlex.DOCs.Model.References.Projects.TimeInterval)">
            <summary>
            Возвращает интервалы выходных дней, входящие в указанный промежуток времени
            </summary>
            <param name="interval">Интервал времени, в котором требуется найти выходные</param>
            <returns>Список интервалов выходных дней</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.GetUnworkingIntervals(TFlex.DOCs.Model.References.Projects.TimeInterval)">
            <summary>
            Возвращает интервалы нерабочего времени, входящие в указанный промежуток времени
            </summary>
            <param name="interval">Интервал времени, в котором требуется найти интервалы нерабочего времени</param>
            <returns>Список интервалов нерабочего времени</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.CalcUnworkingIntervals(TFlex.DOCs.Model.References.Projects.TimeInterval)">
            <summary>
            Возвращает интервалы нерабочего времени, входящие в указанный промежуток времени
            </summary>
            <param name="interval">Интервал времени, в котором требуется найти интервалы нерабочего времени</param>
            <returns>Список интервалов нерабочего времени</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.CalcUnworkingIntervals(TFlex.DOCs.Model.References.Projects.TimeInterval,TFlex.DOCs.References.WorkTime.IWorkTimeChangeCollection)">
            <summary>
            Возвращает интервалы нерабочего времени, входящие в указанный промежуток времени, с учётом изменений в календаре
            </summary>
            <param name="interval">Интервал времени, в котором требуется найти интервалы нерабочего времени</param>
            <param name="changeCollection">Изменения в календаре</param>
            <returns>Список интервалов нерабочего времени</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.CalcTaskEndTime(System.DateTime,System.TimeSpan)">
            <summary>
            Возвращает время окончания работы с указанным временем начала и длительностью, заданной в виде интервала времени <see cref="T:System.TimeSpan"/>
            </summary>
            <param name="startTime">Время начала работы</param>
            <param name="duration">Длительность работы</param>
            <returns>Время окончания работы</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.PlanTask(System.DateTime,System.TimeSpan)">
            <summary>
            Планирует работу с указанным временем начала и заданной длительностью с учетом календаря
            </summary>
            <param name="startTime">Время начала работы</param>
            <param name="duration">Длительность работы</param>
            <returns>Список интервалов рабочего времени для выполнения работы</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.CalcTaskEndTime(System.DateTime,System.Int32)">
            <summary>
            Вычисляет время окончания работы с указанным временем начала и длительностью, заданной в днях. (Рабочим считается любой день, где есть хоть один элемент расписания)
            </summary>
            <param name="startTime">Время начала работы</param>
            <param name="duration">Длительность работы (в днях)</param>
            <returns>Время окончания работы</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.CalcTaskStartTime(System.DateTime,System.Int32)">
            <summary>
            Вычисляет время начала работы с указанным временем окончания и длительностью, заданной в днях. (Рабочим считается любой день, где есть хоть один элемент расписания)
            </summary>
            <param name="startTime">Время окончания работы</param>
            <param name="duration">Длительность работы (в днях)</param>
            <returns>Время начала работы</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.CalcTaskDuration(System.DateTime,System.DateTime)">
            <summary>
            Вычисляет продолжительность работ (количество рабочего времени) от времени начала работ до времени окончания.
            </summary>
            <param name="startTime">Время начала работ</param>
            <param name="endTime">Время окончания работ</param>
            <returns>Продолжительность</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.CalcDurationInDays(System.DateTime,System.DateTime)">
            <summary>
            Вычисляет продолжительность работ (в днях)
            </summary>
            <param name="startTime">Начало работ</param>
            <param name="endTime">Окончание работ</param>
            <returns>Продолжительность (в днях)</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.GetWorkingIntervals(System.DateTime,System.DateTime)">
            <summary>
            Возвращает список интервалов рабочего времени в указанный интервал времени
            </summary>
            <param name="startTime">Дата начала</param>
            <param name="endTime">Дата окончания</param>
            <returns>Список интервалов рабочего времени</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.GetWorkingIntervals(System.DateTime,System.DateTime,TFlex.DOCs.References.WorkTime.IWorkTimeChangeCollection)">
            <summary>
            Возвращает список интервалов рабочего времени в указанный интервал времени
            </summary>
            <param name="startTime">Дата начала</param>
            <param name="endTime">Дата окончания</param>
            <returns>Список интервалов рабочего времени</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.CalcTaskEndTime(System.DateTime,System.Int32,TFlex.DOCs.References.WorkTime.IWorkTimeChangeCollection)">
            <summary>
            Вычисляет время окончания работы с указанным временем начала и длительностью, заданной в днях. (Рабочим считается любой день, где есть хоть один элемент расписания)
            </summary>
            <param name="startDate">Дата и время начала</param>
            <param name="duration">Длительность работы (в днях)</param>
            <param name="changeCollection">Коллекция разовых изменений (исключений) в календаре</param>
            <returns>Дата и время окончания</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.CalcTaskEndTime(System.DateTime,System.TimeSpan,TFlex.DOCs.References.WorkTime.IWorkTimeChangeCollection)">
            <summary>
            Возвращает время окончания работы с указанным временем начала и длительностью, заданной в виде интервала времени <see cref="T:System.TimeSpan"/>
            </summary>
            <param name="startDate">Дата и время начала</param>
            <param name="duration">Длительность работы</param>
            <param name="changeCollection">Коллекция разовых изменений (исключений) в календаре</param>
            <returns>Дата и время окончания работы</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.CalcDurationInDays(System.DateTime,System.DateTime,TFlex.DOCs.References.WorkTime.IWorkTimeChangeCollection)">
            <summary>
            Вычисляет продолжительность работы (в днях)
            </summary>
            <param name="startDate">Дата и время начала</param>
            <param name="endDate">Дата и время окончания</param>
            <param name="changeCollection">Коллекция разовых изменений (исключений) в календаре</param>
            <returns>Продолжительность (в днях)</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.CalcTaskDuration(System.DateTime,System.DateTime,TFlex.DOCs.References.WorkTime.IWorkTimeChangeCollection)">
            <summary>
            Вычисляет продолжительность работы в виде интервала времени <see cref="T:System.TimeSpan"/>
            </summary>
            <param name="startDate">Дата и время начала</param>
            <param name="endDate">Дата и время окончания</param>
            <param name="changeCollection">Коллекция разовых изменений (исключений) в календаре</param>
            <returns>Продолжительность</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.GetNextWorkDayStart(System.DateTime)">
            <summary>
            Получить время начала следующего рабочего дня
            </summary>
            <param name="date">Время</param>
            <returns>Время начала следующего рабочего дня</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.GetNextWorkDayStart(System.DateTime,TFlex.DOCs.References.WorkTime.IWorkTimeChangeCollection)">
            <summary>
            Получить время начала следующего рабочего дня с учётом изменений в календаре
            </summary>
            <param name="date">Время</param>
            <param name="changeCollection">Изменения в календаре</param>
            <returns>Время начала следующего рабочего дня</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.GetWorkDayStart(System.DateTime)">
            <summary>
            Получить время начала рабочего дня
            </summary>
            <param name="date">Время</param>
            <returns>Время начала следующего рабочего дня</returns>
            <remarks>Если на указанную дату нет рабочих интервалов, то берётся следующий день</remarks>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.GetPreviousWorkDayEnd(System.DateTime)">
            <summary>
            Получить время конца предыдущего рабочего дня
            </summary>
            <param name="date">Время</param>
            <returns>Время конца предыдущего рабочего дня</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.GetPreviousWorkDayEnd(System.DateTime,TFlex.DOCs.References.WorkTime.IWorkTimeChangeCollection)">
            <summary>
            Получить время конца предыдущего рабочего дня с учётом изменений в каледнаре
            </summary>
            <param name="date">Время</param>
            <param name="changeCollection">Изменения в календаре</param>
            <returns>Время конца предыдущего рабочего дня</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.GetPreviousWorkTimeEnd(System.DateTime)">
            <summary>
            Получить ближайшее окончание рабочего время, предыдущее указанному времени
            </summary>
            <param name="date">Время</param>
            <returns>Ближайшее окончание рабочего время</returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeManager.GetWorkDayEnd(System.DateTime)">
            <summary>
            Получить время конца рабочего дня
            </summary>
            <param name="date">Время</param>
            <returns>Время конца предыдущего рабочего дня</returns>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.WorkTimeReference">
            <summary>
            Представляет описание справочника "Расписание рабочего времени"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeReference.#ctor">
            <summary>
            Инициализирует новый экземпляр WorkTimeReference для работы с объектами справочника "Расписание рабочего времени"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeReference.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Инициализирует новый экземпляр WorkTimeReference для работы с объектами справочника "Расписание рабочего времени"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeReference.Classes">
            <summary>
            Возвращает типы объектов справочника "Расписание рабочего времени"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject">
            <summary>
            Представляет объект справочника "Расписание рабочего времени"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.Class">
            <summary>
            Возвращет описание типа объекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.Name">
            <summary>
            Возвращает параметр "Наименование"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.DayOfWeek">
            <summary>
            Возвращает параметр "День недели"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.DayOfMonth">
            <summary>
            Возвращает параметр "Число месяца"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.Month">
            <summary>
            Возвращает параметр "Месяц"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.Year">
            <summary>
            Возвращает параметр "Год"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.StartDate">
            <summary>
            Возвращает параметр "Дата начала"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.EndDate">
            <summary>
            Возвращает параметр "Дата окончания"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.WorkTimeIntervals">
            <summary>
            Возвращает объекты списка "Рабочее время"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.Users">
            <summary>
            Возвращает связанные объекты справочника "Группы и пользователи" по связи "Группы и пользователи"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.Equipment">
            <summary>
            Возвращает связанные объекты справочника "Средства технологического оснащения" по связи "Оборудование"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.CreateWorkTimeInterval(System.Guid)">
            <summary>
            Создаёт объект указанного типа в списке объектов  "Рабочее время"
            </summary>
            <param name="listObjectClass">
            Уникальный идентификатор (GUID) типа создаваемого объекта
            </param>
            <returns>
            Новый объект списка "Рабочее время"
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.CreateWorkTimeInterval(TFlex.DOCs.Model.Classes.ClassObject)">
            <summary>
            Создаёт объект указанного типа в списке объектов  "Рабочее время"
            </summary>
            <param name="listObjectClass">
            Описание типа создаваемого объекта
            </param>
            <returns>
            Новый объект списка "Рабочее время"
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.AddUser(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект справочника "Группы и пользователи" по связи "Группы и пользователи"
            </summary>
            <param name="newLinkedObject">
            Подключаемый объект
            </param>
            <returns>
            Подключённый объект
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.RemoveUser(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Отключает объект справочника "Группы и пользователи" по связи "Группы и пользователи"
            </summary>
            <param name="linkedObject">
            Связанный объект
            </param>
            <returns>
            true, если объект был отключен
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.AddEquipment(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Подключает объект справочника "Средства технологического оснащения" по связи "Оборудование"
            </summary>
            <param name="newLinkedObject">
            Подключаемый объект
            </param>
            <returns>
            Подключённый объект
            </returns>
        </member>
        <member name="M:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.RemoveEquipment(TFlex.DOCs.Model.References.ReferenceObject)">
            <summary>
            Отключает объект справочника "Средства технологического оснащения" по связи "Оборудование"
            </summary>
            <param name="linkedObject">
            Связанный объект
            </param>
            <returns>
            true, если объект был отключен
            </returns>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.FieldKeys">
            <summary>
            Уникальные идентификаторы (GUID) параметров справочника "Расписание рабочего времени"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.FieldKeys.Name">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Наименование"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.FieldKeys.DayOfWeek">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "День недели"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.FieldKeys.DayOfMonth">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Число месяца"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.FieldKeys.Month">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Месяц"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.FieldKeys.Year">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Год"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.FieldKeys.StartDate">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Дата начала"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.FieldKeys.EndDate">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Дата окончания"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.FieldKeys.Period">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Период (дней)"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.FieldKeys.Priority">
            <summary>
            Представляет уникальный идентификатор (GUID) параметра "Приоритет"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.RelationKeys">
            <summary>
            Уникальные идентификаторы (GUID) связей и списков объектов справочника "Расписание рабочего времени"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.RelationKeys.WorkTimeIntervals">
            <summary>
            Представляет уникальный идентификатор (GUID) списка объектов "Рабочее время"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.RelationKeys.Users">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Группы и пользователи"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkTimeReferenceObject.RelationKeys.Equipment">
            <summary>
            Представляет уникальный идентификатор (GUID) связи "Оборудование"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.WorkTimeType">
            <summary>
            Представляет описание типа объекта справочника "Расписание рабочего времени"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeType.Classes">
            <summary>
            Возвращает типы объектов справочника "Расписание рабочего времени"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeType.IsWorkTime">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Элемент расписания" или порождён от него
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeType.IsYearly">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Ежегодно" или порождён от него
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeType.IsDaily">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Ежедневно" или порождён от него
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeType.IsMonthely">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Ежемесячно" или порождён от него
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeType.IsWeekl">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Еженедельно" или порождён от него
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeType.IsDate">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Конкретная дата" или порождён от него
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeType.IsPeriodical">
            <summary>
            Возвращает true, если текущий экземпляр описывает тип "Периодически" или порождён от него
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.WorkTimeTypes">
            <summary>
            Представляет типы объектов справочника "Расписание рабочего времени"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeTypes.WorkTime">
            <summary>
            Возвращает описание типа объектов "Элемент расписания"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeTypes.Yearly">
            <summary>
            Возвращает описание типа объектов "Ежегодно"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeTypes.Daily">
            <summary>
            Возвращает описание типа объектов "Ежедневно"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeTypes.Monthely">
            <summary>
            Возвращает описание типа объектов "Ежемесячно"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeTypes.Weekl">
            <summary>
            Возвращает описание типа объектов "Еженедельно"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeTypes.Date">
            <summary>
            Возвращает описание типа объектов "Конкретная дата"
            </summary>
        </member>
        <member name="P:TFlex.DOCs.References.WorkTime.WorkTimeTypes.Periodical">
            <summary>
            Возвращает описание типа объектов "Периодически"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.WorkTimeTypes.Keys">
            <summary>
            Уникальные идентификаторы (GUID) типов объектов справочника "Расписание рабочего времени"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkTimeTypes.Keys.WorkTime">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Элемент расписания"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkTimeTypes.Keys.Yearly">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Ежегодно"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkTimeTypes.Keys.Daily">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Ежедневно"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkTimeTypes.Keys.Monthely">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Ежемесячно"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkTimeTypes.Keys.Weekl">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Еженедельно"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkTimeTypes.Keys.Date">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Конкретная дата"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.References.WorkTime.WorkTimeTypes.Keys.Periodical">
            <summary>
            Представляет уникальный идентификатор (GUID) типа "Периодически"
            </summary>
        </member>
        <member name="T:TFlex.DOCs.References.WorkTime.YearlyObject">
            <summary>
            Представляет объект "Ежегодно" справочника "Расписание рабочего времени" или порожденный от него
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Projects.Objects.Mail.Data.ProjectMailTaskData">
            <summary>
            Данные задания по проекту
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Projects.Objects.Mail.Data.ProjectMailTaskData.#ctor(TFlex.DOCs.Projects.Objects.Mail.ProjectMailTask)">
            <summary>
            Создает новый экземпляр класса
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Projects.Objects.Mail.Data.ProjectMailTaskData.GetCopyTo">
            <summary>
            Возвращает массив пользователей, которым должны приходить уведомления
            </summary>
            <returns>Пользователи для рассылки уведомлений</returns>
        </member>
        <member name="M:TFlex.DOCs.Projects.Objects.Mail.Data.ProjectMailTaskData.SetCopyTo(TFlex.DOCs.Model.References.Users.User[])">
            <summary>
            Задает массив пользователей, которым должны приходить уведомления
            </summary>
            <param name="users">Пользователи для рассылки уведомлений</param>
        </member>
        <member name="P:TFlex.DOCs.Projects.Objects.Mail.Data.ProjectMailTaskData.ResponsibleGuid">
            <summary>
            Возвращает или задает идентификатор пользователя, ответственного за выполнение задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Projects.Objects.Mail.Data.ProjectMailTaskData.Responsible">
            <summary>
            Возвращает или задает пользователя, ответственного за выполнение задания
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Projects.Objects.Mail.Data.ProjectMailTaskData.ProjectGuid">
            <summary>
            Возвращает или задает идентификатор проекта
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Projects.Objects.Mail.Data.ProjectMailTaskData.Project">
            <summary>
            Возвращает или задает проект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Projects.Objects.Mail.Data.ProjectMailTaskData.CopyTo">
            <summary>
            Возвращает или задает список идентификаторов пользователей, которым должны приходить уведомления
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Projects.Objects.Mail.ProjectMailTask">
            <summary>
            Задание по проекту
            </summary>
        </member>
        <member name="T:TFlex.DOCs.Projects.Objects.Mail.ProjectMailTask.Fields">
            <summary>
            Поля задания
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Projects.Objects.Mail.ProjectMailTask.Fields.Project">
            <summary>
            Возвращает поле "Проект"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Projects.Objects.Mail.ProjectMailTask.Fields.Responsible">
            <summary>
            Возвращает поле "Ответственный"
            </summary>
        </member>
        <member name="F:TFlex.DOCs.Projects.Objects.Mail.ProjectMailTask.Fields.CopyTo">
            <summary>
            Возвращает поле "Уведомить"
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Projects.Objects.Mail.ProjectMailTask.#ctor">
            <summary>
            Создает новый экземпляр задания
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Projects.Objects.Mail.ProjectMailTask.#ctor(TFlex.DOCs.Model.ServerConnection)">
            <summary>
            Создает новый экземпляр задания
            </summary>
        </member>
        <member name="M:TFlex.DOCs.Projects.Objects.Mail.ProjectMailTask.Send">
            <summary>
            Отправляет задание
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Projects.Objects.Mail.ProjectMailTask.CanReject">
            <summary>
            Возвращает значение, указывающее, можно ли отклонить задание
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Projects.Objects.Mail.ProjectMailTask.Responsible">
            <summary>
            Возвращает или задает ответственного
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Projects.Objects.Mail.ProjectMailTask.Project">
            <summary>
            Возвращает или задает проект
            </summary>
        </member>
        <member name="P:TFlex.DOCs.Projects.Objects.Mail.ProjectMailTask.CopyTo">
            <summary>
            Возвращает или задает список пользователей, которым должны приходить уведомления
            </summary>
        </member>
    </members>
</doc>
